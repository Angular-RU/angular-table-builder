{"version":3,"file":"table-builder.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@angular-ru/ng-table-builder/lib/table/operators/shallow-update-row.operator.ts","ng://@angular-ru/ng-table-builder/lib/table/interfaces/table-builder.external.ts","ng://@angular-ru/ng-table-builder/lib/table/config/table-builder.tokens.ts","ng://@angular-ru/ng-table-builder/lib/table/interfaces/table-builder.internal.ts","ng://@angular-ru/ng-table-builder/lib/table/services/context-menu/context-menu.interface.ts","ng://@angular-ru/ng-table-builder/lib/table/operators/deep-value.ts","ng://@angular-ru/ng-table-builder/lib/table/services/context-menu/context-menu.service.ts","ng://@angular-ru/ng-table-builder/lib/table/operators/check-value-is-empty.ts","ng://@angular-ru/ng-table-builder/lib/table/services/utils/utils.service.ts","ng://@angular-ru/ng-table-builder/lib/table/operators/detect-changes.ts","ng://@angular-ru/ng-table-builder/lib/table/components/common/modal-view-layer.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-context-menu/ngx-context-menu.component.ts","ng://@angular-ru/ng-table-builder/lib/table/services/filterable/filterable.interface.ts","ng://@angular-ru/ng-table-builder/lib/table/components/common/column-options.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-options/ngx-options.component.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/rows/template-cell.common.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/rows/template-head-th.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/rows/template-body-td.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-column/ngx-column.component.ts","ng://@angular-ru/ng-table-builder/lib/table/config/table-builder-options.ts","ng://@angular-ru/ng-table-builder/lib/table/components/common/table-content.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-header/ngx-header.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-footer/ngx-footer.component.ts","ng://@angular-ru/ng-table-builder/lib/table/worker/worker-thread.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/filterable/filter.worker.ts","ng://@angular-ru/ng-table-builder/lib/table/services/filterable/filterable.service.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/ngx-filter.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-filter/ngx-filter.component.ts","ng://@angular-ru/ng-table-builder/lib/table/operators/is-firefox.ts","ng://@angular-ru/ng-table-builder/lib/table/table-builder.api.ts","ng://@angular-ru/ng-table-builder/lib/table/animations/fade.animation.ts","ng://@angular-ru/ng-table-builder/lib/table/services/template-parser/schema-builder.class.ts","ng://@angular-ru/ng-table-builder/lib/table/services/template-parser/template-parser.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/sortable/sortable.interfaces.ts","ng://@angular-ru/ng-table-builder/lib/table/services/sortable/sort.worker.ts","ng://@angular-ru/ng-table-builder/lib/table/services/sortable/sortable.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/selection/selection.ts","ng://@angular-ru/ng-table-builder/lib/table/services/selection/selection-range.ts","ng://@angular-ru/ng-table-builder/lib/table/services/selection/selection.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/resizer/resizable.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/draggable/draggable.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/table-view-changes/ngx-table-view-changes.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/overload-scroll/overload-scroll.service.ts","ng://@angular-ru/ng-table-builder/lib/table/table-builder.component.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/wheel.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/components/common/table-line-row.ts","ng://@angular-ru/ng-table-builder/lib/table/components/table-thead/table-thead.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/table-tbody/table-tbody.component.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/auto-height.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/pipes/deep-path.pipe.ts","ng://@angular-ru/ng-table-builder/lib/table/pipes/default-value.pipe.ts","ng://@angular-ru/ng-table-builder/lib/table/components/table-cell/table-cell.component.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/observer-view.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-context-menu/ngx-context-menu-item/ngx-context-menu-item.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-context-menu/ngx-context-menu-divider/ngx-context-menu-divider.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-context-menu/ngx-context-menu-item/ngx-menu-content-place/ngx-menu-content.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-empty/ngx-empty.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-filter-viewer/ngx-filter-viewer.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/drag-icon/drag-icon.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-source-null/ngx-source-null.component.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/overflow-tooltip.directive.ts","ng://@angular-ru/ng-table-builder/lib/table-builder.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { TableRow } from '../interfaces/table-builder.external';\r\nimport { Any } from '../interfaces/table-builder.internal';\r\n\r\nexport function shallowUpdateRow(data: TableRow[], row: TableRow, key: string, value: Any): TableRow[] {\r\n    const index: number = data.indexOf(row);\r\n    return [...data.slice(0, index), { ...data[index], [key]: value }, ...data.slice(index + 1, data.length)];\r\n}\r\n","import { EventEmitter, TemplateRef } from '@angular/core';\r\nimport { Any, DeepPartial, KeyMap, TableBrowserEvent } from './table-builder.internal';\r\n\r\nexport type TableRow<T = Any> =\r\n    | Any\r\n    | {\r\n          [key: string]: T;\r\n      };\r\n\r\nexport interface TableBuilderOptions {\r\n    bufferAmount: number;\r\n    wheelMaxDelta: number;\r\n}\r\n\r\nexport enum ImplicitContext {\r\n    ROW = 'ROW',\r\n    CELL = 'CELL'\r\n}\r\n\r\nexport type TableClickEventEmitter = EventEmitter<TableEvent> | null;\r\n\r\nexport interface TableCellOptions<T = Any> {\r\n    class: string | string[] | KeyMap;\r\n    textBold: boolean;\r\n    nowrap: boolean;\r\n    useDeepPath: boolean;\r\n    style: KeyMap;\r\n    width: number;\r\n    height: number;\r\n    template: TemplateRef<T>;\r\n    context: ImplicitContext;\r\n    onClick: EventEmitter<Any>;\r\n    dblClick: EventEmitter<Any>;\r\n}\r\n\r\nexport interface TableHeadCellOptions<T = Any> {\r\n    headTitle: string;\r\n    emptyHead: boolean;\r\n}\r\n\r\nexport interface ColumnsSchema<T = Any> {\r\n    key: string;\r\n    td: TableCellOptions<T>;\r\n    th: TableCellOptions<T> & TableHeadCellOptions;\r\n    width: number;\r\n    cssStyle: string[];\r\n    cssClass: string[];\r\n    stickyLeft: boolean;\r\n    stickyRight: boolean;\r\n    resizable: boolean;\r\n    sortable: boolean;\r\n    filterable: boolean;\r\n    draggable: boolean;\r\n    customColumn: boolean;\r\n    verticalLine: boolean;\r\n    isModel: boolean;\r\n    isVisible: boolean;\r\n}\r\n\r\nexport interface TableUpdateSchema<T = Any> {\r\n    columns: SimpleSchemaColumns;\r\n    name: string | null;\r\n}\r\n\r\nexport interface TableEvent<T = Any> {\r\n    value: T;\r\n    row: TableRow;\r\n    event: TableBrowserEvent;\r\n    preventDefault: () => void;\r\n}\r\n\r\nexport interface ContextItemEvent {\r\n    preventDefault(): void;\r\n}\r\n\r\nexport type SimpleSchemaColumns = Array<DeepPartial<ColumnsSchema>>;\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const NGX_TABLE_OPTIONS: InjectionToken<string> = new InjectionToken('NGX_TABLE_OPTIONS');\r\n","import { QueryList } from '@angular/core';\r\n\r\nexport enum PrimaryKey {\r\n    ID = 'id'\r\n}\r\n\r\nexport enum TableSimpleChanges {\r\n    SOURCE_KEY = 'source',\r\n    SCHEMA_COLUMNS = 'schemaColumns'\r\n}\r\n\r\nexport interface DynamicHeightOptions {\r\n    detect: boolean;\r\n    inViewport: boolean;\r\n    height: number;\r\n    columnHeight: number;\r\n    statusRendered: boolean;\r\n    sourceLength: number;\r\n}\r\n\r\nexport interface ScrollOffsetStatus {\r\n    offset: boolean;\r\n}\r\n\r\nexport interface RecalculatedStatus {\r\n    recalculateHeight: boolean;\r\n}\r\n\r\nexport interface KeyMap<T = Any> {\r\n    [key: string]: T;\r\n}\r\n\r\nexport type RowId = string | number;\r\n\r\nexport type Fn<T = Any, U = Any> = (...args: T[]) => U;\r\n\r\nexport type Any = any; // NOSONAR\r\n\r\nexport interface SelectionStatus {\r\n    status: boolean;\r\n}\r\n\r\nexport enum KeyType {\r\n    KEYDOWN = 'keydown',\r\n    KEYUP = 'keyup'\r\n}\r\n\r\nexport type TableBrowserEvent = Event | MouseEvent | KeyboardEvent;\r\n\r\nexport interface ResizeEvent {\r\n    event: TableBrowserEvent;\r\n    key: string;\r\n}\r\n\r\n// Bug: 'QueryList' is imported from external module '@angular/core' but never used\r\nexport type QueryListRef<T> = QueryList<T>;\r\n\r\nexport interface TemplateKeys {\r\n    allRenderedKeys: string[];\r\n    simpleRenderedKeys: Set<string>;\r\n    overridingRenderedKeys: Set<string>;\r\n}\r\n\r\nexport type Resolver<T> = (value?: T | PromiseLike<T>) => void;\r\n\r\nexport interface MousePosition {\r\n    left: number;\r\n    top: number;\r\n}\r\n\r\nexport type DeepPartial<T = Any> = {\r\n    [P in keyof T]?: T[P] extends Array<infer U>\r\n        ? Array<DeepPartial<U>>\r\n        : T[P] extends ReadonlyArray<infer R>\r\n        ? ReadonlyArray<DeepPartial<R>>\r\n        : DeepPartial<T[P]>;\r\n};\r\n","import { TableRow } from '../../interfaces/table-builder.external';\r\nimport { Any, MousePosition } from '../../interfaces/table-builder.internal';\r\n\r\nexport class ContextMenuState {\r\n    public opened: boolean = false;\r\n    public position: MousePosition = { left: null, top: null };\r\n    public key: string = null;\r\n    public item: TableRow = null;\r\n    public value: Any = null;\r\n\r\n    constructor(state: Partial<ContextMenuState> = null) {\r\n        if (state) {\r\n            this.opened = state.opened;\r\n            this.position = state.position;\r\n            this.key = state.key;\r\n            this.item = state.item;\r\n            this.value = state.value;\r\n        }\r\n    }\r\n}\r\n","import { Any } from '../interfaces/table-builder.internal';\r\n\r\nexport function getDeepValue(obj: Any, path: string): Any {\r\n    if (!(path && path.length)) {\r\n        return obj;\r\n    }\r\n\r\n    const parts: string[] = path.split('.');\r\n    let result: Any = obj;\r\n    let index: number = 0;\r\n\r\n    for (; result && index < parts.length; ++index) {\r\n        result = result[parts[index]];\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { ContextMenuState } from './context-menu.interface';\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { getDeepValue } from '../../operators/deep-value';\r\n\r\n@Injectable()\r\nexport class ContextMenuService {\r\n    public state: Partial<ContextMenuState> = {};\r\n    public readonly events: Subject<void> = new Subject();\r\n\r\n    public openContextMenu(event: MouseEvent, key: string = null, row: TableRow = null): void {\r\n        this.state = new ContextMenuState({\r\n            key,\r\n            item: row,\r\n            opened: true,\r\n            value: getDeepValue(row, key) || null,\r\n            position: { left: event.clientX, top: event.clientY }\r\n        });\r\n\r\n        this.events.next();\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    public close(): void {\r\n        this.state = new ContextMenuState();\r\n        this.events.next();\r\n    }\r\n}\r\n","import { Any } from '../interfaces/table-builder.internal';\r\n\r\nexport function checkValueIsEmpty(value: Any): boolean {\r\n    if (typeof value === 'number') {\r\n        return isNaN(value) || value === Infinity;\r\n    } else if (typeof value === 'string') {\r\n        return value.trim().length === 0;\r\n    } else {\r\n        return !value;\r\n    }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { Any, Fn, KeyMap } from '../../interfaces/table-builder.internal';\r\nimport { UtilsInterface } from './utils.interface';\r\nimport { checkValueIsEmpty } from '../../operators/check-value-is-empty';\r\n\r\n@Injectable()\r\nexport class UtilsService implements UtilsInterface {\r\n    public static readonly SCROLLBAR_WIDTH: number = 10;\r\n\r\n    constructor(private readonly zone: NgZone) {}\r\n\r\n    public get bodyRect(): ClientRect | DOMRect {\r\n        return document.querySelector('body').getBoundingClientRect();\r\n    }\r\n\r\n    private static replaceUndefinedOrNull(_: string, value: unknown): unknown {\r\n        return checkValueIsEmpty(value) ? undefined : value;\r\n    }\r\n\r\n    public clone<T = Any>(obj: T): T {\r\n        return JSON.parse(JSON.stringify(obj || null)) || {};\r\n    }\r\n\r\n    public isObject<T = object>(obj: T): boolean {\r\n        return obj === Object(obj);\r\n    }\r\n\r\n    public mergeDeep<T>(target: T, source: T): T {\r\n        const output: T = { ...target };\r\n        if (this.isObject(target) && this.isObject(source)) {\r\n            Object.keys(source).forEach((key: string) => {\r\n                if (this.isObject(source[key])) {\r\n                    if (!(key in target)) {\r\n                        Object.assign(output, { [key]: source[key] });\r\n                    } else {\r\n                        output[key] = this.mergeDeep(target[key], source[key]);\r\n                    }\r\n                } else {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                }\r\n            });\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    public flattenKeysByRow(row: TableRow, parentKey: string = null, keys: string[] = []): string[] {\r\n        for (const key in row) {\r\n            if (!row.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            const element: Any = row[key];\r\n            const isObject: boolean = typeof element === 'object' && element !== null && !Array.isArray(element);\r\n\r\n            if (isObject) {\r\n                const implicitKey: string = parentKey ? `${parentKey}.${key}` : key;\r\n                this.flattenKeysByRow(row[key], implicitKey, keys);\r\n            } else {\r\n                keys.push(parentKey ? `${parentKey}.${key}` : key);\r\n            }\r\n        }\r\n\r\n        return keys;\r\n    }\r\n\r\n    public clean(obj: KeyMap): KeyMap {\r\n        return JSON.parse(JSON.stringify(obj, UtilsService.replaceUndefinedOrNull.bind(this)));\r\n    }\r\n\r\n    public requestAnimationFrame(callback: Fn): Promise<void> {\r\n        return new Promise((resolve: Fn): void => {\r\n            this.zone.runOutsideAngular(() => {\r\n                window.requestAnimationFrame(() => {\r\n                    callback();\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    public microtask(callback: Fn): Promise<void> {\r\n        return new Promise((resolve: Fn): void => {\r\n            callback();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    public macrotask(callback: Fn, time: number = 0): Promise<void> {\r\n        return new Promise((resolve: Fn): void => {\r\n            this.zone.runOutsideAngular(() => {\r\n                window.setTimeout(() => {\r\n                    callback();\r\n                    resolve();\r\n                }, time);\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectorRef, ViewRef } from '@angular/core';\r\n\r\nexport function detectChanges(cd: ChangeDetectorRef): void {\r\n    if (!(cd as ViewRef).destroyed) {\r\n        cd.detectChanges();\r\n    }\r\n}\r\n","import { ApplicationRef, ChangeDetectorRef, ElementRef, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { UtilsService } from '../../services/utils/utils.service';\r\nimport { Fn, MousePosition } from '../../interfaces/table-builder.internal';\r\nimport { detectChanges } from '../../operators/detect-changes';\r\n\r\nexport interface PositionState {\r\n    key: string;\r\n    opened: boolean;\r\n    position: MousePosition;\r\n}\r\n\r\nexport abstract class ModalViewLayer<T extends PositionState> implements OnDestroy {\r\n    public width: number = null;\r\n    public height: number = null;\r\n    public isViewed: boolean = false;\r\n    public abstract closeTime: number;\r\n    protected subscription: Subscription = null;\r\n    protected abstract targetElement: ElementRef<HTMLDivElement>;\r\n    protected taskId: number;\r\n    private clickListener: Fn;\r\n\r\n    protected constructor(\r\n        protected readonly cd: ChangeDetectorRef,\r\n        protected readonly app: ApplicationRef,\r\n        protected readonly utils: UtilsService,\r\n        protected readonly ngZone: NgZone\r\n    ) {}\r\n\r\n    public get left(): number {\r\n        return (this.state.position && this.state.position.left) || 0;\r\n    }\r\n\r\n    public get top(): number {\r\n        return (this.state.position && this.state.position.top) || 0;\r\n    }\r\n\r\n    public get overflowX(): number {\r\n        const overflowX: number = this.width + this.left - this.utils.bodyRect.width;\r\n        return overflowX > 0 ? overflowX + UtilsService.SCROLLBAR_WIDTH : 0;\r\n    }\r\n\r\n    public get overflowY(): number {\r\n        const overflowY: number = this.height + this.top - this.utils.bodyRect.height;\r\n        return overflowY > 0 ? overflowY + UtilsService.SCROLLBAR_WIDTH : 0;\r\n    }\r\n\r\n    public abstract get state(): Partial<T>;\r\n\r\n    public abstract close(event: MouseEvent): void;\r\n\r\n    public updateView(): void {\r\n        this.cd.detectChanges();\r\n        this.app.tick();\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.removeEventListener();\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    protected update(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.setTimeout(() => {\r\n                this.isViewed = this.state.opened;\r\n                this.updateView();\r\n\r\n                if (this.state.opened) {\r\n                    this.removeEventListener();\r\n                    this.preventClose();\r\n                    this.listenInsideClick();\r\n                }\r\n\r\n                window.setTimeout(() => this.updateView());\r\n            });\r\n        });\r\n    }\r\n\r\n    private listenInsideClick(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.clickListener = (event: MouseEvent): void => {\r\n                try {\r\n                    const origin: Node = this.targetElement.nativeElement;\r\n                    const target: Node = event.target as Node;\r\n                    if (!origin.contains(target)) {\r\n                        this.removeListener(event);\r\n                        this.taskId = window.setTimeout(() => this.removeListener(event), this.closeTime);\r\n                    }\r\n                } catch (e) {\r\n                    this.removeEventListener();\r\n                }\r\n            };\r\n\r\n            window.addEventListener('mousedown', this.clickListener, true);\r\n        });\r\n    }\r\n\r\n    private removeListener(event: MouseEvent): void {\r\n        this.removeEventListener();\r\n        this.close(event);\r\n        detectChanges(this.cd);\r\n    }\r\n\r\n    private removeEventListener(): void {\r\n        window.removeEventListener('mousedown', this.clickListener, true);\r\n    }\r\n\r\n    public preventClose(): void {\r\n        window.clearTimeout(this.taskId);\r\n    }\r\n}\r\n","import {\n    ApplicationRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Input,\n    NgZone,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { ContextMenuState } from '../../services/context-menu/context-menu.interface';\nimport { UtilsService } from '../../services/utils/utils.service';\nimport { ModalViewLayer } from '../common/modal-view-layer';\n\n// @dynamic\n@Component({\n    selector: 'ngx-context-menu',\n    templateUrl: './ngx-context-menu.component.html',\n    styleUrls: ['./ngx-context-menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxContextMenuComponent extends ModalViewLayer<ContextMenuState> implements OnInit {\n    @Input() public width: number = 300;\n    @Input() public height: number = 300;\n    @Input('max-height') public maxHeight: number = 400;\n    public closeTime: number = 0;\n\n    @ViewChild('targetElement', { static: false })\n    protected targetElement: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private readonly contextMenu: ContextMenuService,\n        protected readonly cd: ChangeDetectorRef,\n        protected readonly app: ApplicationRef,\n        protected readonly utils: UtilsService,\n        protected readonly ngZone: NgZone\n    ) {\n        super(cd, app, utils, ngZone);\n    }\n\n    public get state(): Partial<ContextMenuState> {\n        return this.contextMenu.state;\n    }\n\n    public ngOnInit(): void {\n        this.subscription = this.contextMenu.events.subscribe(() => this.update());\n    }\n\n    public close(event: MouseEvent): void {\n        this.contextMenu.close();\n        event.preventDefault();\n    }\n}\n","import { TableRow } from '../../interfaces/table-builder.external';\r\nimport { Fn, KeyMap, MousePosition } from '../../interfaces/table-builder.internal';\r\n\r\nexport interface FilterGlobalOpts {\r\n    value: string;\r\n    type: TableFilterType;\r\n}\r\n\r\nexport interface FilterColumnsOpts {\r\n    isEmpty: boolean;\r\n    values: KeyMap<string>;\r\n    types: KeyMap<TableFilterType>;\r\n}\r\n\r\nexport interface FilterableMessage {\r\n    source: TableRow[];\r\n    types: typeof TableFilterType;\r\n    global: FilterGlobalOpts;\r\n    columns: FilterColumnsOpts;\r\n}\r\n\r\nexport enum TableFilterType {\r\n    START_WITH = 'START_WITH',\r\n    END_WITH = 'END_WITH',\r\n    CONTAINS = 'CONTAINS',\r\n    DOES_NOT_CONTAIN = 'DOES_NOT_CONTAIN',\r\n    EQUALS = 'EQUALS',\r\n    DOES_NOT_EQUAL = 'DOES_NOT_EQUAL'\r\n}\r\n\r\nexport interface FilterEvent {\r\n    value: string;\r\n    type: TableFilterType;\r\n}\r\n\r\nexport class FilterStateEvent {\r\n    public key: string = null;\r\n    public opened: boolean = null;\r\n    public position: MousePosition = { left: null, top: null };\r\n}\r\n\r\nexport interface FilterWorkerEvent {\r\n    source: TableRow[];\r\n    fireSelection: Fn;\r\n}\r\n","import { Input } from '@angular/core';\r\nimport { TableFilterType } from '../../services/filterable/filterable.interface';\r\n\r\nexport class ColumnOptions {\r\n    @Input() public nowrap: boolean = null;\r\n    @Input() public width: number = null;\r\n    @Input() public resizable: boolean = null;\r\n    @Input() public sortable: boolean = null;\r\n    @Input() public filterable: boolean = null;\r\n    @Input() public draggable: boolean = null;\r\n    @Input('filter-type') public filterType: TableFilterType = null;\r\n    @Input('css-class') public cssClass: string[];\r\n    @Input('css-style') public cssStyle: string[];\r\n}\r\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { ColumnOptions } from '../common/column-options';\r\n\r\n@Component({\r\n    selector: 'ngx-options',\r\n    templateUrl: './ngx-options.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgxOptionsComponent extends ColumnOptions {}\r\n","import { EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\nimport { Any, KeyMap } from '../../interfaces/table-builder.internal';\r\nimport { TableEvent } from '../../interfaces/table-builder.external';\r\n\r\nexport abstract class TemplateCellCommon {\r\n    public type: string = null;\r\n    @Input() public row: boolean = null;\r\n    @Input() public bold: boolean = null;\r\n    @Input() public nowrap: boolean = true;\r\n    @Input() public width: number = null;\r\n    @Input() public height: number = null;\r\n    @Input('ng-style') public cssStyles: KeyMap = null;\r\n    @Input('ng-class') public cssClasses: string | string[] | KeyMap = null;\r\n    @Output() public onClick: EventEmitter<TableEvent> = new EventEmitter();\r\n    @Output() public dblClick: EventEmitter<TableEvent> = new EventEmitter();\r\n    protected constructor(public template: TemplateRef<unknown>) {}\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\nimport { TemplateCellCommon } from './template-cell.common';\r\n\r\n@Directive({ selector: 'ng-template[ngx-th]' })\r\nexport class TemplateHeadThDirective extends TemplateCellCommon {\r\n    @Input('ngx-th') public type: string = null;\r\n    public nowrap: boolean = false;\r\n\r\n    constructor(public template: TemplateRef<unknown>) {\r\n        super(template);\r\n        this.bold = true;\r\n    }\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\nimport { TemplateCellCommon } from './template-cell.common';\r\n\r\n@Directive({ selector: 'ng-template[ngx-td]' })\r\nexport class TemplateBodyTdDirective extends TemplateCellCommon {\r\n    @Input('ngx-td') public type: string = null;\r\n    constructor(public template: TemplateRef<unknown>) {\r\n        super(template);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ContentChild, Input, ViewEncapsulation } from '@angular/core';\r\nimport { TemplateHeadThDirective } from '../../directives/rows/template-head-th.directive';\r\nimport { TemplateBodyTdDirective } from '../../directives/rows/template-body-td.directive';\r\nimport { ColumnOptions } from '../common/column-options';\r\n\r\n@Component({\r\n    selector: 'ngx-column',\r\n    templateUrl: './ngx-column.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgxColumnComponent extends ColumnOptions {\r\n    @Input() public key: string = null;\r\n    @Input('sticky') public stickyLeft: boolean = false;\r\n    @Input('empty-head') public emptyHead: boolean = null;\r\n    @Input('head-title') public headTitle: string = null;\r\n    @Input('custom-key') public customKey: boolean = false;\r\n    @Input('important-template') public importantTemplate: boolean = false;\r\n    @Input('sticky-end') public stickyRight: boolean = false;\r\n    @Input('vertical-line') public verticalLine: boolean = false;\r\n    @ContentChild(TemplateHeadThDirective, { static: false }) public th: TemplateHeadThDirective;\r\n    @ContentChild(TemplateBodyTdDirective, { static: false }) public td: TemplateBodyTdDirective;\r\n\r\n    public withKey(key: string): NgxColumnComponent {\r\n        this.key = key;\r\n        return this;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TableBuilderOptions } from '../interfaces/table-builder.external';\r\n\r\n@Injectable()\r\nexport class TableBuilderOptionsImpl implements TableBuilderOptions {\r\n    public static readonly MACRO_TIME: number = 1000;\r\n    public static readonly TIME_RELOAD: number = 400;\r\n    public static readonly COLUMN_RESIZE_MIN_WIDTH: number = 50;\r\n    public static readonly FRAME_TIME: number = 66;\r\n    public static readonly ROW_HEIGHT: number = 45;\r\n    public static readonly TIME_IDLE: number = 200;\r\n    public wheelMaxDelta: number = 300;\r\n    public bufferAmount: number = 0;\r\n}\r\n","import { Input } from '@angular/core';\r\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\r\n\r\nexport class TableContent {\r\n    @Input() public height: number = TableBuilderOptionsImpl.ROW_HEIGHT;\r\n    @Input('content-cell') public contentCell: boolean = null;\r\n    @Input('align-center') public alignCenter: boolean = null;\r\n    @Input('css-class') public cssClasses: string[] = null;\r\n    @Input() public bold: boolean = null;\r\n}\r\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { TableContent } from '../common/table-content';\n\n@Component({\n    selector: 'ngx-header',\n    templateUrl: './ngx-header.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxHeaderComponent extends TableContent {}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { TableContent } from '../common/table-content';\n\n@Component({\n    selector: 'ngx-footer',\n    templateUrl: './ngx-footer.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxFooterComponent extends TableContent {}\n","import { Injectable } from '@angular/core';\r\nimport { Executor, WebWorkerThread } from './worker-thread.interface';\r\nimport { Any, Fn } from '../interfaces/table-builder.internal';\r\n\r\n@Injectable()\r\nexport class WebWorkerThreadService implements WebWorkerThread {\r\n    private readonly workerFunctionToUrlMap: WeakMap<Fn, string> = new WeakMap();\r\n    private readonly promiseToWorkerMap: WeakMap<Promise<Any>, Worker> = new WeakMap();\r\n\r\n    private static createWorkerUrl(resolve: Fn): string {\r\n        const resolveString: string = resolve.toString();\r\n\r\n        const webWorkerTemplate: string = `\r\n            self.addEventListener('message', function(e) {\r\n                postMessage((${resolveString})(e.data));\r\n            });\r\n        `;\r\n\r\n        const blob: Blob = new Blob([webWorkerTemplate], { type: 'text/javascript' });\r\n        return URL.createObjectURL(blob);\r\n    }\r\n\r\n    public run<T, K>(workerFunction: (input: K) => T, data?: K): Promise<T> {\r\n        const url: string = this.getOrCreateWorkerUrl(workerFunction);\r\n        return this.runUrl(url, data);\r\n    }\r\n\r\n    public runUrl(url: string, data?: Any): Promise<Any> {\r\n        const worker: Worker = new Worker(url);\r\n        const promise: Promise<Any> = this.createPromiseForWorker(worker, data);\r\n        const promiseCleaner: Any = this.createPromiseCleaner(promise);\r\n\r\n        this.promiseToWorkerMap.set(promise, worker);\r\n\r\n        promise.then(promiseCleaner).catch(promiseCleaner);\r\n\r\n        return promise;\r\n    }\r\n\r\n    public terminate<T>(promise: Promise<T>): Promise<T> {\r\n        return this.removePromise(promise);\r\n    }\r\n\r\n    public getWorker(promise: Promise<Any>): Worker {\r\n        return this.promiseToWorkerMap.get(promise);\r\n    }\r\n\r\n    private createPromiseForWorker<T>(worker: Worker, data: Any): Promise<T> {\r\n        return new Promise<T>((resolve: Executor<Any>, reject: Executor<Any>): void => {\r\n            worker.addEventListener('message', (event: MessageEvent) => resolve(event.data));\r\n            worker.addEventListener('error', reject);\r\n            worker.postMessage(data);\r\n        });\r\n    }\r\n\r\n    private getOrCreateWorkerUrl(fn: Fn): string {\r\n        if (!this.workerFunctionToUrlMap.has(fn)) {\r\n            const url: string = WebWorkerThreadService.createWorkerUrl(fn);\r\n            this.workerFunctionToUrlMap.set(fn, url);\r\n            return url;\r\n        }\r\n        return this.workerFunctionToUrlMap.get(fn);\r\n    }\r\n\r\n    private createPromiseCleaner<T>(promise: Promise<T>): (input: Any) => T {\r\n        return (event: T): T => {\r\n            this.removePromise(promise);\r\n            return event;\r\n        };\r\n    }\r\n\r\n    private removePromise<T>(promise: Promise<T>): Promise<T> {\r\n        const worker: Worker = this.promiseToWorkerMap.get(promise);\r\n\r\n        if (worker) {\r\n            worker.terminate();\r\n        }\r\n\r\n        this.promiseToWorkerMap.delete(promise);\r\n        return promise;\r\n    }\r\n}\r\n","import { FilterableMessage, FilterGlobalOpts, TableFilterType } from './filterable.interface';\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { KeyMap } from '../../interfaces/table-builder.internal';\r\n\r\nexport function filterAllWorker({ source, global, types, columns }: FilterableMessage): TableRow[] {\r\n    enum Terminate {\r\n        CONTINUE = -1,\r\n        BREAK = 0,\r\n        NEXT = 1\r\n    }\r\n\r\n    const { value, type }: FilterGlobalOpts = global;\r\n    let result: TableRow[] = source;\r\n\r\n    if (value) {\r\n        result = source.filter((item: TableRow) => {\r\n            return type === types.DOES_NOT_CONTAIN ? !includes(JSON.stringify(item), value) : globalFilter(item);\r\n        });\r\n    }\r\n\r\n    if (!columns.isEmpty) {\r\n        result = result.filter((item: TableRow) => multipleFilter(item));\r\n    }\r\n\r\n    function globalFilter(item: TableRow): boolean {\r\n        let satisfiesItem: boolean = false;\r\n        const flattenedItem: KeyMap = flatten(item);\r\n\r\n        for (const keyModel of Object.keys(flattenedItem)) {\r\n            const fieldValue: string = String(flattenedItem[keyModel]);\r\n            const [terminate, satisfies]: Satisfies = getSatisfies(fieldValue, value, type);\r\n\r\n            satisfiesItem = satisfies;\r\n\r\n            if (terminate === Terminate.CONTINUE) {\r\n                continue;\r\n            } else if (terminate === Terminate.BREAK) {\r\n                break;\r\n            }\r\n\r\n            if (satisfiesItem) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return satisfiesItem;\r\n    }\r\n\r\n    function multipleFilter(item: TableRow): boolean {\r\n        let matches: boolean = true;\r\n\r\n        for (const fieldKey of Object.keys(columns.values)) {\r\n            const fieldValue: string = String(getValueByPath(item, fieldKey) || '').trim();\r\n            const findKeyValue: string = String(columns.values[fieldKey]);\r\n            const fieldType: TableFilterType = columns.types[fieldKey];\r\n            const [terminate, satisfies]: Satisfies = getSatisfies(fieldValue, findKeyValue, fieldType);\r\n            matches = matches && satisfies;\r\n\r\n            if (!matches || terminate === Terminate.BREAK) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    type Satisfies = [Terminate, boolean];\r\n\r\n    function getSatisfies(field: string, substring: string, fieldType: TableFilterType): Satisfies {\r\n        let satisfies: boolean = false;\r\n        let terminate: Terminate = Terminate.NEXT;\r\n\r\n        if (fieldType === types.START_WITH) {\r\n            satisfies = field.toLocaleLowerCase().startsWith(substring.toLocaleLowerCase());\r\n        } else if (fieldType === types.END_WITH) {\r\n            const regexp: RegExp = new RegExp(`${escaped(substring)}$`);\r\n            satisfies = !!field.match(regexp);\r\n        } else if (fieldType === types.CONTAINS) {\r\n            satisfies = includes(field, substring);\r\n        } else if (fieldType === types.EQUALS) {\r\n            satisfies = field === substring;\r\n        } else if (fieldType === types.DOES_NOT_EQUAL) {\r\n            if (field !== substring) {\r\n                satisfies = true;\r\n                terminate = Terminate.CONTINUE;\r\n            } else {\r\n                satisfies = false;\r\n                terminate = Terminate.BREAK;\r\n            }\r\n        }\r\n\r\n        return [terminate, satisfies];\r\n    }\r\n\r\n    function includes(origin: string, substring: string): boolean {\r\n        return origin.toLocaleLowerCase().includes(substring.toLocaleLowerCase());\r\n    }\r\n\r\n    function escaped(escapedValue: string): string {\r\n        return escapedValue.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n    }\r\n\r\n    function flatten<T = string>(object: KeyMap, excludeKeys: string[] = []): KeyMap<T> {\r\n        const depthGraph: KeyMap<T> = {};\r\n\r\n        for (const key in object) {\r\n            if (object.hasOwnProperty(key) && !excludeKeys.includes(key)) {\r\n                mutate<T>(object, depthGraph, key);\r\n            }\r\n        }\r\n\r\n        return depthGraph;\r\n    }\r\n\r\n    function getValueByPath(object: KeyMap, path: string): KeyMap | undefined {\r\n        return path ? path.split('.').reduce((str: string, key: string) => str && str[key], object) : object;\r\n    }\r\n\r\n    function mutate<T>(object: KeyMap, depthGraph: KeyMap<T>, key: string): void {\r\n        const isObject: boolean = typeof object[key] === 'object' && object[key] !== null;\r\n        if (isObject) {\r\n            const flatObject: KeyMap = flatten(object[key]);\r\n            for (const path in flatObject) {\r\n                if (flatObject.hasOwnProperty(path)) {\r\n                    depthGraph[`${key}.${path}`] = flatObject[path];\r\n                }\r\n            }\r\n        } else {\r\n            depthGraph[key] = object[key];\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { ApplicationRef, Injectable, NgZone } from '@angular/core';\r\nimport { ReplaySubject, Subject } from 'rxjs';\r\n\r\nimport { WebWorkerThreadService } from '../../worker/worker-thread.service';\r\nimport { UtilsService } from '../utils/utils.service';\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\r\nimport {\r\n    FilterableMessage,\r\n    FilterEvent,\r\n    FilterStateEvent,\r\n    TableFilterType,\r\n    FilterWorkerEvent\r\n} from './filterable.interface';\r\nimport { filterAllWorker } from './filter.worker';\r\nimport { KeyMap, Resolver } from '../../interfaces/table-builder.internal';\r\n\r\nconst { TIME_IDLE }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\r\n\r\n@Injectable()\r\nexport class FilterableService {\r\n    public filterValue: string = null;\r\n    public definition: KeyMap<string> = {};\r\n    public state: FilterStateEvent = new FilterStateEvent();\r\n    public types: typeof TableFilterType = TableFilterType;\r\n    public readonly filterOpenEvents: Subject<void> = new Subject();\r\n    public readonly events: Subject<FilterEvent> = new ReplaySubject();\r\n    public filterType: TableFilterType;\r\n    public filterTypeDefinition: KeyMap<TableFilterType> = {};\r\n    public filtering: boolean = false;\r\n    private previousFiltering: boolean = false;\r\n\r\n    constructor(\r\n        private readonly thread: WebWorkerThreadService,\r\n        private readonly utils: UtilsService,\r\n        private readonly ngZone: NgZone,\r\n        private readonly app: ApplicationRef\r\n    ) {}\r\n\r\n    public get globalFilterValue(): string {\r\n        return this.filterValue ? String(this.filterValue).trim() : null;\r\n    }\r\n\r\n    public changeFilteringStatus(): void {\r\n        this.filtering = this.filterValueExist;\r\n\r\n        if (this.filtering !== this.previousFiltering) {\r\n            this.events.next({ value: null, type: null });\r\n        }\r\n\r\n        this.previousFiltering = this.filtering;\r\n    }\r\n\r\n    public get filterValueExist(): boolean {\r\n        const keyFilterValues: string = Object.values(this.definition).reduce(\r\n            (acc: string, next: string) => acc + next,\r\n            ''\r\n        );\r\n        return (this.globalFilterValue && this.globalFilterValue.length > 0) || keyFilterValues.length > 0;\r\n    }\r\n\r\n    public openFilter(key: string, event: MouseEvent): void {\r\n        this.state = { opened: true, key, position: { left: event.clientX, top: event.clientY } };\r\n        this.filterOpenEvents.next();\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    public closeFilter(): void {\r\n        this.state = new FilterStateEvent();\r\n        this.filterOpenEvents.next();\r\n    }\r\n\r\n    public filter(source: TableRow[]): Promise<FilterWorkerEvent> {\r\n        const type: TableFilterType = this.filterType;\r\n        const value: string = this.globalFilterValue ? String(this.globalFilterValue).trim() : null;\r\n\r\n        return new Promise((resolve: Resolver<FilterWorkerEvent>): void => {\r\n            const message: FilterableMessage = {\r\n                source,\r\n                types: TableFilterType,\r\n                global: { value, type },\r\n                columns: {\r\n                    values: this.definition,\r\n                    types: this.filterTypeDefinition,\r\n                    isEmpty: this.checkIsEmpty(this.definition)\r\n                }\r\n            };\r\n\r\n            this.thread.run<TableRow[], FilterableMessage>(filterAllWorker, message).then((sorted: TableRow[]) => {\r\n                this.ngZone.runOutsideAngular(() =>\r\n                    window.setTimeout(() => {\r\n                        resolve({\r\n                            source: sorted,\r\n                            fireSelection: (): void => {\r\n                                window.setTimeout(() => {\r\n                                    this.events.next({ value, type });\r\n                                    this.app.tick();\r\n                                }, TIME_IDLE);\r\n                            }\r\n                        });\r\n                    }, TIME_IDLE)\r\n                );\r\n            });\r\n        });\r\n    }\r\n\r\n    private checkIsEmpty(definition: KeyMap<string>): boolean {\r\n        return Object.keys(this.utils.clean(definition)).length === 0;\r\n    }\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\n@Directive({ selector: 'ng-template[ngx-filter]' })\r\nexport class NgxFilterDirective {\r\n    @Input('ngx-filter') public type: string = null;\r\n    constructor(public template: TemplateRef<unknown>) {}\r\n}\r\n","import {\n    ApplicationRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    Input,\n    NgZone,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FilterableService } from '../../services/filterable/filterable.service';\nimport { FilterStateEvent } from '../../services/filterable/filterable.interface';\nimport { ModalViewLayer } from '../common/modal-view-layer';\nimport { UtilsService } from '../../services/utils/utils.service';\nimport { NgxFilterDirective } from '../../directives/ngx-filter.directive';\n\n@Component({\n    selector: 'ngx-filter',\n    templateUrl: './ngx-filter.component.html',\n    styleUrls: ['./ngx-filter.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxFilterComponent extends ModalViewLayer<FilterStateEvent> implements OnInit {\n    @Input() public width: number = 300;\n    @Input() public height: number = null;\n    @Input('max-height') public maxHeight: number = null;\n    public closeTime: number = 150;\n    public readonly leftX: number = 10;\n    public readonly topY: number = 50;\n\n    @ContentChild(NgxFilterDirective, { static: false })\n    public filter: NgxFilterDirective;\n\n    @ViewChild('targetElement', { static: false })\n    protected targetElement: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private readonly filterable: FilterableService,\n        protected readonly cd: ChangeDetectorRef,\n        protected readonly app: ApplicationRef,\n        protected readonly utils: UtilsService,\n        protected readonly ngZone: NgZone\n    ) {\n        super(cd, app, utils, ngZone);\n    }\n\n    public get state(): Partial<FilterStateEvent> {\n        return this.filterable.state;\n    }\n\n    public close(event: MouseEvent): void {\n        this.filterable.closeFilter();\n        event.preventDefault();\n    }\n\n    public ngOnInit(): void {\n        this.subscription = this.filterable.filterOpenEvents.subscribe(() => this.update());\n    }\n}\n","export function isFirefox(userAgent: string = null): boolean {\r\n    return (userAgent || navigator.userAgent).toLowerCase().indexOf('firefox') > -1;\r\n}\r\n","import { CdkDragSortEvent } from '@angular/cdk/drag-drop';\r\nimport {\r\n    AfterContentInit,\r\n    AfterViewChecked,\r\n    AfterViewInit,\r\n    ApplicationRef,\r\n    ChangeDetectorRef,\r\n    ContentChild,\r\n    ContentChildren,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewRef\r\n} from '@angular/core';\r\n\r\nimport { NgxTableViewChangesService } from '../table/services/table-view-changes/ngx-table-view-changes.service';\r\nimport { Fn, KeyMap, PrimaryKey, QueryListRef, ResizeEvent } from './interfaces/table-builder.internal';\r\nimport { ColumnsSchema, SimpleSchemaColumns, TableRow } from './interfaces/table-builder.external';\r\nimport { NgxContextMenuComponent } from './components/ngx-context-menu/ngx-context-menu.component';\r\nimport { TemplateParserService } from './services/template-parser/template-parser.service';\r\nimport { NgxOptionsComponent } from './components/ngx-options/ngx-options.component';\r\nimport { NgxColumnComponent } from './components/ngx-column/ngx-column.component';\r\nimport { ContextMenuService } from './services/context-menu/context-menu.service';\r\nimport { NgxHeaderComponent } from './components/ngx-header/ngx-header.component';\r\nimport { NgxFooterComponent } from './components/ngx-footer/ngx-footer.component';\r\nimport { NgxFilterComponent } from './components/ngx-filter/ngx-filter.component';\r\nimport { FilterWorkerEvent } from './services/filterable/filterable.interface';\r\nimport { DraggableService } from './services/draggable/draggable.service';\r\nimport { FilterableService } from './services/filterable/filterable.service';\r\nimport { SelectionService } from './services/selection/selection.service';\r\nimport { TableBuilderOptionsImpl } from './config/table-builder-options';\r\nimport { ResizableService } from './services/resizer/resizable.service';\r\nimport { SortableService } from './services/sortable/sortable.service';\r\nimport { UtilsService } from './services/utils/utils.service';\r\nimport { SelectionMap } from './services/selection/selection';\r\nimport { isFirefox } from './operators/is-firefox';\r\n\r\nconst { ROW_HEIGHT, MACRO_TIME, TIME_IDLE }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\r\n\r\nexport abstract class TableBuilderApiImpl\r\n    implements OnChanges, OnInit, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy {\r\n    @Input() public height: number;\r\n    @Input() public width: string;\r\n    @Input() public source: TableRow[] = null;\r\n    @Input() public keys: string[] = [];\r\n    @Input() public striped: boolean = true;\r\n    @Input() public lazy: boolean = true;\r\n    @Input() public name: string = null;\r\n    @Input('sort-types') public sortTypes: KeyMap = null;\r\n    @Input('exclude-keys') public excludeKeys: Array<string | RegExp> = [];\r\n    @Input('auto-width') public autoWidth: boolean = false;\r\n    @Input('auto-height') public autoHeightDetect: boolean = true;\r\n    @Input('native-scrollbar') public nativeScrollbar: boolean = false;\r\n    @Input('primary-key') public primaryKey: string = PrimaryKey.ID;\r\n    @Input('column-width') public columnWidth: string | number = null;\r\n    @Input('row-height') public rowHeight: string | number = null;\r\n    @Input('async-columns') public asyncColumns: boolean = true;\r\n    @Input('vertical-border') public verticalBorder: boolean = true;\r\n    @Input('enable-selection') public enableSelection: boolean = false;\r\n    @Input('enable-filtering') public enableFiltering: boolean = false;\r\n    @Input('buffer-amount') public bufferAmount: number = null;\r\n    @Input('schema-columns') public schemaColumns: SimpleSchemaColumns = [];\r\n    @Output() public afterRendered: EventEmitter<boolean> = new EventEmitter();\r\n    @Output() public schemaChanges: EventEmitter<SimpleSchemaColumns> = new EventEmitter();\r\n\r\n    @ContentChild(NgxOptionsComponent, { static: false })\r\n    public columnOptions: NgxOptionsComponent = null;\r\n\r\n    @ContentChildren(NgxColumnComponent)\r\n    public columnTemplates: QueryListRef<NgxColumnComponent> = null;\r\n\r\n    @ContentChild(NgxContextMenuComponent, { static: false })\r\n    public contextMenuTemplate: NgxContextMenuComponent = null;\r\n\r\n    @ContentChild(NgxHeaderComponent, { static: false })\r\n    public headerTemplate: NgxHeaderComponent = null;\r\n\r\n    @ContentChild(NgxFooterComponent, { static: false })\r\n    public footerTemplate: NgxFooterComponent = null;\r\n\r\n    @ContentChild(NgxFilterComponent, { static: false })\r\n    public filterTemplate: NgxFilterComponent = null;\r\n\r\n    public inViewport: boolean;\r\n    public tableViewportChecked: boolean = true;\r\n    public isFrozenView: boolean = false;\r\n    public isFirefoxMode: boolean = isFirefox();\r\n\r\n    /**\r\n     * @description: the custom names of the column list to be displayed in the view.\r\n     * @example:\r\n     *    <table-builder #table\r\n     *        [source]=\"[{ id: 1, name: 'hello', value: 'world', description: 'text' }, ...]\"\r\n     *        [exclude]=\"[ 'description' ]\">\r\n     *      <ngx-column *ngFor=\"let key of table.modelColumnKeys\"></ngx-column>\r\n     *    </table-builder>\r\n     *    ------------------------\r\n     *    modelColumnKeys === [ 'id', 'hello', 'value' ]\r\n     */\r\n    public modelColumnKeys: string[] = [];\r\n\r\n    /**\r\n     * @description: the custom names of the column list to be displayed in the view.\r\n     * @example:\r\n     *    <table-builder [keys]=[ 'id', 'description', 'name', 'description' ] />\r\n     *    customModelColumnsKeys === [ 'id', 'description', 'name', 'description' ]\r\n     *    ------------------------\r\n     *    <table-builder [keys]=[ 'id', 'description', 'name', 'description' ] [exclude]=[ 'id', 'description' ] />\r\n     *    customModelColumnsKeys === [ 'name' ]\r\n     */\r\n    public customModelColumnsKeys: string[] = [];\r\n\r\n    public isDragging: KeyMap<boolean> = {};\r\n    public abstract readonly templateParser: TemplateParserService;\r\n    public abstract readonly selection: SelectionService;\r\n    public abstract readonly utils: UtilsService;\r\n    public abstract readonly cd: ChangeDetectorRef;\r\n    public abstract readonly resize: ResizableService;\r\n    public abstract readonly sortable: SortableService;\r\n    public abstract readonly contextMenu: ContextMenuService;\r\n    public abstract readonly filterable: FilterableService;\r\n    public abstract readonly ngZone: NgZone;\r\n    public accessDragging: boolean = false;\r\n    protected abstract readonly app: ApplicationRef;\r\n    protected abstract readonly viewChanges: NgxTableViewChangesService;\r\n    protected abstract readonly draggable: DraggableService;\r\n    protected originalSource: TableRow[];\r\n    protected renderedCountKeys: number;\r\n    private filterIdTask: number = null;\r\n\r\n    /**\r\n     * @description - <table-builder [keys]=[ 'id', 'value', 'id', 'position', 'value' ] />\r\n     * returned unique displayed columns [ 'id', 'value', 'position' ]\r\n     */\r\n    public get displayedColumns(): string[] {\r\n        return Object.keys(this.templateParser.compiledTemplates) || [];\r\n    }\r\n\r\n    public get visibleColumns(): string[] {\r\n        return this.columnSchema\r\n            .filter((column: ColumnsSchema) => column.isVisible)\r\n            .map((column: ColumnsSchema) => column.key);\r\n    }\r\n\r\n    /**\r\n     * @description - <table-builder [keys]=[ 'id', 'value', 'id', 'position', 'value' ] />\r\n     * returned ordered displayed columns [ 'id', 'value', 'id', 'position', 'value' ]\r\n     */\r\n    public get positionColumns(): string[] {\r\n        return this.columnSchema.map((column: ColumnsSchema) => column.key);\r\n    }\r\n\r\n    public get columnSchema(): ColumnsSchema[] {\r\n        return (this.templateParser.schema && this.templateParser.schema.columns) || [];\r\n    }\r\n\r\n    public get selectedItems(): TableRow[] {\r\n        return this.source.filter((item: TableRow[]) => this.selectionModel.entries[item[this.primaryKey]]);\r\n    }\r\n\r\n    public get firstItem(): TableRow {\r\n        return (this.source && this.source[0]) || {};\r\n    }\r\n\r\n    public get lastItem(): TableRow {\r\n        return (this.source && this.source[this.source.length - 1]) || {};\r\n    }\r\n\r\n    public get selectionModel(): SelectionMap {\r\n        return this.selection.selectionModel;\r\n    }\r\n\r\n    public get clientRowHeight(): number {\r\n        return parseInt(this.rowHeight as string) || ROW_HEIGHT;\r\n    }\r\n\r\n    public get clientColWidth(): number {\r\n        return this.autoWidth ? null : parseInt(this.columnWidth as string) || null;\r\n    }\r\n\r\n    public get columnVirtualHeight(): number {\r\n        return this.source.length * this.clientRowHeight;\r\n    }\r\n\r\n    public get columnHeight(): number {\r\n        return this.size * this.clientRowHeight + this.clientRowHeight;\r\n    }\r\n\r\n    public get size(): number {\r\n        return (this.source && this.source.length) || 0;\r\n    }\r\n\r\n    public abstract markDirtyCheck(): void;\r\n\r\n    public abstract markForCheck(): void;\r\n\r\n    public abstract markTemplateContentCheck(): void;\r\n\r\n    public abstract ngOnChanges(changes: SimpleChanges): void;\r\n\r\n    public abstract ngOnInit(): void;\r\n\r\n    public abstract ngAfterContentInit(): void;\r\n\r\n    public abstract ngAfterViewInit(): void;\r\n\r\n    public abstract ngAfterViewChecked(): void;\r\n\r\n    public abstract ngOnDestroy(): void;\r\n\r\n    public recheckViewportChecked(): void {\r\n        this.tableViewportChecked = !this.tableViewportChecked;\r\n        this.idleDetectChanges();\r\n    }\r\n\r\n    public enableDragging(key: string): void {\r\n        if (this.templateParser.compiledTemplates[key].draggable) {\r\n            this.accessDragging = true;\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    public disableDragging(): void {\r\n        if (this.accessDragging) {\r\n            this.accessDragging = false;\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    public resizeColumn({ event, key }: ResizeEvent, column: HTMLDivElement): void {\r\n        this.recheckViewportChecked();\r\n        this.disableDragging();\r\n\r\n        this.resize.resize(\r\n            event as MouseEvent,\r\n            column,\r\n            (width: number) => this.calculateWidth(key, width),\r\n            () => this.afterCalculateWidth()\r\n        );\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    public filter(): void {\r\n        if (!this.enableFiltering) {\r\n            throw new Error('You forgot to enable filtering: \\n <ngx-table-builder [enable-filtering]=\"true\" />');\r\n        }\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.clearInterval(this.filterIdTask);\r\n            this.filterIdTask = window.setTimeout(() => {\r\n                this.filterable.changeFilteringStatus();\r\n                this.sortAndFilter().then(() => this.reCheckDefinitions());\r\n            }, MACRO_TIME);\r\n        });\r\n    }\r\n\r\n    public async sortAndFilter(): Promise<void> {\r\n        this.toggleFreeze();\r\n\r\n        if (this.filterable.filterValueExist && this.enableFiltering) {\r\n            const filter: FilterWorkerEvent = await this.filterable.filter(this.originalSource);\r\n            this.source = await this.sortable.sort(filter.source);\r\n            filter.fireSelection();\r\n        } else if (!this.sortable.empty && this.source) {\r\n            this.source = await this.sortable.sort(this.originalSource);\r\n        }\r\n\r\n        if (this.sortable.empty && !this.filterable.filterValueExist) {\r\n            this.source = this.originalSource;\r\n        }\r\n\r\n        this.toggleFreeze(TIME_IDLE);\r\n    }\r\n\r\n    public sortByKey(key: string): void {\r\n        this.sortable.updateSortKey(key);\r\n        this.sortAndFilter().then(() => this.reCheckDefinitions());\r\n    }\r\n\r\n    public drop({ previousIndex, currentIndex }: CdkDragSortEvent): void {\r\n        const previousKey: string = this.visibleColumns[previousIndex];\r\n        const currentKey: string = this.visibleColumns[currentIndex];\r\n        this.draggable.drop(previousKey, currentKey);\r\n        this.changeSchema();\r\n    }\r\n\r\n    public checkVisible(visible: boolean): void {\r\n        this.inViewport = visible;\r\n        this.detectChanges();\r\n    }\r\n\r\n    public detectChanges(): void {\r\n        if (!(this.cd as ViewRef).destroyed) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    public toggleFreeze(time: number = null, callback: Fn = null): void {\r\n        this.isFrozenView = !this.isFrozenView;\r\n        if (time) {\r\n            window.setTimeout(() => {\r\n                this.detectChanges();\r\n                callback && callback();\r\n            }, time);\r\n        } else {\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    public changeSchema(defaultColumns: SimpleSchemaColumns = null): void {\r\n        const renderedColumns: SimpleSchemaColumns = this.templateParser.schema.exportColumns();\r\n        const columns: SimpleSchemaColumns = defaultColumns || renderedColumns;\r\n        this.viewChanges.update({ name: this.name, columns });\r\n        this.schemaChanges.emit(columns);\r\n        this.idleDetectChanges();\r\n    }\r\n\r\n    protected reCheckDefinitions(): void {\r\n        this.filterable.definition = { ...this.filterable.definition };\r\n        this.filterable.changeFilteringStatus();\r\n        this.detectChanges();\r\n    }\r\n\r\n    /**\r\n     * @description: returns the number of keys in the model\r\n     * @example: <table-builder [source]=[{ id: 1, name: 'hello' }, ...] /> a value of 2 will be returned\r\n     */\r\n    protected getCountKeys(): number {\r\n        return Object.keys(this.firstItem).length;\r\n    }\r\n\r\n    /**\r\n     * @see TableBuilderApiImpl#customModelColumnsKeys for further information\r\n     */\r\n    protected generateCustomModelColumnsKeys(): string[] {\r\n        return this.excluding(this.keys);\r\n    }\r\n\r\n    /**\r\n     * @see TableBuilderApiImpl#modelColumnKeys for further information\r\n     */\r\n    protected generateModelColumnKeys(): string[] {\r\n        return this.excluding(this.utils.flattenKeysByRow(this.firstItem));\r\n    }\r\n\r\n    protected idleDetectChanges(): void {\r\n        this.ngZone.runOutsideAngular(() => window.requestAnimationFrame(() => this.detectChanges()));\r\n    }\r\n\r\n    private calculateWidth(key: string, width: number): void {\r\n        this.isDragging[key] = true;\r\n        this.onMouseResizeColumn(key, width);\r\n    }\r\n\r\n    private afterCalculateWidth(): void {\r\n        this.isDragging = {};\r\n        this.recheckViewportChecked();\r\n        this.changeSchema();\r\n    }\r\n\r\n    private onMouseResizeColumn(key: string, width: number): void {\r\n        this.templateParser.mutateColumnSchema(key, { width });\r\n        this.idleDetectChanges();\r\n    }\r\n\r\n    private excluding(keys: string[]): string[] {\r\n        return this.excludeKeys.length\r\n            ? keys.filter((key: string) => {\r\n                  return !this.excludeKeys.some((excludeKey: string | RegExp) => {\r\n                      return excludeKey instanceof RegExp ? !!key.match(excludeKey) : key === excludeKey;\r\n                  });\r\n              })\r\n            : keys;\r\n    }\r\n}\r\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\r\n\r\nconst DEFAULT_TIME_ANIMATION: number = 150;\r\n\r\nexport const NGX_ANIMATION: AnimationTriggerMetadata = trigger('fadeAnimation', [\r\n    // the \"in\" style determines the \"resting\" state of the element when it is visible.\r\n    state('in', style({ opacity: 1 })),\r\n\r\n    // fade in when created. this could also be written as transition('void => *')\r\n    transition(':enter', [style({ opacity: 0 }), animate(DEFAULT_TIME_ANIMATION)]),\r\n\r\n    // fade out when destroyed. this could also be written as transition('void => *')\r\n    transition(':leave', animate(DEFAULT_TIME_ANIMATION, style({ opacity: 0 })))\r\n]);\r\n","import { ColumnsSchema } from '../../interfaces/table-builder.external';\r\nimport { DeepPartial } from '../../interfaces/table-builder.internal';\r\n\r\nexport class SchemaBuilder {\r\n    constructor(public columns: ColumnsSchema[] = []) {}\r\n\r\n    public exportColumns(): Array<DeepPartial<ColumnsSchema>> {\r\n        return this.columns.map((column: ColumnsSchema) => ({\r\n            key: column.key,\r\n            width: column.width,\r\n            isVisible: column.isVisible,\r\n            isModel: column.isModel\r\n        }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ColumnsSchema, ImplicitContext, TableCellOptions } from '../../interfaces/table-builder.external';\r\nimport { TemplateHeadThDirective } from '../../directives/rows/template-head-th.directive';\r\nimport { TemplateBodyTdDirective } from '../../directives/rows/template-body-td.directive';\r\nimport { NgxColumnComponent } from '../../components/ngx-column/ngx-column.component';\r\nimport { KeyMap, QueryListRef } from '../../interfaces/table-builder.internal';\r\nimport { TemplateCellCommon } from '../../directives/rows/template-cell.common';\r\nimport { ColumnOptions } from '../../components/common/column-options';\r\nimport { SchemaBuilder } from './schema-builder.class';\r\n\r\n@Injectable()\r\nexport class TemplateParserService {\r\n    public schema: SchemaBuilder;\r\n    public templateKeys: Set<string>;\r\n    public fullTemplateKeys: Set<string>;\r\n    public overrideTemplateKeys: Set<string>;\r\n    public columnOptions: ColumnOptions;\r\n    public compiledTemplates: KeyMap<ColumnsSchema> = {};\r\n\r\n    private static templateContext(key: string, cell: TemplateCellCommon, options: ColumnOptions): TableCellOptions {\r\n        return {\r\n            textBold: cell.bold,\r\n            template: cell.template,\r\n            class: cell.cssClasses,\r\n            style: cell.cssStyles,\r\n            width: cell.width,\r\n            height: cell.height,\r\n            onClick: cell.onClick,\r\n            dblClick: cell.dblClick,\r\n            useDeepPath: key.includes('.'),\r\n            context: cell.row ? ImplicitContext.ROW : ImplicitContext.CELL,\r\n            nowrap: TemplateParserService.getValidPredicate(options.nowrap, cell.nowrap)\r\n        };\r\n    }\r\n\r\n    private static getValidHtmlBooleanAttribute(attribute: boolean): boolean {\r\n        return typeof attribute === 'string' ? true : attribute;\r\n    }\r\n\r\n    private static getValidPredicate<T>(leftPredicate: T, rightPredicate: T): T {\r\n        return leftPredicate === null ? rightPredicate : leftPredicate;\r\n    }\r\n\r\n    public toggleColumnVisibility(key: string): void {\r\n        this.schema.columns = this.schema.columns.map((column: ColumnsSchema) =>\r\n            key === column.key\r\n                ? {\r\n                      ...column,\r\n                      isVisible: !column.isVisible\r\n                  }\r\n                : column\r\n        );\r\n    }\r\n\r\n    public initialSchema(columnOptions: ColumnOptions): void {\r\n        this.schema = this.schema || new SchemaBuilder();\r\n        this.schema.columns = [];\r\n        this.compiledTemplates = {};\r\n        this.templateKeys = new Set<string>();\r\n        this.overrideTemplateKeys = new Set<string>();\r\n        this.fullTemplateKeys = new Set<string>();\r\n        this.columnOptions = columnOptions || new ColumnOptions();\r\n    }\r\n\r\n    public parse(allowedKeyMap: KeyMap<boolean>, templates: QueryListRef<NgxColumnComponent>): void {\r\n        if (!templates) {\r\n            return;\r\n        }\r\n\r\n        templates.forEach((column: NgxColumnComponent) => {\r\n            const { key, customKey, importantTemplate }: NgxColumnComponent = column;\r\n            const needTemplateCheck: boolean = allowedKeyMap[key] || customKey !== false;\r\n\r\n            if (needTemplateCheck) {\r\n                if (importantTemplate !== false) {\r\n                    this.templateKeys.delete(key);\r\n                    this.compileColumnMetadata(column);\r\n                    this.overrideTemplateKeys.add(key);\r\n                } else if (!this.templateKeys.has(key) && !this.overrideTemplateKeys.has(key)) {\r\n                    this.compileColumnMetadata(column);\r\n                    this.templateKeys.add(key);\r\n                }\r\n\r\n                this.fullTemplateKeys.add(key);\r\n            }\r\n        });\r\n    }\r\n\r\n    public mutateColumnSchema(key: string, partialSchema: Partial<ColumnsSchema>): void {\r\n        for (const option of Object.keys(partialSchema)) {\r\n            this.compiledTemplates[key][option] = partialSchema[option];\r\n        }\r\n    }\r\n\r\n    public compileColumnMetadata(column: NgxColumnComponent): void {\r\n        const { key, th, td, emptyHead, headTitle, customKey }: NgxColumnComponent = column;\r\n        const thTemplate: TemplateCellCommon = th || new TemplateHeadThDirective(null);\r\n        const tdTemplate: TemplateCellCommon = td || new TemplateBodyTdDirective(null);\r\n        const isEmptyHead: boolean = TemplateParserService.getValidHtmlBooleanAttribute(emptyHead);\r\n        const thOptions: TableCellOptions = TemplateParserService.templateContext(key, thTemplate, this.columnOptions);\r\n        this.compiledTemplates[key] = {\r\n            key,\r\n            th: {\r\n                ...thOptions,\r\n                headTitle,\r\n                emptyHead: isEmptyHead,\r\n                template: isEmptyHead ? null : thOptions.template\r\n            },\r\n            td: TemplateParserService.templateContext(key, tdTemplate, this.columnOptions),\r\n            stickyLeft: TemplateParserService.getValidHtmlBooleanAttribute(column.stickyLeft),\r\n            stickyRight: TemplateParserService.getValidHtmlBooleanAttribute(column.stickyRight),\r\n            customColumn: TemplateParserService.getValidHtmlBooleanAttribute(column.customKey),\r\n            width: TemplateParserService.getValidPredicate(column.width, this.columnOptions.width),\r\n            cssClass: TemplateParserService.getValidPredicate(column.cssClass, this.columnOptions.cssClass) || [],\r\n            cssStyle: TemplateParserService.getValidPredicate(column.cssStyle, this.columnOptions.cssStyle) || [],\r\n            resizable: TemplateParserService.getValidPredicate(column.resizable, this.columnOptions.resizable),\r\n            sortable: TemplateParserService.getValidPredicate(column.sortable, this.columnOptions.sortable),\r\n            filterable: TemplateParserService.getValidPredicate(column.filterable, this.columnOptions.filterable),\r\n            draggable: TemplateParserService.getValidPredicate(column.draggable, this.columnOptions.draggable),\r\n            verticalLine: column.verticalLine,\r\n            isModel: customKey === false,\r\n            isVisible: true\r\n        };\r\n    }\r\n}\r\n","import { TableRow } from '../../interfaces/table-builder.external';\r\nimport { KeyMap } from '../../interfaces/table-builder.internal';\r\n\r\nexport enum SortOrderType {\r\n    ASC = 'asc',\r\n    DESC = 'desc'\r\n}\r\n\r\nexport interface SortableMessage {\r\n    definition: KeyMap<SortOrderType>;\r\n    source: TableRow[];\r\n}\r\n","import { TableRow } from '../../interfaces/table-builder.external';\r\nimport { SortableMessage } from './sortable.interfaces';\r\nimport { Any, KeyMap } from '../../interfaces/table-builder.internal';\r\n\r\nexport function sortWorker(message: SortableMessage): TableRow[] {\r\n    enum OrderType {\r\n        DESC = 'desc',\r\n        SKIP = 'skip'\r\n    }\r\n\r\n    function getValueByPath(object: KeyMap, path: string): KeyMap | undefined {\r\n        return path ? path.split('.').reduce((value: string, key: string) => value && value[key], object) : object;\r\n    }\r\n\r\n    function checkValueIsEmpty(value: Any): boolean {\r\n        const val: string = typeof value === 'string' ? value.trim() : value;\r\n        return [undefined, null, NaN, '', 'null', Infinity].includes(val);\r\n    }\r\n\r\n    class Sortable {\r\n        public static sortByKeys(data: TableRow[], keys: KeyMap<OrderType>): Any[] {\r\n            const countKeys: number = Object.keys(keys).length;\r\n\r\n            if (!countKeys) {\r\n                return data.sort(Sortable.shallowSort);\r\n            }\r\n\r\n            const matches: KeyMap<number> = Sortable.getMatchesKeys(keys);\r\n            return data.sort((a: unknown, b: unknown) => Sortable.multiSort(a, b, matches));\r\n        }\r\n\r\n        private static multiSort(a: unknown, b: unknown, matches: KeyMap<number>): Any {\r\n            const countKeys: number = Object.keys(matches).length;\r\n            let sorted: number = 0;\r\n            let ix: number = 0;\r\n\r\n            while (sorted === 0 && ix < countKeys) {\r\n                const key: string = Sortable.observeKey(matches, ix);\r\n                if (key) {\r\n                    const depth: number = matches[key];\r\n                    sorted = Sortable.deepSort(key, a, b, depth);\r\n                    ix++;\r\n                }\r\n            }\r\n\r\n            return sorted;\r\n        }\r\n\r\n        private static getMatchesKeys(keys: KeyMap<OrderType | number>): KeyMap<number> {\r\n            const matches: KeyMap<number> = {};\r\n\r\n            for (const key in keys) {\r\n                if (keys.hasOwnProperty(key)) {\r\n                    matches[key] =\r\n                        keys[key] === OrderType.DESC || keys[key] === -1\r\n                            ? -1\r\n                            : keys[key] === OrderType.SKIP || keys[key] === 0\r\n                            ? 0\r\n                            : 1;\r\n                }\r\n            }\r\n\r\n            return matches;\r\n        }\r\n\r\n        private static deepSort(key: string, leftHand: Any, rightHand: Any, depth: number): number {\r\n            const a: Any = getValueByPath(leftHand, key);\r\n            const b: Any = getValueByPath(rightHand, key);\r\n            return this.shallowSort(a, b, depth);\r\n        }\r\n\r\n        private static shallowSort(a: Any, b: Any, depth?: number): number {\r\n            const currentDepth: number = depth !== null ? depth : 1;\r\n            b = checkValueIsEmpty(b) ? '' : b;\r\n\r\n            if (a === b) {\r\n                return 0;\r\n            }\r\n\r\n            return a > b ? currentDepth : -1 * currentDepth;\r\n        }\r\n\r\n        private static observeKey(keys: KeyMap<number>, count: number): string {\r\n            let key: string;\r\n            let size: number = 0;\r\n\r\n            for (key in keys) {\r\n                if (keys.hasOwnProperty(key)) {\r\n                    if (size === count) {\r\n                        return key;\r\n                    }\r\n\r\n                    size++;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return Sortable.sortByKeys(message.source, message.definition as Any);\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { KeyMap, Resolver } from '../../interfaces/table-builder.internal';\r\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\r\nimport { WebWorkerThreadService } from '../../worker/worker-thread.service';\r\nimport { SortableMessage, SortOrderType } from './sortable.interfaces';\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { UtilsService } from '../utils/utils.service';\r\nimport { sortWorker } from './sort.worker';\r\n\r\n@Injectable()\r\nexport class SortableService {\r\n    public definition: KeyMap<SortOrderType> = {};\r\n\r\n    constructor(\r\n        private readonly thread: WebWorkerThreadService,\r\n        private readonly utils: UtilsService,\r\n        private readonly zone: NgZone\r\n    ) {}\r\n\r\n    public get empty(): boolean {\r\n        return Object.keys(this.definition).length === 0;\r\n    }\r\n\r\n    public sort(data: TableRow[]): Promise<TableRow[]> {\r\n        return new Promise((resolve: Resolver<TableRow[]>): void => {\r\n            this.thread\r\n                .run<TableRow[], SortableMessage>(sortWorker, { definition: this.definition, source: data })\r\n                .then((sorted: TableRow[]) => {\r\n                    this.zone.runOutsideAngular(() =>\r\n                        window.setTimeout(() => resolve(sorted), TableBuilderOptionsImpl.TIME_IDLE)\r\n                    );\r\n                });\r\n        });\r\n    }\r\n\r\n    public setDefinition(definition: KeyMap<string>): void {\r\n        this.definition = this.empty ? (definition as KeyMap<SortOrderType>) || {} : this.definition;\r\n    }\r\n\r\n    public updateSortKey(key: string): void {\r\n        this.definition = this.updateImmutableDefinitions(key);\r\n    }\r\n\r\n    private updateImmutableDefinitions(key: string): KeyMap<SortOrderType> {\r\n        const existKey: SortOrderType = this.definition[key];\r\n\r\n        if (existKey) {\r\n            if (existKey === SortOrderType.ASC) {\r\n                this.definition[key] = SortOrderType.DESC;\r\n            } else {\r\n                delete this.definition[key];\r\n            }\r\n        } else {\r\n            this.definition[key] = SortOrderType.ASC;\r\n        }\r\n\r\n        return { ...this.definition };\r\n    }\r\n}\r\n","import { KeyMap, RowId } from '../../interfaces/table-builder.internal';\r\n\r\nexport class SelectionMap {\r\n    public isAll: boolean = false;\r\n    public entries: KeyMap<boolean> = {};\r\n    private readonly map: Map<RowId, boolean> = new Map<RowId, boolean>();\r\n\r\n    public get size(): number {\r\n        return this.map.size;\r\n    }\r\n\r\n    public generateImmutableEntries(): void {\r\n        this.entries = Array.from(this.map.entries()).reduce(\r\n            (main: KeyMap<boolean>, [key, value]: [RowId, boolean]) => ({ ...main, [key]: value }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    public hasValue(): boolean {\r\n        return this.size > 0;\r\n    }\r\n\r\n    public get isIndeterminate(): boolean {\r\n        return this.hasValue() && !this.isAll;\r\n    }\r\n\r\n    public get(key: RowId): boolean {\r\n        return this.map.get(key) || false;\r\n    }\r\n\r\n    public select(key: RowId, emit: boolean): void {\r\n        this.map.set(key, true);\r\n\r\n        if (emit) {\r\n            this.generateImmutableEntries();\r\n        }\r\n    }\r\n\r\n    public toggle(key: string | number, emit: boolean): void {\r\n        if (this.has(key)) {\r\n            this.delete(key, emit);\r\n        } else {\r\n            this.select(key, emit);\r\n        }\r\n    }\r\n\r\n    public delete(key: RowId, emit: boolean): void {\r\n        this.map.delete(key);\r\n        if (emit) {\r\n            this.generateImmutableEntries();\r\n        }\r\n    }\r\n\r\n    public has(key: RowId): boolean {\r\n        return this.map.has(key);\r\n    }\r\n\r\n    public clear(): void {\r\n        this.map.clear();\r\n        this.entries = {};\r\n        this.isAll = false;\r\n    }\r\n}\r\n","export class SelectionRange {\r\n    public start: number = null;\r\n    public end: number = null;\r\n\r\n    public put(index: number): void {\r\n        if (this.start === null) {\r\n            this.start = index;\r\n        } else {\r\n            this.end = index;\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        this.start = null;\r\n        this.end = null;\r\n    }\r\n\r\n    public sortKeys(): SelectionRange {\r\n        const [start, end]: number[] = [this.start, this.end].sort((a: number, b: number) => a - b);\r\n        this.start = start;\r\n        this.end = end;\r\n\r\n        return this;\r\n    }\r\n\r\n    public selectedRange(): boolean {\r\n        return this.start !== null && this.end !== null;\r\n    }\r\n}\r\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { SelectionMap } from './selection';\r\nimport { SelectionRange } from './selection-range';\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { Fn, KeyMap, KeyType, PrimaryKey, RowId, SelectionStatus } from '../../interfaces/table-builder.internal';\r\nimport { checkValueIsEmpty } from '../../operators/check-value-is-empty';\r\n\r\n@Injectable()\r\nexport class SelectionService implements OnDestroy {\r\n    public selectionModel: SelectionMap = new SelectionMap();\r\n    public range: SelectionRange = new SelectionRange();\r\n    public selectionStart: SelectionStatus = { status: false };\r\n    public primaryKey: string = PrimaryKey.ID;\r\n    public selectionTaskIdle: number;\r\n    public onChanges: Subject<void> = new Subject<void>();\r\n    private readonly handler: KeyMap<Fn> = {};\r\n\r\n    constructor(private readonly ngZone: NgZone) {}\r\n\r\n    public listenShiftKey(): void {\r\n        this.listenShiftKeyByType(KeyType.KEYDOWN);\r\n        this.listenShiftKeyByType(KeyType.KEYUP);\r\n    }\r\n\r\n    public unListenShiftKey(): void {\r\n        this.removeListenerByType(KeyType.KEYDOWN);\r\n        this.removeListenerByType(KeyType.KEYUP);\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.unListenShiftKey();\r\n    }\r\n\r\n    public toggleAll(rows: TableRow[]): void {\r\n        clearInterval(this.selectionTaskIdle);\r\n\r\n        const selectIsAll: boolean = rows.length === this.selectionModel.size;\r\n        if (!selectIsAll) {\r\n            rows.forEach((row: TableRow) => this.selectionModel.select(this.getIdByRow(row), false));\r\n        } else {\r\n            this.selectionModel.clear();\r\n        }\r\n\r\n        this.checkIsAllSelected(rows);\r\n    }\r\n\r\n    public toggle(row: TableRow): void {\r\n        clearInterval(this.selectionTaskIdle);\r\n        this.selectionModel.toggle(this.getIdByRow(row), true);\r\n        this.onChanges.next();\r\n    }\r\n\r\n    public selectRow(row: TableRow, event: MouseEvent, rows: TableRow[]): void {\r\n        const { shiftKey, ctrlKey }: MouseEvent = event;\r\n        const index: number = rows.findIndex((item: TableRow) => item[this.primaryKey] === row[this.primaryKey]);\r\n\r\n        if (shiftKey) {\r\n            this.multipleSelectByShiftKeydown(index, rows);\r\n        } else if (ctrlKey) {\r\n            this.multipleSelectByCtrlKeydown(row, index);\r\n        } else {\r\n            this.singleSelect(row, index);\r\n        }\r\n\r\n        this.checkIsAllSelected(rows);\r\n    }\r\n\r\n    public getIdByRow(row: TableRow): RowId {\r\n        const id: RowId = row[this.primaryKey];\r\n\r\n        if (checkValueIsEmpty(id)) {\r\n            throw new Error(\r\n                `Can't select item, make sure you pass the correct primary key, or you forgot enable selection\r\n                <ngx-table-builder [enable-selection]=\"true\" primary-key=\"fieldId\" />\r\n                `\r\n            );\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    public shiftKeyDetectSelection({ shiftKey }: KeyboardEvent): void {\r\n        this.selectionStart = { status: shiftKey };\r\n    }\r\n\r\n    private listenShiftKeyByType(type: KeyType): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.handler[type] = ({ shiftKey }: KeyboardEvent): void => {\r\n                this.selectionStart = { status: shiftKey };\r\n            };\r\n            window.addEventListener(type, this.handler[type], true);\r\n        });\r\n    }\r\n\r\n    private removeListenerByType(type: string): void {\r\n        window.removeEventListener(type, this.handler[type], true);\r\n    }\r\n\r\n    private checkIsAllSelected(rows: TableRow[]): void {\r\n        this.selectionModel.isAll = rows.length === this.selectionModel.size;\r\n        this.selectionModel.generateImmutableEntries();\r\n        this.onChanges.next();\r\n    }\r\n\r\n    private multipleSelectByShiftKeydown(index: number, rows: TableRow[]): void {\r\n        this.selectionModel.clear();\r\n        this.range.put(index);\r\n        const selectedRange: boolean = this.range.selectedRange();\r\n\r\n        if (selectedRange) {\r\n            const { start, end }: SelectionRange = this.range.sortKeys();\r\n            for (let i: number = start; i <= end; ++i) {\r\n                this.selectionModel.select(this.getIdByRow(rows[i]), false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private multipleSelectByCtrlKeydown(row: TableRow, index: number): void {\r\n        this.range.clear();\r\n        this.range.start = index;\r\n        this.selectionModel.toggle(this.getIdByRow(row), true);\r\n    }\r\n\r\n    private singleSelect(row: TableRow, index: number): void {\r\n        this.selectionModel.clear();\r\n        this.selectionModel.select(this.getIdByRow(row), true);\r\n        this.range.clear();\r\n        this.range.start = index;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { fromEvent, ReplaySubject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { Fn } from '../../interfaces/table-builder.internal';\r\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\r\n\r\nconst { COLUMN_RESIZE_MIN_WIDTH }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\r\n\r\n@Injectable()\r\nexport class ResizableService {\r\n    public startX: number;\r\n    public startWidth: number;\r\n    private destroyed$: ReplaySubject<boolean>;\r\n\r\n    private static clearSelection(): void {\r\n        if (window.getSelection) {\r\n            window.getSelection().removeAllRanges();\r\n        } else if (document['selection']) {\r\n            document['selection'].empty();\r\n        }\r\n    }\r\n\r\n    public resize(event: MouseEvent, column: HTMLElement, mousemove: Fn, mouseup: Fn): void {\r\n        this.destroyed$ = new ReplaySubject(1);\r\n        this.startX = event.pageX;\r\n        this.startWidth = column.offsetWidth;\r\n\r\n        fromEvent(document, 'mousemove')\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((e: MouseEvent) => this.computeEvent(e, mousemove));\r\n\r\n        fromEvent(document, 'mouseup')\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((e: MouseEvent) => this.unsubscribe(e, mouseup));\r\n    }\r\n\r\n    private computeEvent(event: MouseEvent, mousemove: Fn): void {\r\n        ResizableService.clearSelection();\r\n        const width: number = this.startWidth + (event.pageX - this.startX);\r\n        if (width >= COLUMN_RESIZE_MIN_WIDTH) {\r\n            mousemove(width);\r\n        }\r\n    }\r\n\r\n    private unsubscribe(event: MouseEvent, mouseup: Fn): void {\r\n        this.destroyed$.next(true);\r\n        this.destroyed$.complete();\r\n        mouseup(event);\r\n    }\r\n}\r\n","import { moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { TemplateParserService } from '../template-parser/template-parser.service';\r\nimport { ColumnsSchema } from '../../interfaces/table-builder.external';\r\n\r\n@Injectable()\r\nexport class DraggableService {\r\n    constructor(private readonly parser: TemplateParserService) {}\r\n\r\n    private get columns(): ColumnsSchema[] {\r\n        return this.parser.schema.columns;\r\n    }\r\n\r\n    public drop(previousKey: string, currentKey: string): void {\r\n        const previousIndex: number = this.columns.findIndex((column: ColumnsSchema) => column.key === previousKey);\r\n        const currentIndex: number = this.columns.findIndex((column: ColumnsSchema) => column.key === currentKey);\r\n\r\n        if (this.canDropped(previousIndex, currentIndex)) {\r\n            if (currentIndex === this.columns.length - 1) {\r\n                this.columns[currentIndex].width = this.columns[previousIndex].width;\r\n                this.columns[previousIndex].width = null;\r\n            }\r\n\r\n            moveItemInArray(this.columns, previousIndex, currentIndex);\r\n        }\r\n    }\r\n\r\n    public canDropped(previousIndex: number, currentIndex: number): boolean {\r\n        const previous: ColumnsSchema = this.columns[previousIndex];\r\n        const current: ColumnsSchema = this.columns[currentIndex];\r\n        const previousIsDraggable: boolean = previous.draggable;\r\n        const currentIsDraggable: boolean = current.draggable;\r\n        const isSticky: boolean =\r\n            previous.stickyLeft || current.stickyLeft || previous.stickyRight || current.stickyRight;\r\n\r\n        return previousIsDraggable && currentIsDraggable && !isSticky;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { TableUpdateSchema } from '../../interfaces/table-builder.external';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NgxTableViewChangesService {\r\n    public events: Subject<TableUpdateSchema> = new Subject<TableUpdateSchema>();\r\n    public update(state: TableUpdateSchema): void {\r\n        this.events.next(state);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class OverloadScrollService {\r\n    public scrollStatus: Subject<boolean> = new Subject();\r\n}\r\n","import {\r\n    AfterContentInit,\r\n    AfterViewChecked,\r\n    AfterViewInit,\r\n    ApplicationRef,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    NgZone,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChange,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {\r\n    Any,\r\n    Fn,\r\n    KeyMap,\r\n    RecalculatedStatus,\r\n    ScrollOffsetStatus,\r\n    TableSimpleChanges,\r\n    TemplateKeys\r\n} from './interfaces/table-builder.internal';\r\nimport { TableBuilderApiImpl } from './table-builder.api';\r\nimport { NGX_ANIMATION } from './animations/fade.animation';\r\nimport { ColumnsSchema } from './interfaces/table-builder.external';\r\nimport { NgxColumnComponent } from './components/ngx-column/ngx-column.component';\r\nimport { TemplateParserService } from './services/template-parser/template-parser.service';\r\nimport { SortableService } from './services/sortable/sortable.service';\r\nimport { SelectionService } from './services/selection/selection.service';\r\nimport { UtilsService } from './services/utils/utils.service';\r\nimport { ResizableService } from './services/resizer/resizable.service';\r\nimport { TableBuilderOptionsImpl } from './config/table-builder-options';\r\nimport { ContextMenuService } from './services/context-menu/context-menu.service';\r\nimport { FilterableService } from './services/filterable/filterable.service';\r\nimport { TableFilterType } from './services/filterable/filterable.interface';\r\nimport { DraggableService } from './services/draggable/draggable.service';\r\nimport { NgxTableViewChangesService } from './services/table-view-changes/ngx-table-view-changes.service';\r\nimport { OverloadScrollService } from './services/overload-scroll/overload-scroll.service';\r\n\r\nconst { TIME_IDLE, TIME_RELOAD, FRAME_TIME }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\r\n\r\n@Component({\r\n    selector: 'ngx-table-builder',\r\n    templateUrl: './table-builder.component.html',\r\n    styleUrls: ['./table-builder.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        TemplateParserService,\r\n        SortableService,\r\n        SelectionService,\r\n        ResizableService,\r\n        ContextMenuService,\r\n        FilterableService,\r\n        DraggableService,\r\n        OverloadScrollService\r\n    ],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [NGX_ANIMATION]\r\n})\r\nexport class TableBuilderComponent extends TableBuilderApiImpl\r\n    implements OnChanges, OnInit, AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\r\n    public dirty: boolean = true;\r\n    public rendering: boolean = false;\r\n    public isRendered: boolean = false;\r\n    public contentInit: boolean = false;\r\n    public contentCheck: boolean = false;\r\n    public showedCellByDefault: boolean = true;\r\n    public scrollOffset: ScrollOffsetStatus = { offset: false };\r\n    public recalculated: RecalculatedStatus = { recalculateHeight: false };\r\n    @ViewChild('header', { static: false })\r\n    public headerRef: ElementRef<HTMLDivElement>;\r\n    @ViewChild('footer', { static: false })\r\n    public footerRef: ElementRef<HTMLDivElement>;\r\n    public sourceIsNull: boolean;\r\n    public isScrolling: boolean;\r\n    private forcedRefresh: boolean = false;\r\n    private readonly destroy$: Subject<boolean> = new Subject<boolean>();\r\n    private checkedTaskId: number = null;\r\n\r\n    constructor(\r\n        public readonly selection: SelectionService,\r\n        public readonly templateParser: TemplateParserService,\r\n        public readonly cd: ChangeDetectorRef,\r\n        public readonly ngZone: NgZone,\r\n        public readonly utils: UtilsService,\r\n        public readonly resize: ResizableService,\r\n        public readonly sortable: SortableService,\r\n        public readonly contextMenu: ContextMenuService,\r\n        protected readonly app: ApplicationRef,\r\n        public readonly filterable: FilterableService,\r\n        protected readonly draggable: DraggableService,\r\n        protected readonly viewChanges: NgxTableViewChangesService,\r\n        protected readonly overloadScroll: OverloadScrollService\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    public get selectionEntries(): KeyMap<boolean> {\r\n        return this.selection.selectionModel.entries;\r\n    }\r\n\r\n    public get sourceExists(): boolean {\r\n        return !!this.source && this.source.length > 0;\r\n    }\r\n\r\n    private get viewIsDirty(): boolean {\r\n        return this.contentCheck && !this.forcedRefresh;\r\n    }\r\n\r\n    public checkSourceIsNull(): boolean {\r\n        return !('length' in (this.source || {}));\r\n    }\r\n\r\n    public recalculateHeight(): void {\r\n        this.recalculated = { recalculateHeight: true };\r\n        this.detectChanges();\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges = {}): void {\r\n        const nonIdenticalStructure: boolean = this.sourceExists && this.getCountKeys() !== this.renderedCountKeys;\r\n        this.sourceIsNull = this.checkSourceIsNull();\r\n        this.sortable.setDefinition(this.sortTypes);\r\n\r\n        if (nonIdenticalStructure) {\r\n            this.renderedCountKeys = this.getCountKeys();\r\n            this.customModelColumnsKeys = this.generateCustomModelColumnsKeys();\r\n            this.modelColumnKeys = this.generateModelColumnKeys();\r\n            this.originalSource = this.source;\r\n            const unDirty: boolean = !this.dirty;\r\n\r\n            this.checkFilterValues();\r\n\r\n            if (unDirty) {\r\n                this.markForCheck();\r\n            }\r\n\r\n            const recycleView: boolean = unDirty && this.isRendered && this.contentInit;\r\n\r\n            if (recycleView) {\r\n                this.renderTable();\r\n            }\r\n        } else if (TableSimpleChanges.SOURCE_KEY in changes && this.isRendered) {\r\n            this.originalSource = changes[TableSimpleChanges.SOURCE_KEY].currentValue;\r\n            this.sortAndFilter().then(() => this.reCheckDefinitions());\r\n        }\r\n\r\n        if (TableSimpleChanges.SCHEMA_COLUMNS in changes) {\r\n            const schemaChange: SimpleChange = changes[TableSimpleChanges.SCHEMA_COLUMNS];\r\n            if (!schemaChange.currentValue) {\r\n                throw new Error(\r\n                    `You need set correct <ngx-table-builder [schema-columns]=\"[] || [..]\" /> for one time binding`\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    public markForCheck(): void {\r\n        this.contentCheck = true;\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.enableSelection) {\r\n            this.selection.primaryKey = this.primaryKey;\r\n            this.selection.listenShiftKey();\r\n        }\r\n    }\r\n\r\n    public updateScrollOffset(offset: boolean): void {\r\n        this.scrollOffset = { offset };\r\n        this.idleDetectChanges();\r\n    }\r\n\r\n    public markVisibleColumn(column: HTMLDivElement, visible: boolean): void {\r\n        column['visible'] = visible;\r\n        this.detectChanges();\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n        this.markDirtyCheck();\r\n        this.markTemplateContentCheck();\r\n\r\n        if (this.sourceExists) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        this.listenTemplateChanges();\r\n        this.listenSelectionChanges();\r\n        this.recheckTemplateChanges();\r\n        this.listenScrollEvents();\r\n    }\r\n\r\n    public ngAfterViewChecked(): void {\r\n        if (this.viewIsDirty) {\r\n            this.viewForceRefresh();\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.templateParser.schema = null;\r\n        this.destroy$.next(true);\r\n        this.destroy$.unsubscribe();\r\n    }\r\n\r\n    public markTemplateContentCheck(): void {\r\n        this.contentInit = !!this.source || !(this.columnTemplates && this.columnTemplates.length);\r\n    }\r\n\r\n    public markDirtyCheck(): void {\r\n        this.dirty = false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @description: Key table generation for internal use\r\n     * @sample: keys - ['id', 'value'] -> { id: true, value: true }\r\n     */\r\n    public generateColumnsKeyMap(keys: string[]): KeyMap<boolean> {\r\n        const map: KeyMap<boolean> = {};\r\n        keys.forEach((key: string) => (map[key] = true));\r\n        return map;\r\n    }\r\n\r\n    public render(): void {\r\n        this.contentCheck = false;\r\n        this.utils.macrotask(() => this.renderTable(), TIME_IDLE).then(() => this.idleDetectChanges());\r\n    }\r\n\r\n    public renderTable({ async }: { async: boolean } = { async: true }): void {\r\n        if (this.rendering) {\r\n            return;\r\n        }\r\n\r\n        this.rendering = true;\r\n        const columnList: string[] = this.generateDisplayedColumns();\r\n        const drawTask: Fn<string[], Promise<void>> =\r\n            this.asyncColumns && async ? this.asyncDrawColumns.bind(this) : this.syncDrawColumns.bind(this);\r\n\r\n        if (!this.sortable.empty) {\r\n            this.sortAndFilter().then(() => drawTask(columnList).then(() => this.emitRendered()));\r\n        } else {\r\n            drawTask(columnList).then(() => this.emitRendered());\r\n        }\r\n    }\r\n\r\n    public toggleColumnVisibility(key: string): void {\r\n        this.recheckViewportChecked();\r\n        this.templateParser.toggleColumnVisibility(key);\r\n        this.utils\r\n            .requestAnimationFrame(() => {\r\n                this.changeSchema();\r\n                this.recheckViewportChecked();\r\n            })\r\n            .then(() => this.app.tick());\r\n    }\r\n\r\n    public resetSchema(): void {\r\n        this.tableViewportChecked = false;\r\n        this.schemaColumns = null;\r\n        this.detectChanges();\r\n\r\n        this.renderTable({ async: false });\r\n        this.changeSchema([]);\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.setTimeout(() => {\r\n                this.tableViewportChecked = true;\r\n                this.detectChanges();\r\n            }, TableBuilderOptionsImpl.TIME_IDLE);\r\n        });\r\n    }\r\n\r\n    private listenScrollEvents(): void {\r\n        this.overloadScroll.scrollStatus.pipe(takeUntil(this.destroy$)).subscribe((scrolling: boolean) => {\r\n            this.isScrolling = scrolling;\r\n            this.detectChanges();\r\n        });\r\n    }\r\n\r\n    private checkFilterValues(): void {\r\n        if (this.enableFiltering) {\r\n            this.filterable.filterType =\r\n                this.filterable.filterType ||\r\n                (this.columnOptions && this.columnOptions.filterType) ||\r\n                TableFilterType.START_WITH;\r\n\r\n            this.modelColumnKeys.forEach((key: string) => {\r\n                this.filterable.filterTypeDefinition[key] =\r\n                    this.filterable.filterTypeDefinition[key] || this.filterable.filterType;\r\n            });\r\n        }\r\n    }\r\n\r\n    private recheckTemplateChanges(): void {\r\n        this.ngZone.runOutsideAngular(() => window.setTimeout(() => this.app.tick(), TIME_RELOAD));\r\n    }\r\n\r\n    private listenSelectionChanges(): void {\r\n        if (this.enableSelection) {\r\n            this.selection.onChanges.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n                this.detectChanges();\r\n                this.ngZone.runOutsideAngular(() =>\r\n                    window.requestAnimationFrame(() => {\r\n                        this.detectChanges();\r\n                        this.app.tick();\r\n                    })\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    private viewForceRefresh(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.clearTimeout(this.checkedTaskId);\r\n            this.checkedTaskId = window.setTimeout(() => {\r\n                this.forcedRefresh = true;\r\n                this.markTemplateContentCheck();\r\n                this.render();\r\n            }, FRAME_TIME);\r\n        });\r\n    }\r\n\r\n    private listenTemplateChanges(): void {\r\n        if (this.columnTemplates) {\r\n            this.columnTemplates.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n                this.markForCheck();\r\n                this.markTemplateContentCheck();\r\n            });\r\n        }\r\n\r\n        if (this.contextMenuTemplate) {\r\n            this.contextMenu.events.pipe(takeUntil(this.destroy$)).subscribe(() => this.detectChanges());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: lazy rendering of columns\r\n     */\r\n    private async asyncDrawColumns(columnList: string[]): Promise<void> {\r\n        for (let index: number = 0; index < columnList.length; index++) {\r\n            const key: string = columnList[index];\r\n            const schema: ColumnsSchema = this.mergeColumnSchema(key, index);\r\n\r\n            if (schema.isVisible) {\r\n                await this.utils.requestAnimationFrame(() => {\r\n                    this.processedColumnList && this.processedColumnList(schema, key, true);\r\n                });\r\n            } else {\r\n                this.processedColumnList(schema, key, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: sync rendering of columns\r\n     */\r\n    private async syncDrawColumns(columnList: string[]): Promise<void> {\r\n        await this.utils.microtask(() => {\r\n            for (let index: number = 0; index < columnList.length; index++) {\r\n                const key: string = columnList[index];\r\n                const schema: ColumnsSchema = this.mergeColumnSchema(key, index);\r\n                this.processedColumnList(schema, columnList[index], false);\r\n            }\r\n        });\r\n    }\r\n\r\n    private getCustomColumnSchemaByIndex(index: number): Partial<ColumnsSchema> {\r\n        return ((this.schemaColumns && this.schemaColumns[index]) || ({} as Any)) as Partial<ColumnsSchema>;\r\n    }\r\n\r\n    /**\r\n     * @description - it is necessary to combine the templates given from the server and default\r\n     * @param key - column schema from rendered templates map\r\n     * @param index - column position\r\n     */\r\n    private mergeColumnSchema(key: string, index: number): ColumnsSchema {\r\n        const customColumn: Partial<ColumnsSchema> = this.getCustomColumnSchemaByIndex(index);\r\n\r\n        if (!this.templateParser.compiledTemplates[key]) {\r\n            const column: NgxColumnComponent = new NgxColumnComponent().withKey(key);\r\n            this.templateParser.compileColumnMetadata(column);\r\n        }\r\n\r\n        const defaultColumn: ColumnsSchema = this.templateParser.compiledTemplates[key];\r\n\r\n        if (customColumn.key === defaultColumn.key) {\r\n            this.templateParser.compiledTemplates[key] = { ...defaultColumn, ...customColumn } as ColumnsSchema;\r\n        }\r\n\r\n        return this.templateParser.compiledTemplates[key];\r\n    }\r\n\r\n    /**\r\n     * @description: column meta information processing\r\n     * @param schema - column schema\r\n     * @param key - column name\r\n     * @param async - whether to draw a column asynchronously\r\n     */\r\n    private processedColumnList(schema: ColumnsSchema, key: string, async: boolean): void {\r\n        this.templateParser.schema.columns.push(this.templateParser.compiledTemplates[key]);\r\n        if (async) {\r\n            this.idleDetectChanges();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: notification that the table has been rendered\r\n     * @see TableBuilderComponent#isRendered\r\n     */\r\n    private emitRendered(): void {\r\n        this.isRendered = true;\r\n        this.rendering = false;\r\n        this.afterRendered.emit(this.isRendered);\r\n        this.recalculateHeight();\r\n    }\r\n\r\n    /**\r\n     * @description: parsing templates and input parameters (keys, schemaColumns) for the number of columns\r\n     */\r\n    private generateDisplayedColumns(): string[] {\r\n        let generatedList: string[] = [];\r\n        this.templateParser.initialSchema(this.columnOptions);\r\n        const { simpleRenderedKeys, allRenderedKeys }: TemplateKeys = this.parseTemplateKeys();\r\n\r\n        if (this.schemaColumns && this.schemaColumns.length) {\r\n            generatedList = this.schemaColumns.map((column: ColumnsSchema) => column.key);\r\n        } else if (this.keys.length) {\r\n            generatedList = this.customModelColumnsKeys;\r\n        } else if (simpleRenderedKeys.size) {\r\n            generatedList = allRenderedKeys;\r\n        } else {\r\n            generatedList = this.modelColumnKeys;\r\n        }\r\n\r\n        return generatedList;\r\n    }\r\n\r\n    /**\r\n     * @description: this method returns the keys by which to draw table columns\r\n     * <allowedKeyMap> - possible keys from the model, this must be checked,\r\n     * because users can draw the wrong keys in the template (ngx-column key=invalid)\r\n     */\r\n    private parseTemplateKeys(): TemplateKeys {\r\n        const allowedKeyMap: KeyMap<boolean> = this.keys.length\r\n            ? this.generateColumnsKeyMap(this.customModelColumnsKeys)\r\n            : this.generateColumnsKeyMap(this.modelColumnKeys);\r\n\r\n        this.templateParser.parse(allowedKeyMap, this.columnTemplates);\r\n\r\n        return {\r\n            allRenderedKeys: Array.from(this.templateParser.fullTemplateKeys),\r\n            overridingRenderedKeys: this.templateParser.overrideTemplateKeys,\r\n            simpleRenderedKeys: this.templateParser.templateKeys\r\n        };\r\n    }\r\n}\r\n","import { Directive, EventEmitter, Inject, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\n\r\nimport { OverloadScrollService } from '../services/overload-scroll/overload-scroll.service';\r\nimport { TableBuilderOptionsImpl } from '../config/table-builder-options';\r\nimport { NGX_TABLE_OPTIONS } from '../config/table-builder.tokens';\r\n\r\nconst { TIME_IDLE }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\r\n\r\n@Directive({ selector: '[wheelThrottling]' })\r\nexport class WheelThrottlingDirective implements OnInit, OnDestroy {\r\n    @Input() public wheelThrottling: HTMLDivElement;\r\n    @Output() public scrollOffset: EventEmitter<boolean> = new EventEmitter();\r\n    public scrollTopOffset: boolean = false;\r\n    public isScrolling: number = null;\r\n    private scrolling: boolean = false;\r\n    private subscription: Subscription;\r\n\r\n    constructor(\r\n        @Inject(NGX_TABLE_OPTIONS) private readonly options: TableBuilderOptionsImpl,\r\n        private readonly ngZone: NgZone,\r\n        private readonly overload: OverloadScrollService\r\n    ) {}\r\n\r\n    private get element(): HTMLElement {\r\n        return this.wheelThrottling;\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.subscription = fromEvent(this.element, 'wheel').subscribe((event: WheelEvent): void =>\r\n            this.onElementScroll(event)\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscription.unsubscribe();\r\n        this.wheelThrottling = null;\r\n        this.scrollOffset = null;\r\n    }\r\n\r\n    /**\r\n     * Correct works only Chrome\r\n     * @param $event\r\n     */\r\n    public onElementScroll($event: WheelEvent): void {\r\n        this.scrollStart();\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.clearTimeout(this.isScrolling);\r\n            this.isScrolling = window.setTimeout(() => {\r\n                const isOffset: boolean = this.element.scrollTop > 0 && !this.scrollTopOffset;\r\n\r\n                if (isOffset) {\r\n                    this.scrollTopOffset = true;\r\n                    this.scrollOffset.emit(this.scrollTopOffset);\r\n                } else if (this.element.scrollTop === 0 && this.scrollTopOffset) {\r\n                    this.scrollTopOffset = false;\r\n                    this.scrollOffset.emit(this.scrollTopOffset);\r\n                }\r\n\r\n                this.scrollEnd();\r\n            }, TIME_IDLE);\r\n        });\r\n    }\r\n\r\n    private scrollStart(): void {\r\n        if (!this.scrolling) {\r\n            this.scrolling = true;\r\n            this.overload.scrollStatus.next(this.scrolling);\r\n        }\r\n    }\r\n\r\n    private scrollEnd(): void {\r\n        this.scrolling = false;\r\n        this.overload.scrollStatus.next(this.scrolling);\r\n    }\r\n}\r\n","import { Input } from '@angular/core';\r\nimport { ColumnsSchema, TableEvent, TableRow } from '../../interfaces/table-builder.external';\r\nimport { TableBrowserEvent } from '../../interfaces/table-builder.internal';\r\nimport { SelectionService } from '../../services/selection/selection.service';\r\nimport { UtilsService } from '../../services/utils/utils.service';\r\nimport { getDeepValue } from '../../operators/deep-value';\r\n\r\nexport class TableLineRow {\r\n    @Input('is-rendered') public isRendered: boolean;\r\n    @Input('column-index') public columnIndex: number;\r\n    @Input('client-row-height') public clientRowHeight: number;\r\n    @Input('column-schema') public columnSchema: ColumnsSchema;\r\n\r\n    constructor(public readonly selection: SelectionService, protected readonly utils: UtilsService) {}\r\n\r\n    public generateTableCellInfo(item: TableRow, key: string, $event: TableBrowserEvent): TableEvent {\r\n        return {\r\n            row: item,\r\n            event: $event,\r\n            value: getDeepValue(item, key),\r\n            preventDefault: (): void => {\r\n                window.clearInterval(this.selection.selectionTaskIdle);\r\n            }\r\n        };\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport { TableLineRow } from '../common/table-line-row';\r\nimport { SelectionService } from '../../services/selection/selection.service';\r\nimport { KeyMap, ResizeEvent } from '../../interfaces/table-builder.internal';\r\nimport { SortOrderType } from '../../services/sortable/sortable.interfaces';\r\nimport { UtilsService } from '../../services/utils/utils.service';\r\nimport { FilterableService } from '../../services/filterable/filterable.service';\r\n\r\n@Component({\r\n    selector: 'table-thead',\r\n    templateUrl: './table-thead.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TableTheadComponent extends TableLineRow {\r\n    @Input('header-top') public headerTop: number;\r\n    @Input('sortable-definition') public sortableDefinition: KeyMap<SortOrderType>;\r\n    @Input('filterable-definition') public filterableDefinition: KeyMap<string>;\r\n    @Output() public resize: EventEmitter<ResizeEvent> = new EventEmitter();\r\n    @Output() public sortByKey: EventEmitter<string> = new EventEmitter();\r\n    public orderType: typeof SortOrderType = SortOrderType;\r\n\r\n    constructor(\r\n        public readonly selection: SelectionService,\r\n        protected readonly utils: UtilsService,\r\n        protected readonly filterable: FilterableService\r\n    ) {\r\n        super(selection, utils);\r\n    }\r\n\r\n    public openFilter(key: string, event: MouseEvent): void {\r\n        this.filterable.openFilter(key, event);\r\n    }\r\n}\r\n","import { VirtualScrollerComponent } from 'ngx-virtual-scroller';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    Inject,\r\n    Input,\r\n    NgZone,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { TableLineRow } from '../common/table-line-row';\r\nimport { TableClickEventEmitter, TableRow } from '../../interfaces/table-builder.external';\r\nimport { SelectionService } from '../../services/selection/selection.service';\r\nimport { NGX_TABLE_OPTIONS } from '../../config/table-builder.tokens';\r\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\r\nimport { Any, KeyMap, RecalculatedStatus } from '../../interfaces/table-builder.internal';\r\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\r\nimport { NgxContextMenuComponent } from '../../components/ngx-context-menu/ngx-context-menu.component';\r\nimport { OverloadScrollService } from '../../services/overload-scroll/overload-scroll.service';\r\nimport { UtilsService } from '../../services/utils/utils.service';\r\nimport { detectChanges } from '../../operators/detect-changes';\r\n\r\n@Component({\r\n    selector: 'table-tbody',\r\n    templateUrl: './table-tbody.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TableTbodyComponent extends TableLineRow implements OnChanges, OnInit, OnDestroy {\r\n    @Input() public source: TableRow[];\r\n    @Input() public striped: boolean;\r\n    @Input('is-firefox') public isFirefox: boolean;\r\n    @Input() public recalculated: RecalculatedStatus;\r\n    @Input('primary-key') public primaryKey: string;\r\n    @Input('selection-entries') public selectionEntries: KeyMap<boolean>;\r\n    @Input('context-menu') public contextMenuTemplate: NgxContextMenuComponent;\r\n    @Input('enable-selection') public enableSelection: boolean;\r\n    @Input('table-viewport') public tableViewport: HTMLElement;\r\n    @Input('column-virtual-height') public columnVirtualHeight: number;\r\n    @Input('showed-cell-by-default') public showedCellByDefault: boolean;\r\n    @Input('buffer-amount') public bufferAmount: number;\r\n    @ViewChild('scroll', { static: true }) public scroll: VirtualScrollerComponent;\r\n    private destroy$: Subject<boolean> = new Subject<boolean>();\r\n    private reloadTaskId: number;\r\n\r\n    constructor(\r\n        public selection: SelectionService,\r\n        public cd: ChangeDetectorRef,\r\n        public contextMenu: ContextMenuService,\r\n        @Inject(NGX_TABLE_OPTIONS) private readonly options: TableBuilderOptionsImpl,\r\n        private readonly ngZone: NgZone,\r\n        protected readonly utils: UtilsService,\r\n        private readonly overload: OverloadScrollService\r\n    ) {\r\n        super(selection, utils);\r\n    }\r\n\r\n    public get clientBufferAmount(): number {\r\n        return Number(this.bufferAmount) || this.options.bufferAmount;\r\n    }\r\n\r\n    public get canSelectTextInTable(): boolean {\r\n        return !this.selection.selectionStart.status;\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if ('recalculated' in changes && !changes['recalculated'].firstChange && this.scroll) {\r\n            this.scroll.invalidateAllCachedMeasurements();\r\n        }\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.overload.scrollStatus\r\n            .pipe(\r\n                filter((scrolling: boolean) => !scrolling),\r\n                takeUntil(this.destroy$)\r\n            )\r\n            .subscribe(() => this.refresh());\r\n    }\r\n\r\n    /**\r\n     * @description: we hove some memory leak after destroy component\r\n     * because VirtualScrollerComponent work with requestAnimationFrame\r\n     * invalidate cache (VirtualScrollerComponent)\r\n     */\r\n    public ngOnDestroy(): void {\r\n        this.destroy$.next(true);\r\n        this.destroy$.unsubscribe();\r\n        const scroll: VirtualScrollerComponent & Any = this.scroll as Any;\r\n        scroll.removeScrollEventHandlers();\r\n        scroll.wrapGroupDimensions = null;\r\n        scroll.parentScroll = null;\r\n        scroll.viewPortItems = null;\r\n        scroll.items = null;\r\n        scroll['invalidateAllCachedMeasurements'] = (): void => {};\r\n        scroll['calculateViewport'] = (): Any => ({ startIndex: 0, scrollLength: 0 });\r\n        scroll['previousViewPort'] = { startIndex: 0, scrollLength: 0 };\r\n        scroll['invisiblePaddingElementRef'] = { nativeElement: null };\r\n        scroll['getScrollStartPosition'] = (): number => 0;\r\n        scroll['calculateDimensions'] = (): void => {};\r\n        scroll['refresh_internal'] = (): void => {};\r\n        scroll['element'] = { nativeElement: null };\r\n        scroll['contentElementRef'] = null;\r\n        scroll['_items'] = null;\r\n        scroll['zone'] = null;\r\n        this.destroy$ = null;\r\n        this.scroll = null;\r\n    }\r\n\r\n    public openContextMenu(event: MouseEvent, key: string, row: TableRow): void {\r\n        if (this.contextMenuTemplate) {\r\n            const selectOnlyUnSelectedRow: boolean = this.enableSelection && !this.checkSelectedItem(row);\r\n\r\n            if (selectOnlyUnSelectedRow) {\r\n                this.selection.selectRow(row, event, this.source);\r\n            }\r\n\r\n            this.contextMenu.openContextMenu(event, key, row);\r\n        }\r\n    }\r\n\r\n    public handleDblClick(row: TableRow, key: string, event: MouseEvent, emitter: TableClickEventEmitter): void {\r\n        window.clearInterval(this.selection.selectionTaskIdle);\r\n        this.handleEventEmitter(row, key, event, emitter);\r\n    }\r\n\r\n    public handleOnClick(row: TableRow, key: string, event: MouseEvent, emitter: TableClickEventEmitter): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            if (this.enableSelection) {\r\n                this.selection.selectionTaskIdle = window.setTimeout(() => {\r\n                    this.selection.selectRow(row, event, this.source);\r\n                    event.preventDefault();\r\n                    detectChanges(this.cd);\r\n                });\r\n            }\r\n        });\r\n\r\n        this.handleEventEmitter(row, key, event, emitter);\r\n    }\r\n\r\n    public vsChange(): void {\r\n        detectChanges(this.cd);\r\n    }\r\n\r\n    private refresh(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.clearTimeout(this.reloadTaskId);\r\n            this.reloadTaskId = window.setTimeout(() => {\r\n                if (this.scroll) {\r\n                    this.scroll.invalidateAllCachedMeasurements();\r\n                    detectChanges(this.cd);\r\n                }\r\n            }, TableBuilderOptionsImpl.MACRO_TIME);\r\n        });\r\n    }\r\n\r\n    private handleEventEmitter(row: TableRow, key: string, event: MouseEvent, emitter: TableClickEventEmitter): void {\r\n        if (emitter) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                window.setTimeout(() => {\r\n                    emitter.emit(this.generateTableCellInfo(row, key, event));\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private checkSelectedItem(row: TableRow): boolean {\r\n        return this.selection.selectionModel.get(row[this.primaryKey]);\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport { Any, DynamicHeightOptions, Fn } from '../interfaces/table-builder.internal';\r\nimport { TableBuilderOptionsImpl } from '../config/table-builder-options';\r\n\r\ninterface BoxView {\r\n    paddingTop: string;\r\n    paddingBottom: string;\r\n}\r\n\r\n@Directive({ selector: '[autoHeight]' })\r\nexport class AutoHeightDirective implements OnInit, OnChanges, OnDestroy {\r\n    private static readonly DEFAULT_VALUE: number = 0;\r\n    private static readonly HEAD_TOP: string = '10px';\r\n    private static readonly DELAY: number = 100;\r\n\r\n    @Input() public headerHeight: number = 0;\r\n    @Input() public footerHeight: number = 0;\r\n    @Input() public autoHeight: Partial<DynamicHeightOptions> = {};\r\n    @Output() public recalculatedHeight: EventEmitter<void> = new EventEmitter();\r\n\r\n    private useOnlyAutoViewPort: boolean = false;\r\n    private isDirtyCheck: boolean;\r\n    private taskId: number;\r\n    private handler: Fn;\r\n\r\n    constructor(private readonly element: ElementRef, public readonly ngZone: NgZone) {}\r\n\r\n    private get height(): number {\r\n        return this.autoHeight.height;\r\n    }\r\n\r\n    private get canCalculated(): boolean {\r\n        return this.autoHeight.inViewport && this.autoHeight.sourceLength > 0;\r\n    }\r\n\r\n    private get style(): string {\r\n        let height: string;\r\n\r\n        if (this.height) {\r\n            height = `${this.height}px`;\r\n        } else if (this.autoHeight.detect) {\r\n            const paddingTop: string = AutoHeightDirective.getStyle(this.rootCurrentElement, 'padding-top');\r\n            const paddingBottom: string = AutoHeightDirective.getStyle(this.rootCurrentElement, 'padding-bottom');\r\n\r\n            if (this.useOnlyAutoViewPort && this.columnHeight > this.parentOffsetHeight) {\r\n                height = this.getHeightByViewPort({ paddingTop, paddingBottom });\r\n            } else if (this.parentOffsetHeight > this.columnHeight) {\r\n                height = this.getDefaultHeight();\r\n            } else if (!this.isEmptyParentHeight) {\r\n                height = this.getHeightByParent({ paddingTop, paddingBottom });\r\n            } else {\r\n                height = this.getHeightByViewPort({ paddingTop, paddingBottom });\r\n            }\r\n        }\r\n\r\n        return height ? `display: block; height: ${height}` : '';\r\n    }\r\n\r\n    private get isEmptyParentHeight(): boolean {\r\n        return this.parentOffsetHeight < parseInt(AutoHeightDirective.HEAD_TOP);\r\n    }\r\n\r\n    private get parentOffsetHeight(): number {\r\n        return this.rootCurrentElement.clientHeight || AutoHeightDirective.DEFAULT_VALUE;\r\n    }\r\n\r\n    private get currentElement(): HTMLDivElement {\r\n        return this.element.nativeElement;\r\n    }\r\n\r\n    private get childElement(): Partial<HTMLDivElement> {\r\n        return ((this.element.nativeElement as HTMLDivElement).firstChild as HTMLDivElement) || {};\r\n    }\r\n\r\n    private get rootCurrentElement(): Partial<HTMLElement> {\r\n        return (this.currentElement.parentNode && this.currentElement.parentNode.parentElement) || {};\r\n    }\r\n\r\n    private get columnHeight(): number {\r\n        return this.autoHeight.columnHeight || 0;\r\n    }\r\n\r\n    private get autoViewHeight(): number {\r\n        return document.body.clientHeight - this.currentElement.getBoundingClientRect().top;\r\n    }\r\n\r\n    private static getStyle(element: Element | Any, strCssRule: string): string {\r\n        let strValue: string = '';\r\n\r\n        if (document.defaultView && document.defaultView.getComputedStyle) {\r\n            try {\r\n                strValue = document.defaultView.getComputedStyle(element, '').getPropertyValue(strCssRule);\r\n            } catch (e) {\r\n                strValue = '0px';\r\n            }\r\n        } else if (element.currentStyle) {\r\n            strCssRule = strCssRule.replace(/\\-(\\w)/g, (strMatch: string, p1: string): string => p1.toUpperCase());\r\n            strValue = element.currentStyle[strCssRule];\r\n        }\r\n\r\n        return strValue;\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.handler = (): void => this.recalculateTableSize();\r\n            window.addEventListener('resize', this.handler, { passive: true });\r\n        });\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if ('autoHeight' in changes) {\r\n            this.recalculateTableSize();\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        window.removeEventListener('resize', this.handler);\r\n    }\r\n\r\n    public recalculateTableSize(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            clearTimeout(this.taskId);\r\n            this.taskId = window.setTimeout(() => {\r\n                if (this.canCalculated && !this.isDirtyCheck) {\r\n                    this.markForCheck();\r\n                }\r\n\r\n                if (this.isDirtyCheck && this.autoHeight.inViewport) {\r\n                    this.calculateHeight();\r\n                    this.recalculatedHeight.emit();\r\n                }\r\n            }, AutoHeightDirective.DELAY);\r\n        });\r\n    }\r\n\r\n    public calculateHeight(): void {\r\n        if (this.canCalculated) {\r\n            this.setHeightByParent();\r\n        }\r\n    }\r\n\r\n    public markForCheck(): void {\r\n        this.isDirtyCheck = true;\r\n        if (this.parentOffsetHeight <= TableBuilderOptionsImpl.ROW_HEIGHT) {\r\n            this.useOnlyAutoViewPort = true;\r\n        }\r\n    }\r\n\r\n    private getDefaultHeight(): string {\r\n        const scrollbarHeight: number = this.childElement.offsetHeight - this.childElement.clientHeight || 0;\r\n        return `calc(${this.columnHeight + scrollbarHeight + this.headerHeight + this.footerHeight}px)`;\r\n    }\r\n\r\n    private getHeightByParent({ paddingTop, paddingBottom }: BoxView): string {\r\n        const viewportHeight: number = this.parentOffsetHeight - parseInt(AutoHeightDirective.HEAD_TOP);\r\n        return `calc(${viewportHeight}px - ${paddingTop} - ${paddingBottom})`;\r\n    }\r\n\r\n    private getHeightByViewPort({ paddingTop, paddingBottom }: BoxView): string {\r\n        const viewportHeight: number = this.autoViewHeight - parseInt(AutoHeightDirective.HEAD_TOP);\r\n        return this.columnHeight > viewportHeight\r\n            ? `calc(${viewportHeight}px - ${paddingTop} - ${paddingBottom})`\r\n            : this.getDefaultHeight();\r\n    }\r\n\r\n    private setHeightByParent(): void {\r\n        this.currentElement.setAttribute('style', this.style);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Any, KeyMap } from '../interfaces/table-builder.internal';\r\nimport { checkValueIsEmpty } from '../operators/check-value-is-empty';\r\nimport { getDeepValue } from '../operators/deep-value';\r\n\r\n@Pipe({ name: 'deepPath', pure: true })\r\nexport class DeepPathPipe implements PipeTransform {\r\n    public transform(item: KeyMap, path: string): Any {\r\n        const result: Any = getDeepValue(item, path);\r\n        return checkValueIsEmpty(result) ? '-' : result;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Any, KeyMap } from '../interfaces/table-builder.internal';\r\nimport { checkValueIsEmpty } from '../operators/check-value-is-empty';\r\n\r\n@Pipe({ name: 'defaultValue', pure: true })\r\nexport class DefaultValuePipe implements PipeTransform {\r\n    public transform(item: KeyMap, key: string): Any {\r\n        const result: Any = item[key];\r\n        return checkValueIsEmpty(result) ? '-' : result;\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    Input,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { SelectionService } from '../../services/selection/selection.service';\r\nimport { ImplicitContext, TableRow } from '../../interfaces/table-builder.external';\r\nimport { TableLineRow } from '../common/table-line-row';\r\nimport { UtilsService } from '../../services/utils/utils.service';\r\nimport { detectChanges } from '../../operators/detect-changes';\r\n\r\n@Component({\r\n    selector: 'table-cell',\r\n    templateUrl: './table-cell.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TableCellComponent extends TableLineRow implements OnInit, OnDestroy {\r\n    @Input() public item: TableRow;\r\n    @Input() public index: number;\r\n    @Input() public parent: HTMLDivElement;\r\n    @Input('is-filterable') public isFilterable: boolean;\r\n\r\n    public loaded: boolean;\r\n    private taskId: number;\r\n    public contextType: typeof ImplicitContext = ImplicitContext;\r\n\r\n    constructor(\r\n        public readonly cd: ChangeDetectorRef,\r\n        public readonly selection: SelectionService,\r\n        protected readonly utils: UtilsService,\r\n        private readonly ngZone: NgZone\r\n    ) {\r\n        super(selection, utils);\r\n        this.cd.reattach();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.isRendered) {\r\n            this.loaded = true;\r\n        } else {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                this.taskId = window.setTimeout(() => {\r\n                    this.loaded = true;\r\n                    detectChanges(this.cd);\r\n                }, this.index);\r\n            });\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        window.clearTimeout(this.taskId);\r\n    }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, Output } from '@angular/core';\r\n\r\n@Directive({ selector: '[observerView]' })\r\nexport class ObserverViewDirective implements AfterViewInit, OnDestroy {\r\n    private static readonly MIN_TIME_IDLE: number = 120;\r\n    @Output() public observeVisible: EventEmitter<boolean> = new EventEmitter();\r\n    @Input('rendered') public isRendered: boolean;\r\n    private observer: IntersectionObserver = null;\r\n    private previousRation: number = 0.0;\r\n    private frameId: number;\r\n\r\n    constructor(private element: ElementRef, private readonly ngZone: NgZone) {}\r\n\r\n    public ngAfterViewInit(): void {\r\n        this.observer = new IntersectionObserver(\r\n            (entries: IntersectionObserverEntry[]): void => {\r\n                entries.forEach((entry: IntersectionObserverEntry) => {\r\n                    this.ngZone.runOutsideAngular(() => {\r\n                        const isVisible: boolean =\r\n                            entry.intersectionRatio > this.previousRation || entry.isIntersecting;\r\n\r\n                        if (this.isRendered) {\r\n                            clearTimeout(this.frameId);\r\n                            this.frameId = window.setTimeout(() => {\r\n                                this.observeVisible.emit(isVisible);\r\n                            }, ObserverViewDirective.MIN_TIME_IDLE);\r\n                        } else {\r\n                            window.requestAnimationFrame(() => this.observeVisible.emit(isVisible));\r\n                        }\r\n                    });\r\n\r\n                    this.previousRation = entry.intersectionRatio;\r\n                });\r\n            },\r\n            {\r\n                root: null,\r\n                rootMargin: '0px 0px 0px 0px',\r\n                threshold: [0]\r\n            }\r\n        );\r\n\r\n        this.observer.observe(this.element.nativeElement);\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.element = { nativeElement: null };\r\n        clearTimeout(this.frameId);\r\n        this.observer.disconnect();\r\n    }\r\n}\r\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ContextMenuService } from '../../../services/context-menu/context-menu.service';\nimport { ContextMenuState } from '../../../services/context-menu/context-menu.interface';\nimport { ContextItemEvent } from '../../../interfaces/table-builder.external';\nimport { UtilsService } from '../../../services/utils/utils.service';\nimport { Subscription } from 'rxjs';\nimport { detectChanges } from '../../../operators/detect-changes';\n\n@Component({\n    selector: 'ngx-context-menu-item',\n    templateUrl: './ngx-context-menu-item.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxContextMenuItemComponent implements OnInit, OnDestroy {\n    private static readonly MIN_PADDING: number = 25;\n    @Input() public visible: boolean = true;\n    @Input() public contextTitle: boolean = null;\n    @Input() public disable: boolean = false;\n    @Input() public divider: boolean = false;\n    @Input('disable-sub-menu') public disableSubMenu: boolean = false;\n    @Input('sub-menu-width') public subMenuWidth: number = 300;\n    @Output() public onClick: EventEmitter<ContextItemEvent> = new EventEmitter();\n    @ViewChild('item', { static: false }) public itemRef: ElementRef<HTMLDivElement>;\n    public offsetX: number = null;\n    public offsetY: number = null;\n    private subscription: Subscription;\n    private taskId: number;\n\n    constructor(\n        private readonly contextMenu: ContextMenuService,\n        private readonly cd: ChangeDetectorRef,\n        private readonly utils: UtilsService,\n        private readonly ngZone: NgZone\n    ) {}\n\n    public get state(): Partial<ContextMenuState> {\n        return this.contextMenu.state;\n    }\n\n    public get clientRect(): Partial<ClientRect | DOMRect> {\n        return (this.itemElement.getBoundingClientRect && this.itemElement.getBoundingClientRect()) || {};\n    }\n\n    private get itemElement(): Partial<HTMLDivElement> {\n        return (this.itemRef && this.itemRef.nativeElement) || {};\n    }\n\n    public ngOnInit(): void {\n        this.subscription = this.contextMenu.events.subscribe(() => detectChanges(this.cd));\n    }\n\n    public ngOnDestroy(): void {\n        this.itemRef = null;\n        this.subscription.unsubscribe();\n    }\n\n    public calculateSubMenuPosition(ref: HTMLDivElement): void {\n        const contentExist: boolean = ref.innerHTML.trim().length !== 0;\n        if (contentExist) {\n            this.offsetX = this.clientRect.left + this.subMenuWidth - NgxContextMenuItemComponent.MIN_PADDING;\n            this.offsetX = this.offsetX - this.overflowX();\n\n            this.offsetY = this.clientRect.top - NgxContextMenuItemComponent.MIN_PADDING;\n            this.offsetY = this.offsetY - this.overflowY(ref);\n        }\n    }\n\n    public overflowX(): number {\n        const overflowX: number = this.subMenuWidth + this.offsetX - this.utils.bodyRect.width;\n        return overflowX > 0 ? overflowX + UtilsService.SCROLLBAR_WIDTH : 0;\n    }\n\n    public overflowY(ref: HTMLDivElement): number {\n        const overflowY: number = ref.offsetHeight + this.offsetY - this.utils.bodyRect.height;\n        return overflowY > 0 ? overflowY + UtilsService.SCROLLBAR_WIDTH : 0;\n    }\n\n    public emitClick(event: MouseEvent): void {\n        if (!this.disable) {\n            this.deferCloseMenu();\n\n            this.onClick.emit({\n                preventDefault: (): void => {\n                    window.clearTimeout(this.taskId);\n                }\n            });\n\n            event.stopPropagation();\n        }\n    }\n\n    private deferCloseMenu(): void {\n        this.ngZone.runOutsideAngular(() => {\n            this.taskId = window.setTimeout(() => {\n                this.contextMenu.close();\n            });\n        });\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'ngx-context-menu-divider',\n    template: '<div class=\"context-menu__divider\"></div>',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxContextMenuDividerComponent {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'ngx-menu-content',\n    templateUrl: './ngx-menu-content.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxMenuContentComponent {\n    @Input() public icon: string = null;\n    @Input('no-margin') public noMargin: boolean = null;\n    @Input('align-center') public alignCenter: boolean = null;\n\n    @HostBinding('class')\n    public get class(): string {\n        const cssClasses: string = `${this.noMargin !== null ? 'content-phrase' : ''}`;\n        return this.icon !== null ? `icon-place ${cssClasses}` : cssClasses;\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'ngx-empty',\n    template: '<ng-content></ng-content>',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxEmptyComponent {}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\nimport { FilterableService } from '../../services/filterable/filterable.service';\nimport { FilterEvent, TableFilterType } from '../../services/filterable/filterable.interface';\nimport { detectChanges } from '../../operators/detect-changes';\n\nconst { TIME_RELOAD }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\n\n@Component({\n    selector: 'ngx-filter-viewer',\n    template: '<span [class.filter-founded]=\"founded\" [innerHTML]=\"html\"></span>',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxFilterViewerComponent implements OnChanges, OnInit, OnDestroy {\n    @Input() public text: string = null;\n    @Input() public key: string = null;\n    @Input() public index: number = 0;\n    public html: string | SafeHtml;\n    public founded: boolean = false;\n    private subscription: Subscription;\n    private taskId: number;\n\n    constructor(\n        private readonly ngZone: NgZone,\n        private readonly cd: ChangeDetectorRef,\n        private readonly sanitizer: DomSanitizer,\n        private readonly filterable: FilterableService\n    ) {\n        this.cd.reattach();\n    }\n\n    private static wrapSelectedHtml(finder: string): string {\n        return `<span style=\"background-color: #FFFF00; color: #000\">${finder}</span>`;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes['text'] && changes['text'].firstChange) {\n            this.defaultHtmlValue();\n        }\n    }\n\n    public ngOnInit(): void {\n        this.subscription = this.filterable.events.subscribe((event: FilterEvent) => {\n            if (this.filterable.definition[this.key] || this.filterable.globalFilterValue) {\n                this.changeSelection(event);\n            } else {\n                this.defaultHtmlValue();\n            }\n\n            detectChanges(this.cd);\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.subscription.unsubscribe();\n    }\n\n    private changeSelection(event: FilterEvent): void {\n        this.ngZone.runOutsideAngular(() => {\n            window.clearInterval(this.taskId);\n            this.taskId = window.setTimeout(() => {\n                if (event.value || this.filterable.definition[this.key]) {\n                    this.selected(event);\n                } else {\n                    this.defaultHtmlValue();\n                }\n\n                detectChanges(this.cd);\n            }, TIME_RELOAD + this.index);\n        });\n    }\n\n    private selected(event: FilterEvent): void {\n        const value: string = this.filterable.definition[this.key] || event.value;\n        const type: TableFilterType = this.filterable.definition[this.key]\n            ? this.filterable.filterTypeDefinition[this.key]\n            : event.type;\n\n        if (type === TableFilterType.DOES_NOT_EQUAL || type === TableFilterType.DOES_NOT_CONTAIN) {\n            return;\n        }\n\n        let regexp: RegExp;\n        const escapedValue: string = value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n        if (type === TableFilterType.START_WITH) {\n            regexp = new RegExp(`^${escapedValue}`, 'i');\n        } else if (type === TableFilterType.END_WITH) {\n            regexp = new RegExp(`${escapedValue}$`, 'i');\n        } else if (type === TableFilterType.EQUALS) {\n            regexp = new RegExp(`^${escapedValue}$`, 'i');\n        } else {\n            regexp = new RegExp(`${escapedValue}`, 'ig');\n        }\n\n        const trustedHtml: string = String(this.text).replace(regexp, (finder: string) =>\n            NgxFilterViewerComponent.wrapSelectedHtml(finder)\n        );\n\n        this.html = this.sanitizer.bypassSecurityTrustHtml(trustedHtml);\n\n        if (trustedHtml.includes('span')) {\n            this.founded = true;\n        }\n    }\n\n    private defaultHtmlValue(): void {\n        this.html = this.text;\n        this.founded = false;\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'drag-icon',\n    templateUrl: './drag-icon.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DragIconComponent {}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'ngx-source-null',\n    template: '<ng-content></ng-content>',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxSourceNullComponent {}\n","import { AfterViewInit, Directive, Input, NgZone, OnDestroy } from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({ selector: '[overflowTooltip]' })\nexport class OverflowTooltipDirective implements AfterViewInit, OnDestroy {\n    @Input('overflowTooltip') public element: HTMLDivElement = null;\n    @Input('parent') public parent: HTMLDivElement = null;\n    @Input('text-center') public textCenter: boolean = null;\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    /**\n     * Minimal time before show tooltip\n     */\n    private readonly timeIdle: number = 500;\n    private readonly overflowSelector: string = 'table-grid__cell-overflow-content';\n    private frameId: number = null;\n\n    constructor(private ngZone: NgZone) {}\n\n    private get overflowContentElem(): HTMLDivElement {\n        return document.querySelector(`.${this.overflowSelector}`);\n    }\n\n    private static checkOverflow(element: HTMLDivElement, parent: HTMLDivElement): boolean {\n        return (\n            element.offsetWidth > parent.offsetWidth ||\n            element.offsetHeight > parent.offsetHeight ||\n            element.scrollWidth > element.offsetWidth ||\n            element.scrollHeight > element.offsetHeight\n        );\n    }\n\n    public ngAfterViewInit(): void {\n        fromEvent(this.element, 'mouseenter')\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.detectCheckOverflow());\n        fromEvent(this.element, 'mouseleave')\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n                clearInterval(this.frameId);\n            });\n    }\n\n    /**\n     * fix problem with memory leak\n     */\n    public ngOnDestroy(): void {\n        clearInterval(this.frameId);\n        this.removeElement();\n        this.destroy$.next(true);\n        this.destroy$.unsubscribe();\n        this.ngZone = null;\n        this.element = null;\n        this.parent = null;\n        this.destroy$ = null;\n    }\n\n    private detectCheckOverflow(): void {\n        clearInterval(this.frameId);\n        this.ngZone.runOutsideAngular(() => {\n            this.frameId = window.setTimeout(() => {\n                const isOverflow: boolean = OverflowTooltipDirective.checkOverflow(this.element, this.parent);\n                if (isOverflow) {\n                    this.showTooltip();\n                }\n            }, this.timeIdle);\n        });\n    }\n\n    private showTooltip(): void {\n        if (this.overflowContentElem) {\n            this.removeElement();\n            return;\n        }\n\n        const elem: HTMLDivElement = document.createElement('div');\n        const rect: ClientRect | DOMRect = this.element.getBoundingClientRect();\n        elem.classList.add(this.overflowSelector, this.textCenter ? 'text-center' : '');\n        elem.style.cssText = `left: ${rect.left}px; top: ${rect.top}px`;\n        document.body.appendChild(elem);\n\n        this.ngZone.runOutsideAngular(() => {\n            window.setTimeout(() => {\n                if (this.overflowContentElem) {\n                    this.overflowContentElem.classList.add('visible');\n                    this.overflowContentElem.innerHTML = this.element.innerHTML.trim().replace(/<!--.*?-->/g, '');\n\n                    fromEvent(this.overflowContentElem, 'mouseleave')\n                        .pipe(takeUntil(this.destroy$))\n                        .subscribe(() => this.removeElement());\n                }\n            });\n        });\n    }\n\n    private removeElement(): void {\n        if (this.overflowContentElem) {\n            this.overflowContentElem.parentNode.removeChild(this.overflowContentElem);\n        }\n    }\n}\n","import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { VirtualScrollerModule } from 'ngx-virtual-scroller';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NGX_TABLE_OPTIONS } from './table/config/table-builder.tokens';\r\nimport { TableBuilderComponent } from './table/table-builder.component';\r\nimport { WheelThrottlingDirective } from './table/directives/wheel.directive';\r\nimport { TableTheadComponent } from './table/components/table-thead/table-thead.component';\r\nimport { TableTbodyComponent } from './table/components/table-tbody/table-tbody.component';\r\nimport { AutoHeightDirective } from './table/directives/auto-height.directive';\r\nimport { NgxColumnComponent } from './table/components/ngx-column/ngx-column.component';\r\nimport { TableBuilderOptions } from './table/interfaces/table-builder.external';\r\nimport { TemplateHeadThDirective } from './table/directives/rows/template-head-th.directive';\r\nimport { TemplateBodyTdDirective } from './table/directives/rows/template-body-td.directive';\r\nimport { DeepPathPipe } from './table/pipes/deep-path.pipe';\r\nimport { UtilsService } from './table/services/utils/utils.service';\r\nimport { TableBuilderOptionsImpl } from './table/config/table-builder-options';\r\nimport { DefaultValuePipe } from './table/pipes/default-value.pipe';\r\nimport { NgxOptionsComponent } from './table/components/ngx-options/ngx-options.component';\r\nimport { WebWorkerThreadService } from './table/worker/worker-thread.service';\r\nimport { TableCellComponent } from './table/components/table-cell/table-cell.component';\r\nimport { ObserverViewDirective } from './table/directives/observer-view.directive';\r\nimport { NgxContextMenuComponent } from './table/components/ngx-context-menu/ngx-context-menu.component';\r\nimport { NgxContextMenuItemComponent } from './table/components/ngx-context-menu/ngx-context-menu-item/ngx-context-menu-item.component';\r\nimport { NgxContextMenuDividerComponent } from './table/components/ngx-context-menu/ngx-context-menu-divider/ngx-context-menu-divider.component';\r\nimport { NgxMenuContentComponent } from './table/components/ngx-context-menu/ngx-context-menu-item/ngx-menu-content-place/ngx-menu-content.component';\r\nimport { NgxEmptyComponent } from './table/components/ngx-empty/ngx-empty.component';\r\nimport { NgxHeaderComponent } from './table/components/ngx-header/ngx-header.component';\r\nimport { NgxFooterComponent } from './table/components/ngx-footer/ngx-footer.component';\r\nimport { NgxFilterViewerComponent } from './table/components/ngx-filter-viewer/ngx-filter-viewer.component';\r\nimport { NgxFilterComponent } from './table/components/ngx-filter/ngx-filter.component';\r\nimport { NgxFilterDirective } from './table/directives/ngx-filter.directive';\r\nimport { DragIconComponent } from './table/components/drag-icon/drag-icon.component';\r\nimport { NgxSourceNullComponent } from './table/components/ngx-source-null/ngx-source-null.component';\r\nimport { OverflowTooltipDirective } from './table/directives/overflow-tooltip.directive';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, VirtualScrollerModule, DragDropModule],\r\n    declarations: [\r\n        TableBuilderComponent,\r\n        WheelThrottlingDirective,\r\n        AutoHeightDirective,\r\n        TableTheadComponent,\r\n        TableTbodyComponent,\r\n        NgxColumnComponent,\r\n        TemplateHeadThDirective,\r\n        TemplateBodyTdDirective,\r\n        DeepPathPipe,\r\n        DefaultValuePipe,\r\n        NgxOptionsComponent,\r\n        TableCellComponent,\r\n        ObserverViewDirective,\r\n        NgxContextMenuComponent,\r\n        NgxContextMenuItemComponent,\r\n        NgxContextMenuDividerComponent,\r\n        NgxMenuContentComponent,\r\n        NgxEmptyComponent,\r\n        NgxHeaderComponent,\r\n        NgxFooterComponent,\r\n        NgxFilterViewerComponent,\r\n        NgxFilterComponent,\r\n        NgxFilterDirective,\r\n        DragIconComponent,\r\n        NgxSourceNullComponent,\r\n        OverflowTooltipDirective\r\n    ],\r\n    providers: [UtilsService, WebWorkerThreadService],\r\n    exports: [\r\n        TableBuilderComponent,\r\n        TemplateHeadThDirective,\r\n        TemplateBodyTdDirective,\r\n        NgxColumnComponent,\r\n        NgxOptionsComponent,\r\n        NgxContextMenuComponent,\r\n        NgxContextMenuItemComponent,\r\n        NgxContextMenuDividerComponent,\r\n        NgxMenuContentComponent,\r\n        NgxEmptyComponent,\r\n        NgxHeaderComponent,\r\n        NgxFooterComponent,\r\n        NgxFilterViewerComponent,\r\n        NgxFilterComponent,\r\n        NgxFilterDirective,\r\n        NgxSourceNullComponent\r\n    ]\r\n})\r\nexport class TableBuilderModule {\r\n    private static readonly ROOT_OPTIONS: InjectionToken<string> = new InjectionToken<string>('NGX_TABLE_OPTIONS');\r\n\r\n    public static forRoot(config: Partial<TableBuilderOptions> = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: TableBuilderModule,\r\n            providers: [\r\n                {\r\n                    provide: TableBuilderModule.ROOT_OPTIONS,\r\n                    useValue: config\r\n                },\r\n                {\r\n                    provide: NGX_TABLE_OPTIONS,\r\n                    useFactory: TableBuilderModule.loggerConfigFactory,\r\n                    deps: [TableBuilderModule.ROOT_OPTIONS]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    private static loggerConfigFactory(config: Partial<TableBuilderOptions>): TableBuilderOptions {\r\n        return Object.assign(new TableBuilderOptionsImpl(), config);\r\n    }\r\n}\r\n"],"names":["InjectionToken","Subject","Injectable","NgZone","tslib_1.__extends","Component","ChangeDetectionStrategy","ViewEncapsulation","ChangeDetectorRef","ApplicationRef","Input","ViewChild","EventEmitter","Output","Directive","TemplateRef","ContentChild","tslib_1.__values","ReplaySubject","TIME_IDLE","ContentChildren","trigger","state","style","transition","animate","fromEvent","takeUntil","moveItemInArray","Inject","filter","ElementRef","Pipe","HostBinding","TIME_RELOAD","DomSanitizer","NgModule","CommonModule","VirtualScrollerModule","DragDropModule"],"mappings":"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"}