{"version":3,"file":"table-builder.js","sources":["ng://@angular-ru/ng-table-builder/lib/table/operators/shallow-update-row.operator.ts","ng://@angular-ru/ng-table-builder/lib/table/interfaces/table-builder.external.ts","ng://@angular-ru/ng-table-builder/lib/table/config/table-builder.tokens.ts","ng://@angular-ru/ng-table-builder/lib/table/interfaces/table-builder.internal.ts","ng://@angular-ru/ng-table-builder/lib/table/services/context-menu/context-menu.interface.ts","ng://@angular-ru/ng-table-builder/lib/table/operators/deep-value.ts","ng://@angular-ru/ng-table-builder/lib/table/services/context-menu/context-menu.service.ts","ng://@angular-ru/ng-table-builder/lib/table/operators/check-value-is-empty.ts","ng://@angular-ru/ng-table-builder/lib/table/services/utils/utils.service.ts","ng://@angular-ru/ng-table-builder/lib/table/operators/detect-changes.ts","ng://@angular-ru/ng-table-builder/lib/table/components/common/modal-view-layer.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-context-menu/ngx-context-menu.component.ts","ng://@angular-ru/ng-table-builder/lib/table/services/filterable/filterable.interface.ts","ng://@angular-ru/ng-table-builder/lib/table/components/common/column-options.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-options/ngx-options.component.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/rows/template-cell.common.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/rows/template-head-th.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/rows/template-body-td.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-column/ngx-column.component.ts","ng://@angular-ru/ng-table-builder/lib/table/config/table-builder-options.ts","ng://@angular-ru/ng-table-builder/lib/table/components/common/table-content.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-header/ngx-header.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-footer/ngx-footer.component.ts","ng://@angular-ru/ng-table-builder/lib/table/worker/worker-thread.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/filterable/filter.worker.ts","ng://@angular-ru/ng-table-builder/lib/table/services/filterable/filterable.service.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/ngx-filter.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-filter/ngx-filter.component.ts","ng://@angular-ru/ng-table-builder/lib/table/operators/is-firefox.ts","ng://@angular-ru/ng-table-builder/lib/table/table-builder.api.ts","ng://@angular-ru/ng-table-builder/lib/table/animations/fade.animation.ts","ng://@angular-ru/ng-table-builder/lib/table/services/template-parser/schema-builder.class.ts","ng://@angular-ru/ng-table-builder/lib/table/services/template-parser/template-parser.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/sortable/sortable.interfaces.ts","ng://@angular-ru/ng-table-builder/lib/table/services/sortable/sort.worker.ts","ng://@angular-ru/ng-table-builder/lib/table/services/sortable/sortable.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/selection/selection.ts","ng://@angular-ru/ng-table-builder/lib/table/services/selection/selection-range.ts","ng://@angular-ru/ng-table-builder/lib/table/services/selection/selection.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/resizer/resizable.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/draggable/draggable.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/table-view-changes/ngx-table-view-changes.service.ts","ng://@angular-ru/ng-table-builder/lib/table/services/overload-scroll/overload-scroll.service.ts","ng://@angular-ru/ng-table-builder/lib/table/table-builder.component.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/wheel.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/components/common/table-line-row.ts","ng://@angular-ru/ng-table-builder/lib/table/components/table-thead/table-thead.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/table-tbody/table-tbody.component.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/auto-height.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/pipes/deep-path.pipe.ts","ng://@angular-ru/ng-table-builder/lib/table/pipes/default-value.pipe.ts","ng://@angular-ru/ng-table-builder/lib/table/components/table-cell/table-cell.component.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/observer-view.directive.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-context-menu/ngx-context-menu-item/ngx-context-menu-item.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-context-menu/ngx-context-menu-divider/ngx-context-menu-divider.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-context-menu/ngx-context-menu-item/ngx-menu-content-place/ngx-menu-content.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-empty/ngx-empty.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-filter-viewer/ngx-filter-viewer.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/drag-icon/drag-icon.component.ts","ng://@angular-ru/ng-table-builder/lib/table/components/ngx-source-null/ngx-source-null.component.ts","ng://@angular-ru/ng-table-builder/lib/table/directives/overflow-tooltip.directive.ts","ng://@angular-ru/ng-table-builder/lib/table-builder.module.ts"],"sourcesContent":["import { TableRow } from '../interfaces/table-builder.external';\r\nimport { Any } from '../interfaces/table-builder.internal';\r\n\r\nexport function shallowUpdateRow(data: TableRow[], row: TableRow, key: string, value: Any): TableRow[] {\r\n    const index: number = data.indexOf(row);\r\n    return [...data.slice(0, index), { ...data[index], [key]: value }, ...data.slice(index + 1, data.length)];\r\n}\r\n","import { EventEmitter, TemplateRef } from '@angular/core';\r\nimport { Any, DeepPartial, KeyMap, TableBrowserEvent } from './table-builder.internal';\r\n\r\nexport type TableRow<T = Any> =\r\n    | Any\r\n    | {\r\n          [key: string]: T;\r\n      };\r\n\r\nexport interface TableBuilderOptions {\r\n    bufferAmount: number;\r\n    wheelMaxDelta: number;\r\n}\r\n\r\nexport enum ImplicitContext {\r\n    ROW = 'ROW',\r\n    CELL = 'CELL'\r\n}\r\n\r\nexport type TableClickEventEmitter = EventEmitter<TableEvent> | null;\r\n\r\nexport interface TableCellOptions<T = Any> {\r\n    class: string | string[] | KeyMap;\r\n    textBold: boolean;\r\n    nowrap: boolean;\r\n    useDeepPath: boolean;\r\n    style: KeyMap;\r\n    width: number;\r\n    height: number;\r\n    template: TemplateRef<T>;\r\n    context: ImplicitContext;\r\n    onClick: EventEmitter<Any>;\r\n    dblClick: EventEmitter<Any>;\r\n}\r\n\r\nexport interface TableHeadCellOptions<T = Any> {\r\n    headTitle: string;\r\n    emptyHead: boolean;\r\n}\r\n\r\nexport interface ColumnsSchema<T = Any> {\r\n    key: string;\r\n    td: TableCellOptions<T>;\r\n    th: TableCellOptions<T> & TableHeadCellOptions;\r\n    width: number;\r\n    cssStyle: string[];\r\n    cssClass: string[];\r\n    stickyLeft: boolean;\r\n    stickyRight: boolean;\r\n    resizable: boolean;\r\n    sortable: boolean;\r\n    filterable: boolean;\r\n    draggable: boolean;\r\n    customColumn: boolean;\r\n    verticalLine: boolean;\r\n    isModel: boolean;\r\n    excluded: boolean;\r\n    isVisible: boolean;\r\n}\r\n\r\nexport interface TableUpdateSchema<T = Any> {\r\n    columns: SimpleSchemaColumns;\r\n    name: string | null;\r\n}\r\n\r\nexport interface TableEvent<T = Any> {\r\n    value: T;\r\n    row: TableRow;\r\n    event: TableBrowserEvent;\r\n    preventDefault: () => void;\r\n}\r\n\r\nexport interface ContextItemEvent {\r\n    preventDefault(): void;\r\n}\r\n\r\nexport type SimpleSchemaColumns = Array<DeepPartial<ColumnsSchema>>;\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const NGX_TABLE_OPTIONS: InjectionToken<string> = new InjectionToken('NGX_TABLE_OPTIONS');\r\n","import { QueryList } from '@angular/core';\r\n\r\nexport enum PrimaryKey {\r\n    ID = 'id'\r\n}\r\n\r\nexport enum TableSimpleChanges {\r\n    SOURCE_KEY = 'source',\r\n    SCHEMA_COLUMNS = 'schemaColumns'\r\n}\r\n\r\nexport interface DynamicHeightOptions {\r\n    detect: boolean;\r\n    inViewport: boolean;\r\n    height: number;\r\n    columnHeight: number;\r\n    statusRendered: boolean;\r\n    sourceLength: number;\r\n}\r\n\r\nexport interface ScrollOffsetStatus {\r\n    offset: boolean;\r\n}\r\n\r\nexport interface RecalculatedStatus {\r\n    recalculateHeight: boolean;\r\n}\r\n\r\nexport interface KeyMap<T = Any> {\r\n    [key: string]: T;\r\n}\r\n\r\nexport type RowId = string | number;\r\n\r\nexport type Fn<T = Any, U = Any> = (...args: T[]) => U;\r\n\r\nexport type Any = any; // NOSONAR\r\n\r\nexport interface SelectionStatus {\r\n    status: boolean;\r\n}\r\n\r\nexport enum KeyType {\r\n    KEYDOWN = 'keydown',\r\n    KEYUP = 'keyup'\r\n}\r\n\r\nexport type TableBrowserEvent = Event | MouseEvent | KeyboardEvent;\r\n\r\nexport interface ResizeEvent {\r\n    event: TableBrowserEvent;\r\n    key: string;\r\n}\r\n\r\n// Bug: 'QueryList' is imported from external module '@angular/core' but never used\r\nexport type QueryListRef<T> = QueryList<T>;\r\n\r\nexport interface TemplateKeys {\r\n    allRenderedKeys: string[];\r\n    simpleRenderedKeys: Set<string>;\r\n    overridingRenderedKeys: Set<string>;\r\n}\r\n\r\nexport type Resolver<T> = (value?: T | PromiseLike<T>) => void;\r\n\r\nexport interface MousePosition {\r\n    left: number;\r\n    top: number;\r\n}\r\n\r\nexport type DeepPartial<T = Any> = {\r\n    [P in keyof T]?: T[P] extends Array<infer U>\r\n        ? Array<DeepPartial<U>>\r\n        : T[P] extends ReadonlyArray<infer R>\r\n        ? ReadonlyArray<DeepPartial<R>>\r\n        : DeepPartial<T[P]>;\r\n};\r\n","import { TableRow } from '../../interfaces/table-builder.external';\r\nimport { Any, MousePosition } from '../../interfaces/table-builder.internal';\r\n\r\nexport class ContextMenuState {\r\n    public opened: boolean = false;\r\n    public position: MousePosition = { left: null, top: null };\r\n    public key: string = null;\r\n    public item: TableRow = null;\r\n    public value: Any = null;\r\n\r\n    constructor(state: Partial<ContextMenuState> = null) {\r\n        if (state) {\r\n            this.opened = state.opened;\r\n            this.position = state.position;\r\n            this.key = state.key;\r\n            this.item = state.item;\r\n            this.value = state.value;\r\n        }\r\n    }\r\n}\r\n","import { Any } from '../interfaces/table-builder.internal';\r\n\r\nexport function getDeepValue(obj: Any, path: string): Any {\r\n    if (!(path && path.length)) {\r\n        return obj;\r\n    }\r\n\r\n    const parts: string[] = path.split('.');\r\n    let result: Any = obj;\r\n    let index: number = 0;\r\n\r\n    for (; result && index < parts.length; ++index) {\r\n        result = result[parts[index]];\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { ContextMenuState } from './context-menu.interface';\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { getDeepValue } from '../../operators/deep-value';\r\n\r\n@Injectable()\r\nexport class ContextMenuService {\r\n    public state: Partial<ContextMenuState> = {};\r\n    public readonly events: Subject<void> = new Subject();\r\n\r\n    public openContextMenu(event: MouseEvent, key: string = null, row: TableRow = null): void {\r\n        this.state = new ContextMenuState({\r\n            key,\r\n            item: row,\r\n            opened: true,\r\n            value: getDeepValue(row, key) || null,\r\n            position: { left: event.clientX, top: event.clientY }\r\n        });\r\n\r\n        this.events.next();\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    public close(): void {\r\n        this.state = new ContextMenuState();\r\n        this.events.next();\r\n    }\r\n}\r\n","import { Any } from '../interfaces/table-builder.internal';\r\n\r\nexport function checkValueIsEmpty(value: Any): boolean {\r\n    if (typeof value === 'number') {\r\n        return isNaN(value) || value === Infinity;\r\n    } else if (typeof value === 'string') {\r\n        return value.trim().length === 0;\r\n    } else {\r\n        return !value;\r\n    }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { Any, Fn, KeyMap } from '../../interfaces/table-builder.internal';\r\nimport { UtilsInterface } from './utils.interface';\r\nimport { checkValueIsEmpty } from '../../operators/check-value-is-empty';\r\n\r\n@Injectable()\r\nexport class UtilsService implements UtilsInterface {\r\n    public static readonly SCROLLBAR_WIDTH: number = 10;\r\n\r\n    constructor(private readonly zone: NgZone) {}\r\n\r\n    public get bodyRect(): ClientRect | DOMRect {\r\n        return document.querySelector('body').getBoundingClientRect();\r\n    }\r\n\r\n    private static replaceUndefinedOrNull(_: string, value: unknown): unknown {\r\n        return checkValueIsEmpty(value) ? undefined : value;\r\n    }\r\n\r\n    public clone<T = Any>(obj: T): T {\r\n        return JSON.parse(JSON.stringify(obj || null)) || {};\r\n    }\r\n\r\n    public isObject<T = object>(obj: T): boolean {\r\n        return obj === Object(obj);\r\n    }\r\n\r\n    public mergeDeep<T>(target: T, source: T): T {\r\n        const output: T = { ...target };\r\n        if (this.isObject(target) && this.isObject(source)) {\r\n            Object.keys(source).forEach((key: string) => {\r\n                if (this.isObject(source[key])) {\r\n                    if (!(key in target)) {\r\n                        Object.assign(output, { [key]: source[key] });\r\n                    } else {\r\n                        output[key] = this.mergeDeep(target[key], source[key]);\r\n                    }\r\n                } else {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                }\r\n            });\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    public flattenKeysByRow(row: TableRow, parentKey: string = null, keys: string[] = []): string[] {\r\n        for (const key in row) {\r\n            if (!row.hasOwnProperty(key)) {\r\n                continue;\r\n            }\r\n\r\n            const element: Any = row[key];\r\n            const isObject: boolean = typeof element === 'object' && element !== null && !Array.isArray(element);\r\n\r\n            if (isObject) {\r\n                const implicitKey: string = parentKey ? `${parentKey}.${key}` : key;\r\n                this.flattenKeysByRow(row[key], implicitKey, keys);\r\n            } else {\r\n                keys.push(parentKey ? `${parentKey}.${key}` : key);\r\n            }\r\n        }\r\n\r\n        return keys;\r\n    }\r\n\r\n    public clean(obj: KeyMap): KeyMap {\r\n        return JSON.parse(JSON.stringify(obj, UtilsService.replaceUndefinedOrNull.bind(this)));\r\n    }\r\n\r\n    public requestAnimationFrame(callback: Fn): Promise<void> {\r\n        return new Promise((resolve: Fn): void => {\r\n            this.zone.runOutsideAngular(() => {\r\n                window.requestAnimationFrame(() => {\r\n                    callback();\r\n                    resolve();\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    public microtask(callback: Fn): Promise<void> {\r\n        return new Promise((resolve: Fn): void => {\r\n            callback();\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    public macrotask(callback: Fn, time: number = 0): Promise<void> {\r\n        return new Promise((resolve: Fn): void => {\r\n            this.zone.runOutsideAngular(() => {\r\n                window.setTimeout(() => {\r\n                    callback();\r\n                    resolve();\r\n                }, time);\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectorRef, ViewRef } from '@angular/core';\r\n\r\nexport function detectChanges(cd: ChangeDetectorRef): void {\r\n    if (!(cd as ViewRef).destroyed) {\r\n        cd.detectChanges();\r\n    }\r\n}\r\n","import { ApplicationRef, ChangeDetectorRef, ElementRef, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { UtilsService } from '../../services/utils/utils.service';\r\nimport { Fn, MousePosition } from '../../interfaces/table-builder.internal';\r\nimport { detectChanges } from '../../operators/detect-changes';\r\n\r\nexport interface PositionState {\r\n    key: string;\r\n    opened: boolean;\r\n    position: MousePosition;\r\n}\r\n\r\nexport abstract class ModalViewLayer<T extends PositionState> implements OnDestroy {\r\n    public width: number = null;\r\n    public height: number = null;\r\n    public isViewed: boolean = false;\r\n    public abstract closeTime: number;\r\n    protected subscription: Subscription = null;\r\n    protected abstract targetElement: ElementRef<HTMLDivElement>;\r\n    protected taskId: number;\r\n    private clickListener: Fn;\r\n\r\n    protected constructor(\r\n        protected readonly cd: ChangeDetectorRef,\r\n        protected readonly app: ApplicationRef,\r\n        protected readonly utils: UtilsService,\r\n        protected readonly ngZone: NgZone\r\n    ) {}\r\n\r\n    public get left(): number {\r\n        return (this.state.position && this.state.position.left) || 0;\r\n    }\r\n\r\n    public get top(): number {\r\n        return (this.state.position && this.state.position.top) || 0;\r\n    }\r\n\r\n    public get overflowX(): number {\r\n        const overflowX: number = this.width + this.left - this.utils.bodyRect.width;\r\n        return overflowX > 0 ? overflowX + UtilsService.SCROLLBAR_WIDTH : 0;\r\n    }\r\n\r\n    public get overflowY(): number {\r\n        const overflowY: number = this.height + this.top - this.utils.bodyRect.height;\r\n        return overflowY > 0 ? overflowY + UtilsService.SCROLLBAR_WIDTH : 0;\r\n    }\r\n\r\n    public abstract get state(): Partial<T>;\r\n\r\n    public abstract close(event: MouseEvent): void;\r\n\r\n    public updateView(): void {\r\n        this.cd.detectChanges();\r\n        this.app.tick();\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.removeEventListener();\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    protected update(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.setTimeout(() => {\r\n                this.isViewed = this.state.opened;\r\n                this.updateView();\r\n\r\n                if (this.state.opened) {\r\n                    this.removeEventListener();\r\n                    this.preventClose();\r\n                    this.listenInsideClick();\r\n                }\r\n\r\n                window.setTimeout(() => this.updateView());\r\n            });\r\n        });\r\n    }\r\n\r\n    private listenInsideClick(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.clickListener = (event: MouseEvent): void => {\r\n                try {\r\n                    const origin: Node = this.targetElement.nativeElement;\r\n                    const target: Node = event.target as Node;\r\n                    if (!origin.contains(target)) {\r\n                        this.removeListener(event);\r\n                        this.taskId = window.setTimeout(() => this.removeListener(event), this.closeTime);\r\n                    }\r\n                } catch (e) {\r\n                    this.removeEventListener();\r\n                }\r\n            };\r\n\r\n            window.addEventListener('mousedown', this.clickListener, true);\r\n        });\r\n    }\r\n\r\n    private removeListener(event: MouseEvent): void {\r\n        this.removeEventListener();\r\n        this.close(event);\r\n        detectChanges(this.cd);\r\n    }\r\n\r\n    private removeEventListener(): void {\r\n        window.removeEventListener('mousedown', this.clickListener, true);\r\n    }\r\n\r\n    public preventClose(): void {\r\n        window.clearTimeout(this.taskId);\r\n    }\r\n}\r\n","import {\n    ApplicationRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Input,\n    NgZone,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\nimport { ContextMenuState } from '../../services/context-menu/context-menu.interface';\nimport { UtilsService } from '../../services/utils/utils.service';\nimport { ModalViewLayer } from '../common/modal-view-layer';\n\n// @dynamic\n@Component({\n    selector: 'ngx-context-menu',\n    templateUrl: './ngx-context-menu.component.html',\n    styleUrls: ['./ngx-context-menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxContextMenuComponent extends ModalViewLayer<ContextMenuState> implements OnInit {\n    @Input() public width: number = 300;\n    @Input() public height: number = 300;\n    @Input('max-height') public maxHeight: number = 400;\n    public closeTime: number = 0;\n\n    @ViewChild('targetElement', { static: false })\n    protected targetElement: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private readonly contextMenu: ContextMenuService,\n        protected readonly cd: ChangeDetectorRef,\n        protected readonly app: ApplicationRef,\n        protected readonly utils: UtilsService,\n        protected readonly ngZone: NgZone\n    ) {\n        super(cd, app, utils, ngZone);\n    }\n\n    public get state(): Partial<ContextMenuState> {\n        return this.contextMenu.state;\n    }\n\n    public ngOnInit(): void {\n        this.subscription = this.contextMenu.events.subscribe(() => this.update());\n    }\n\n    public close(event: MouseEvent): void {\n        this.contextMenu.close();\n        event.preventDefault();\n    }\n}\n","import { TableRow } from '../../interfaces/table-builder.external';\r\nimport { Fn, KeyMap, MousePosition } from '../../interfaces/table-builder.internal';\r\n\r\nexport interface FilterGlobalOpts {\r\n    value: string;\r\n    type: TableFilterType;\r\n}\r\n\r\nexport interface FilterColumnsOpts {\r\n    isEmpty: boolean;\r\n    values: KeyMap<string>;\r\n    types: KeyMap<TableFilterType>;\r\n}\r\n\r\nexport interface FilterableMessage {\r\n    source: TableRow[];\r\n    types: typeof TableFilterType;\r\n    global: FilterGlobalOpts;\r\n    columns: FilterColumnsOpts;\r\n}\r\n\r\nexport enum TableFilterType {\r\n    START_WITH = 'START_WITH',\r\n    END_WITH = 'END_WITH',\r\n    CONTAINS = 'CONTAINS',\r\n    DOES_NOT_CONTAIN = 'DOES_NOT_CONTAIN',\r\n    EQUALS = 'EQUALS',\r\n    DOES_NOT_EQUAL = 'DOES_NOT_EQUAL'\r\n}\r\n\r\nexport interface FilterEvent {\r\n    value: string;\r\n    type: TableFilterType;\r\n}\r\n\r\nexport class FilterStateEvent {\r\n    public key: string = null;\r\n    public opened: boolean = null;\r\n    public position: MousePosition = { left: null, top: null };\r\n}\r\n\r\nexport interface FilterWorkerEvent {\r\n    source: TableRow[];\r\n    fireSelection: Fn;\r\n}\r\n","import { Input } from '@angular/core';\r\nimport { TableFilterType } from '../../services/filterable/filterable.interface';\r\n\r\nexport class ColumnOptions {\r\n    @Input() public nowrap: boolean = null;\r\n    @Input() public width: number = null;\r\n    @Input() public resizable: boolean = null;\r\n    @Input() public sortable: boolean = null;\r\n    @Input() public filterable: boolean = null;\r\n    @Input() public draggable: boolean = null;\r\n    @Input('filter-type') public filterType: TableFilterType = null;\r\n    @Input('css-class') public cssClass: string[];\r\n    @Input('css-style') public cssStyle: string[];\r\n}\r\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\r\nimport { ColumnOptions } from '../common/column-options';\r\n\r\n@Component({\r\n    selector: 'ngx-options',\r\n    templateUrl: './ngx-options.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgxOptionsComponent extends ColumnOptions {}\r\n","import { EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\nimport { Any, KeyMap } from '../../interfaces/table-builder.internal';\r\nimport { TableEvent } from '../../interfaces/table-builder.external';\r\n\r\nexport abstract class TemplateCellCommon {\r\n    public type: string = null;\r\n    @Input() public row: boolean = null;\r\n    @Input() public bold: boolean = null;\r\n    @Input() public nowrap: boolean = true;\r\n    @Input() public width: number = null;\r\n    @Input() public height: number = null;\r\n    @Input('ng-style') public cssStyles: KeyMap = null;\r\n    @Input('ng-class') public cssClasses: string | string[] | KeyMap = null;\r\n    @Output() public onClick: EventEmitter<TableEvent> = new EventEmitter();\r\n    @Output() public dblClick: EventEmitter<TableEvent> = new EventEmitter();\r\n    protected constructor(public template: TemplateRef<unknown>) {}\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\nimport { TemplateCellCommon } from './template-cell.common';\r\n\r\n@Directive({ selector: 'ng-template[ngx-th]' })\r\nexport class TemplateHeadThDirective extends TemplateCellCommon {\r\n    @Input('ngx-th') public type: string = null;\r\n    public nowrap: boolean = false;\r\n\r\n    constructor(public template: TemplateRef<unknown>) {\r\n        super(template);\r\n        this.bold = true;\r\n    }\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\nimport { TemplateCellCommon } from './template-cell.common';\r\n\r\n@Directive({ selector: 'ng-template[ngx-td]' })\r\nexport class TemplateBodyTdDirective extends TemplateCellCommon {\r\n    @Input('ngx-td') public type: string = null;\r\n    constructor(public template: TemplateRef<unknown>) {\r\n        super(template);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, ContentChild, Input, ViewEncapsulation } from '@angular/core';\r\nimport { TemplateHeadThDirective } from '../../directives/rows/template-head-th.directive';\r\nimport { TemplateBodyTdDirective } from '../../directives/rows/template-body-td.directive';\r\nimport { ColumnOptions } from '../common/column-options';\r\n\r\n@Component({\r\n    selector: 'ngx-column',\r\n    templateUrl: './ngx-column.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgxColumnComponent extends ColumnOptions {\r\n    @Input() public key: string = null;\r\n    @Input('sticky') public stickyLeft: boolean = false;\r\n    @Input('empty-head') public emptyHead: boolean = null;\r\n    @Input('head-title') public headTitle: string = null;\r\n    @Input('custom-key') public customKey: boolean = false;\r\n    @Input('important-template') public importantTemplate: boolean = false;\r\n    @Input('sticky-end') public stickyRight: boolean = false;\r\n    @Input('vertical-line') public verticalLine: boolean = false;\r\n    @ContentChild(TemplateHeadThDirective, { static: false }) public th: TemplateHeadThDirective;\r\n    @ContentChild(TemplateBodyTdDirective, { static: false }) public td: TemplateBodyTdDirective;\r\n\r\n    public withKey(key: string): NgxColumnComponent {\r\n        this.key = key;\r\n        return this;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TableBuilderOptions } from '../interfaces/table-builder.external';\r\n\r\n@Injectable()\r\nexport class TableBuilderOptionsImpl implements TableBuilderOptions {\r\n    public static readonly MACRO_TIME: number = 1000;\r\n    public static readonly TIME_RELOAD: number = 400;\r\n    public static readonly COLUMN_RESIZE_MIN_WIDTH: number = 50;\r\n    public static readonly FRAME_TIME: number = 66;\r\n    public static readonly ROW_HEIGHT: number = 45;\r\n    public static readonly TIME_IDLE: number = 200;\r\n    public wheelMaxDelta: number = 300;\r\n    public bufferAmount: number = 0;\r\n}\r\n","import { Input } from '@angular/core';\r\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\r\n\r\nexport class TableContent {\r\n    @Input() public height: number = TableBuilderOptionsImpl.ROW_HEIGHT;\r\n    @Input('content-cell') public contentCell: boolean = null;\r\n    @Input('align-center') public alignCenter: boolean = null;\r\n    @Input('css-class') public cssClasses: string[] = null;\r\n    @Input() public bold: boolean = null;\r\n}\r\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { TableContent } from '../common/table-content';\n\n@Component({\n    selector: 'ngx-header',\n    templateUrl: './ngx-header.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxHeaderComponent extends TableContent {}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { TableContent } from '../common/table-content';\n\n@Component({\n    selector: 'ngx-footer',\n    templateUrl: './ngx-footer.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxFooterComponent extends TableContent {}\n","import { Injectable } from '@angular/core';\r\nimport { Executor, WebWorkerThread } from './worker-thread.interface';\r\nimport { Any, Fn } from '../interfaces/table-builder.internal';\r\n\r\n@Injectable()\r\nexport class WebWorkerThreadService implements WebWorkerThread {\r\n    private readonly workerFunctionToUrlMap: WeakMap<Fn, string> = new WeakMap();\r\n    private readonly promiseToWorkerMap: WeakMap<Promise<Any>, Worker> = new WeakMap();\r\n\r\n    private static createWorkerUrl(resolve: Fn): string {\r\n        const resolveString: string = resolve.toString();\r\n\r\n        const webWorkerTemplate: string = `\r\n            self.addEventListener('message', function(e) {\r\n                postMessage((${resolveString})(e.data));\r\n            });\r\n        `;\r\n\r\n        const blob: Blob = new Blob([webWorkerTemplate], { type: 'text/javascript' });\r\n        return URL.createObjectURL(blob);\r\n    }\r\n\r\n    public run<T, K>(workerFunction: (input: K) => T, data?: K): Promise<T> {\r\n        const url: string = this.getOrCreateWorkerUrl(workerFunction);\r\n        return this.runUrl(url, data);\r\n    }\r\n\r\n    public runUrl(url: string, data?: Any): Promise<Any> {\r\n        const worker: Worker = new Worker(url);\r\n        const promise: Promise<Any> = this.createPromiseForWorker(worker, data);\r\n        const promiseCleaner: Any = this.createPromiseCleaner(promise);\r\n\r\n        this.promiseToWorkerMap.set(promise, worker);\r\n\r\n        promise.then(promiseCleaner).catch(promiseCleaner);\r\n\r\n        return promise;\r\n    }\r\n\r\n    public terminate<T>(promise: Promise<T>): Promise<T> {\r\n        return this.removePromise(promise);\r\n    }\r\n\r\n    public getWorker(promise: Promise<Any>): Worker {\r\n        return this.promiseToWorkerMap.get(promise);\r\n    }\r\n\r\n    private createPromiseForWorker<T>(worker: Worker, data: Any): Promise<T> {\r\n        return new Promise<T>((resolve: Executor<Any>, reject: Executor<Any>): void => {\r\n            worker.addEventListener('message', (event: MessageEvent) => resolve(event.data));\r\n            worker.addEventListener('error', reject);\r\n            worker.postMessage(data);\r\n        });\r\n    }\r\n\r\n    private getOrCreateWorkerUrl(fn: Fn): string {\r\n        if (!this.workerFunctionToUrlMap.has(fn)) {\r\n            const url: string = WebWorkerThreadService.createWorkerUrl(fn);\r\n            this.workerFunctionToUrlMap.set(fn, url);\r\n            return url;\r\n        }\r\n        return this.workerFunctionToUrlMap.get(fn);\r\n    }\r\n\r\n    private createPromiseCleaner<T>(promise: Promise<T>): (input: Any) => T {\r\n        return (event: T): T => {\r\n            this.removePromise(promise);\r\n            return event;\r\n        };\r\n    }\r\n\r\n    private removePromise<T>(promise: Promise<T>): Promise<T> {\r\n        const worker: Worker = this.promiseToWorkerMap.get(promise);\r\n\r\n        if (worker) {\r\n            worker.terminate();\r\n        }\r\n\r\n        this.promiseToWorkerMap.delete(promise);\r\n        return promise;\r\n    }\r\n}\r\n","import { FilterableMessage, FilterGlobalOpts, TableFilterType } from './filterable.interface';\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { KeyMap } from '../../interfaces/table-builder.internal';\r\n\r\nexport function filterAllWorker({ source, global, types, columns }: FilterableMessage): TableRow[] {\r\n    enum Terminate {\r\n        CONTINUE = -1,\r\n        BREAK = 0,\r\n        NEXT = 1\r\n    }\r\n\r\n    const { value, type }: FilterGlobalOpts = global;\r\n    let result: TableRow[] = source;\r\n\r\n    if (value) {\r\n        result = source.filter((item: TableRow) => {\r\n            return type === types.DOES_NOT_CONTAIN ? !includes(JSON.stringify(item), value) : globalFilter(item);\r\n        });\r\n    }\r\n\r\n    if (!columns.isEmpty) {\r\n        result = result.filter((item: TableRow) => multipleFilter(item));\r\n    }\r\n\r\n    function globalFilter(item: TableRow): boolean {\r\n        let satisfiesItem: boolean = false;\r\n        const flattenedItem: KeyMap = flatten(item);\r\n\r\n        for (const keyModel of Object.keys(flattenedItem)) {\r\n            const fieldValue: string = String(flattenedItem[keyModel]);\r\n            const [terminate, satisfies]: Satisfies = getSatisfies(fieldValue, value, type);\r\n\r\n            satisfiesItem = satisfies;\r\n\r\n            if (terminate === Terminate.CONTINUE) {\r\n                continue;\r\n            } else if (terminate === Terminate.BREAK) {\r\n                break;\r\n            }\r\n\r\n            if (satisfiesItem) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return satisfiesItem;\r\n    }\r\n\r\n    function multipleFilter(item: TableRow): boolean {\r\n        let matches: boolean = true;\r\n\r\n        for (const fieldKey of Object.keys(columns.values)) {\r\n            const fieldValue: string = String(getValueByPath(item, fieldKey) || '').trim();\r\n            const findKeyValue: string = String(columns.values[fieldKey]);\r\n            const fieldType: TableFilterType = columns.types[fieldKey];\r\n            const [terminate, satisfies]: Satisfies = getSatisfies(fieldValue, findKeyValue, fieldType);\r\n            matches = matches && satisfies;\r\n\r\n            if (!matches || terminate === Terminate.BREAK) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return matches;\r\n    }\r\n\r\n    type Satisfies = [Terminate, boolean];\r\n\r\n    function getSatisfies(field: string, substring: string, fieldType: TableFilterType): Satisfies {\r\n        let satisfies: boolean = false;\r\n        let terminate: Terminate = Terminate.NEXT;\r\n\r\n        if (fieldType === types.START_WITH) {\r\n            satisfies = field.toLocaleLowerCase().startsWith(substring.toLocaleLowerCase());\r\n        } else if (fieldType === types.END_WITH) {\r\n            const regexp: RegExp = new RegExp(`${escaped(substring)}$`);\r\n            satisfies = !!field.match(regexp);\r\n        } else if (fieldType === types.CONTAINS) {\r\n            satisfies = includes(field, substring);\r\n        } else if (fieldType === types.EQUALS) {\r\n            satisfies = field === substring;\r\n        } else if (fieldType === types.DOES_NOT_EQUAL) {\r\n            if (field !== substring) {\r\n                satisfies = true;\r\n                terminate = Terminate.CONTINUE;\r\n            } else {\r\n                satisfies = false;\r\n                terminate = Terminate.BREAK;\r\n            }\r\n        }\r\n\r\n        return [terminate, satisfies];\r\n    }\r\n\r\n    function includes(origin: string, substring: string): boolean {\r\n        return origin.toLocaleLowerCase().includes(substring.toLocaleLowerCase());\r\n    }\r\n\r\n    function escaped(escapedValue: string): string {\r\n        return escapedValue.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n    }\r\n\r\n    function flatten<T = string>(object: KeyMap, excludeKeys: string[] = []): KeyMap<T> {\r\n        const depthGraph: KeyMap<T> = {};\r\n\r\n        for (const key in object) {\r\n            if (object.hasOwnProperty(key) && !excludeKeys.includes(key)) {\r\n                mutate<T>(object, depthGraph, key);\r\n            }\r\n        }\r\n\r\n        return depthGraph;\r\n    }\r\n\r\n    function getValueByPath(object: KeyMap, path: string): KeyMap | undefined {\r\n        return path ? path.split('.').reduce((str: string, key: string) => str && str[key], object) : object;\r\n    }\r\n\r\n    function mutate<T>(object: KeyMap, depthGraph: KeyMap<T>, key: string): void {\r\n        const isObject: boolean = typeof object[key] === 'object' && object[key] !== null;\r\n        if (isObject) {\r\n            const flatObject: KeyMap = flatten(object[key]);\r\n            for (const path in flatObject) {\r\n                if (flatObject.hasOwnProperty(path)) {\r\n                    depthGraph[`${key}.${path}`] = flatObject[path];\r\n                }\r\n            }\r\n        } else {\r\n            depthGraph[key] = object[key];\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { ApplicationRef, Injectable, NgZone } from '@angular/core';\r\nimport { ReplaySubject, Subject } from 'rxjs';\r\n\r\nimport { WebWorkerThreadService } from '../../worker/worker-thread.service';\r\nimport { UtilsService } from '../utils/utils.service';\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\r\nimport {\r\n    FilterableMessage,\r\n    FilterEvent,\r\n    FilterStateEvent,\r\n    TableFilterType,\r\n    FilterWorkerEvent\r\n} from './filterable.interface';\r\nimport { filterAllWorker } from './filter.worker';\r\nimport { KeyMap, Resolver } from '../../interfaces/table-builder.internal';\r\n\r\nconst { TIME_IDLE }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\r\n\r\n@Injectable()\r\nexport class FilterableService {\r\n    public filterValue: string = null;\r\n    public definition: KeyMap<string> = {};\r\n    public state: FilterStateEvent = new FilterStateEvent();\r\n    public types: typeof TableFilterType = TableFilterType;\r\n    public readonly filterOpenEvents: Subject<void> = new Subject();\r\n    public readonly events: Subject<FilterEvent> = new ReplaySubject();\r\n    public filterType: TableFilterType;\r\n    public filterTypeDefinition: KeyMap<TableFilterType> = {};\r\n    public filtering: boolean = false;\r\n    private previousFiltering: boolean = false;\r\n\r\n    constructor(\r\n        private readonly thread: WebWorkerThreadService,\r\n        private readonly utils: UtilsService,\r\n        private readonly ngZone: NgZone,\r\n        private readonly app: ApplicationRef\r\n    ) {}\r\n\r\n    public get globalFilterValue(): string {\r\n        return this.filterValue ? String(this.filterValue).trim() : null;\r\n    }\r\n\r\n    public changeFilteringStatus(): void {\r\n        this.filtering = this.filterValueExist;\r\n\r\n        if (this.filtering !== this.previousFiltering) {\r\n            this.events.next({ value: null, type: null });\r\n        }\r\n\r\n        this.previousFiltering = this.filtering;\r\n    }\r\n\r\n    public get filterValueExist(): boolean {\r\n        const keyFilterValues: string = Object.values(this.definition).reduce(\r\n            (acc: string, next: string) => acc + next,\r\n            ''\r\n        );\r\n        return (this.globalFilterValue && this.globalFilterValue.length > 0) || keyFilterValues.length > 0;\r\n    }\r\n\r\n    public openFilter(key: string, event: MouseEvent): void {\r\n        this.state = { opened: true, key, position: { left: event.clientX, top: event.clientY } };\r\n        this.filterOpenEvents.next();\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    public closeFilter(): void {\r\n        this.state = new FilterStateEvent();\r\n        this.filterOpenEvents.next();\r\n    }\r\n\r\n    public filter(source: TableRow[]): Promise<FilterWorkerEvent> {\r\n        const type: TableFilterType = this.filterType;\r\n        const value: string = this.globalFilterValue ? String(this.globalFilterValue).trim() : null;\r\n\r\n        return new Promise((resolve: Resolver<FilterWorkerEvent>): void => {\r\n            const message: FilterableMessage = {\r\n                source,\r\n                types: TableFilterType,\r\n                global: { value, type },\r\n                columns: {\r\n                    values: this.definition,\r\n                    types: this.filterTypeDefinition,\r\n                    isEmpty: this.checkIsEmpty(this.definition)\r\n                }\r\n            };\r\n\r\n            this.thread.run<TableRow[], FilterableMessage>(filterAllWorker, message).then((sorted: TableRow[]) => {\r\n                this.ngZone.runOutsideAngular(() =>\r\n                    window.setTimeout(() => {\r\n                        resolve({\r\n                            source: sorted,\r\n                            fireSelection: (): void => {\r\n                                window.setTimeout(() => {\r\n                                    this.events.next({ value, type });\r\n                                    this.app.tick();\r\n                                }, TIME_IDLE);\r\n                            }\r\n                        });\r\n                    }, TIME_IDLE)\r\n                );\r\n            });\r\n        });\r\n    }\r\n\r\n    private checkIsEmpty(definition: KeyMap<string>): boolean {\r\n        return Object.keys(this.utils.clean(definition)).length === 0;\r\n    }\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\n@Directive({ selector: 'ng-template[ngx-filter]' })\r\nexport class NgxFilterDirective {\r\n    @Input('ngx-filter') public type: string = null;\r\n    constructor(public template: TemplateRef<unknown>) {}\r\n}\r\n","import {\n    ApplicationRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ElementRef,\n    Input,\n    NgZone,\n    OnInit,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FilterableService } from '../../services/filterable/filterable.service';\nimport { FilterStateEvent } from '../../services/filterable/filterable.interface';\nimport { ModalViewLayer } from '../common/modal-view-layer';\nimport { UtilsService } from '../../services/utils/utils.service';\nimport { NgxFilterDirective } from '../../directives/ngx-filter.directive';\n\n@Component({\n    selector: 'ngx-filter',\n    templateUrl: './ngx-filter.component.html',\n    styleUrls: ['./ngx-filter.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxFilterComponent extends ModalViewLayer<FilterStateEvent> implements OnInit {\n    @Input() public width: number = 300;\n    @Input() public height: number = null;\n    @Input('max-height') public maxHeight: number = null;\n    public closeTime: number = 150;\n    public readonly leftX: number = 10;\n    public readonly topY: number = 50;\n\n    @ContentChild(NgxFilterDirective, { static: false })\n    public filter: NgxFilterDirective;\n\n    @ViewChild('targetElement', { static: false })\n    protected targetElement: ElementRef<HTMLDivElement>;\n\n    constructor(\n        private readonly filterable: FilterableService,\n        protected readonly cd: ChangeDetectorRef,\n        protected readonly app: ApplicationRef,\n        protected readonly utils: UtilsService,\n        protected readonly ngZone: NgZone\n    ) {\n        super(cd, app, utils, ngZone);\n    }\n\n    public get state(): Partial<FilterStateEvent> {\n        return this.filterable.state;\n    }\n\n    public close(event: MouseEvent): void {\n        this.filterable.closeFilter();\n        event.preventDefault();\n    }\n\n    public ngOnInit(): void {\n        this.subscription = this.filterable.filterOpenEvents.subscribe(() => this.update());\n    }\n}\n","export function isFirefox(userAgent: string = null): boolean {\r\n    return (userAgent || navigator.userAgent).toLowerCase().indexOf('firefox') > -1;\r\n}\r\n","import { CdkDragSortEvent } from '@angular/cdk/drag-drop';\r\nimport {\r\n    AfterContentInit,\r\n    AfterViewChecked,\r\n    AfterViewInit,\r\n    ApplicationRef,\r\n    ChangeDetectorRef,\r\n    ContentChild,\r\n    ContentChildren,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewRef\r\n} from '@angular/core';\r\n\r\nimport { NgxTableViewChangesService } from '../table/services/table-view-changes/ngx-table-view-changes.service';\r\nimport { Fn, KeyMap, PrimaryKey, QueryListRef, ResizeEvent } from './interfaces/table-builder.internal';\r\nimport { ColumnsSchema, SimpleSchemaColumns, TableRow } from './interfaces/table-builder.external';\r\nimport { NgxContextMenuComponent } from './components/ngx-context-menu/ngx-context-menu.component';\r\nimport { TemplateParserService } from './services/template-parser/template-parser.service';\r\nimport { NgxOptionsComponent } from './components/ngx-options/ngx-options.component';\r\nimport { NgxColumnComponent } from './components/ngx-column/ngx-column.component';\r\nimport { ContextMenuService } from './services/context-menu/context-menu.service';\r\nimport { NgxHeaderComponent } from './components/ngx-header/ngx-header.component';\r\nimport { NgxFooterComponent } from './components/ngx-footer/ngx-footer.component';\r\nimport { NgxFilterComponent } from './components/ngx-filter/ngx-filter.component';\r\nimport { FilterWorkerEvent } from './services/filterable/filterable.interface';\r\nimport { DraggableService } from './services/draggable/draggable.service';\r\nimport { FilterableService } from './services/filterable/filterable.service';\r\nimport { SelectionService } from './services/selection/selection.service';\r\nimport { TableBuilderOptionsImpl } from './config/table-builder-options';\r\nimport { ResizableService } from './services/resizer/resizable.service';\r\nimport { SortableService } from './services/sortable/sortable.service';\r\nimport { UtilsService } from './services/utils/utils.service';\r\nimport { SelectionMap } from './services/selection/selection';\r\nimport { isFirefox } from './operators/is-firefox';\r\n\r\nconst { ROW_HEIGHT, MACRO_TIME, TIME_IDLE }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\r\n\r\nexport abstract class TableBuilderApiImpl\r\n    implements OnChanges, OnInit, AfterViewInit, AfterContentInit, AfterViewChecked, OnDestroy {\r\n    @Input() public height: number;\r\n    @Input() public width: string;\r\n    @Input() public source: TableRow[] = null;\r\n    @Input() public keys: string[] = [];\r\n    @Input() public striped: boolean = true;\r\n    @Input() public lazy: boolean = true;\r\n    @Input() public name: string = null;\r\n    @Input('sort-types') public sortTypes: KeyMap = null;\r\n    @Input('exclude-keys') public excludeKeys: Array<string | RegExp> = [];\r\n    @Input('auto-width') public autoWidth: boolean = false;\r\n    @Input('auto-height') public autoHeightDetect: boolean = true;\r\n    @Input('native-scrollbar') public nativeScrollbar: boolean = false;\r\n    @Input('primary-key') public primaryKey: string = PrimaryKey.ID;\r\n    @Input('column-width') public columnWidth: string | number = null;\r\n    @Input('row-height') public rowHeight: string | number = null;\r\n    @Input('async-columns') public asyncColumns: boolean = true;\r\n    @Input('vertical-border') public verticalBorder: boolean = true;\r\n    @Input('enable-selection') public enableSelection: boolean = false;\r\n    @Input('enable-filtering') public enableFiltering: boolean = false;\r\n    @Input('buffer-amount') public bufferAmount: number = null;\r\n    @Input('schema-columns') public schemaColumns: SimpleSchemaColumns = [];\r\n    @Output() public afterRendered: EventEmitter<boolean> = new EventEmitter();\r\n    @Output() public schemaChanges: EventEmitter<SimpleSchemaColumns> = new EventEmitter();\r\n\r\n    @ContentChild(NgxOptionsComponent, { static: false })\r\n    public columnOptions: NgxOptionsComponent = null;\r\n\r\n    @ContentChildren(NgxColumnComponent)\r\n    public columnTemplates: QueryListRef<NgxColumnComponent> = null;\r\n\r\n    @ContentChild(NgxContextMenuComponent, { static: false })\r\n    public contextMenuTemplate: NgxContextMenuComponent = null;\r\n\r\n    @ContentChild(NgxHeaderComponent, { static: false })\r\n    public headerTemplate: NgxHeaderComponent = null;\r\n\r\n    @ContentChild(NgxFooterComponent, { static: false })\r\n    public footerTemplate: NgxFooterComponent = null;\r\n\r\n    @ContentChild(NgxFilterComponent, { static: false })\r\n    public filterTemplate: NgxFilterComponent = null;\r\n\r\n    public inViewport: boolean;\r\n    public tableViewportChecked: boolean = true;\r\n    public isFrozenView: boolean = false;\r\n    public isFirefoxMode: boolean = isFirefox();\r\n\r\n    /**\r\n     * @description: the custom names of the column list to be displayed in the view.\r\n     * @example:\r\n     *    <table-builder #table\r\n     *        [source]=\"[{ id: 1, name: 'hello', value: 'world', description: 'text' }, ...]\"\r\n     *        [exclude]=\"[ 'description' ]\">\r\n     *      <ngx-column *ngFor=\"let key of table.modelColumnKeys\"></ngx-column>\r\n     *    </table-builder>\r\n     *    ------------------------\r\n     *    modelColumnKeys === [ 'id', 'hello', 'value' ]\r\n     */\r\n    public modelColumnKeys: string[] = [];\r\n\r\n    /**\r\n     * @description: the custom names of the column list to be displayed in the view.\r\n     * @example:\r\n     *    <table-builder [keys]=[ 'id', 'description', 'name', 'description' ] />\r\n     *    customModelColumnsKeys === [ 'id', 'description', 'name', 'description' ]\r\n     *    ------------------------\r\n     *    <table-builder [keys]=[ 'id', 'description', 'name', 'description' ] [exclude]=[ 'id', 'description' ] />\r\n     *    customModelColumnsKeys === [ 'name' ]\r\n     */\r\n    public customModelColumnsKeys: string[] = [];\r\n\r\n    public isDragging: KeyMap<boolean> = {};\r\n    public abstract readonly templateParser: TemplateParserService;\r\n    public abstract readonly selection: SelectionService;\r\n    public abstract readonly utils: UtilsService;\r\n    public abstract readonly cd: ChangeDetectorRef;\r\n    public abstract readonly resize: ResizableService;\r\n    public abstract readonly sortable: SortableService;\r\n    public abstract readonly contextMenu: ContextMenuService;\r\n    public abstract readonly filterable: FilterableService;\r\n    public abstract readonly ngZone: NgZone;\r\n    public accessDragging: boolean = false;\r\n    protected abstract readonly app: ApplicationRef;\r\n    protected abstract readonly viewChanges: NgxTableViewChangesService;\r\n    protected abstract readonly draggable: DraggableService;\r\n    protected originalSource: TableRow[];\r\n    protected renderedCountKeys: number;\r\n    private filterIdTask: number = null;\r\n\r\n    /**\r\n     * @description - <table-builder [keys]=[ 'id', 'value', 'id', 'position', 'value' ] />\r\n     * returned unique displayed columns [ 'id', 'value', 'position' ]\r\n     */\r\n    public get displayedColumns(): string[] {\r\n        return Object.keys(this.templateParser.compiledTemplates) || [];\r\n    }\r\n\r\n    public get visibleColumns(): string[] {\r\n        return this.columnSchema\r\n            .filter((column: ColumnsSchema) => column.isVisible)\r\n            .map((column: ColumnsSchema) => column.key);\r\n    }\r\n\r\n    /**\r\n     * @description - <table-builder [keys]=[ 'id', 'value', 'id', 'position', 'value' ] />\r\n     * returned ordered displayed columns [ 'id', 'value', 'id', 'position', 'value' ]\r\n     */\r\n    public get positionColumns(): string[] {\r\n        return this.columnSchema.map((column: ColumnsSchema) => column.key);\r\n    }\r\n\r\n    public get columnSchema(): ColumnsSchema[] {\r\n        return (this.templateParser.schema && this.templateParser.schema.columns) || [];\r\n    }\r\n\r\n    public get selectedItems(): TableRow[] {\r\n        return this.source.filter((item: TableRow[]) => this.selectionModel.entries[item[this.primaryKey]]);\r\n    }\r\n\r\n    public get firstItem(): TableRow {\r\n        return (this.source && this.source[0]) || {};\r\n    }\r\n\r\n    public get lastItem(): TableRow {\r\n        return (this.source && this.source[this.source.length - 1]) || {};\r\n    }\r\n\r\n    public get selectionModel(): SelectionMap {\r\n        return this.selection.selectionModel;\r\n    }\r\n\r\n    public get clientRowHeight(): number {\r\n        return parseInt(this.rowHeight as string) || ROW_HEIGHT;\r\n    }\r\n\r\n    public get clientColWidth(): number {\r\n        return this.autoWidth ? null : parseInt(this.columnWidth as string) || null;\r\n    }\r\n\r\n    public get columnVirtualHeight(): number {\r\n        return this.source.length * this.clientRowHeight;\r\n    }\r\n\r\n    public get columnHeight(): number {\r\n        return this.size * this.clientRowHeight + this.clientRowHeight;\r\n    }\r\n\r\n    public get size(): number {\r\n        return (this.source && this.source.length) || 0;\r\n    }\r\n\r\n    public abstract markDirtyCheck(): void;\r\n\r\n    public abstract markForCheck(): void;\r\n\r\n    public abstract markTemplateContentCheck(): void;\r\n\r\n    public abstract ngOnChanges(changes: SimpleChanges): void;\r\n\r\n    public abstract ngOnInit(): void;\r\n\r\n    public abstract ngAfterContentInit(): void;\r\n\r\n    public abstract ngAfterViewInit(): void;\r\n\r\n    public abstract ngAfterViewChecked(): void;\r\n\r\n    public abstract ngOnDestroy(): void;\r\n\r\n    public recheckViewportChecked(): void {\r\n        this.tableViewportChecked = !this.tableViewportChecked;\r\n        this.idleDetectChanges();\r\n    }\r\n\r\n    public enableDragging(key: string): void {\r\n        if (this.templateParser.compiledTemplates[key].draggable) {\r\n            this.accessDragging = true;\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    public disableDragging(): void {\r\n        if (this.accessDragging) {\r\n            this.accessDragging = false;\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    public resizeColumn({ event, key }: ResizeEvent, column: HTMLDivElement): void {\r\n        this.recheckViewportChecked();\r\n        this.disableDragging();\r\n\r\n        this.resize.resize(\r\n            event as MouseEvent,\r\n            column,\r\n            (width: number) => this.calculateWidth(key, width),\r\n            () => this.afterCalculateWidth()\r\n        );\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    public filter(): void {\r\n        if (!this.enableFiltering) {\r\n            throw new Error('You forgot to enable filtering: \\n <ngx-table-builder [enable-filtering]=\"true\" />');\r\n        }\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.clearInterval(this.filterIdTask);\r\n            this.filterIdTask = window.setTimeout(() => {\r\n                this.filterable.changeFilteringStatus();\r\n                this.sortAndFilter().then(() => this.reCheckDefinitions());\r\n            }, MACRO_TIME);\r\n        });\r\n    }\r\n\r\n    public async sortAndFilter(): Promise<void> {\r\n        this.toggleFreeze();\r\n\r\n        if (this.filterable.filterValueExist && this.enableFiltering) {\r\n            const filter: FilterWorkerEvent = await this.filterable.filter(this.originalSource);\r\n            this.source = await this.sortable.sort(filter.source);\r\n            filter.fireSelection();\r\n        } else if (!this.sortable.empty && this.source) {\r\n            this.source = await this.sortable.sort(this.originalSource);\r\n        }\r\n\r\n        if (this.sortable.empty && !this.filterable.filterValueExist) {\r\n            this.source = this.originalSource;\r\n        }\r\n\r\n        this.toggleFreeze(TIME_IDLE);\r\n    }\r\n\r\n    public sortByKey(key: string): void {\r\n        this.sortable.updateSortKey(key);\r\n        this.sortAndFilter().then(() => this.reCheckDefinitions());\r\n    }\r\n\r\n    public drop({ previousIndex, currentIndex }: CdkDragSortEvent): void {\r\n        const previousKey: string = this.visibleColumns[previousIndex];\r\n        const currentKey: string = this.visibleColumns[currentIndex];\r\n        this.draggable.drop(previousKey, currentKey);\r\n        this.changeSchema();\r\n    }\r\n\r\n    public checkVisible(visible: boolean): void {\r\n        this.inViewport = visible;\r\n        this.detectChanges();\r\n    }\r\n\r\n    public detectChanges(): void {\r\n        if (!(this.cd as ViewRef).destroyed) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    public toggleFreeze(time: number = null, callback: Fn = null): void {\r\n        this.isFrozenView = !this.isFrozenView;\r\n        if (time) {\r\n            window.setTimeout(() => {\r\n                this.detectChanges();\r\n                callback && callback();\r\n            }, time);\r\n        } else {\r\n            this.detectChanges();\r\n        }\r\n    }\r\n\r\n    public changeSchema(defaultColumns: SimpleSchemaColumns = null): void {\r\n        const renderedColumns: SimpleSchemaColumns = this.templateParser.schema.exportColumns();\r\n        const columns: SimpleSchemaColumns = defaultColumns || renderedColumns;\r\n        this.viewChanges.update({ name: this.name, columns });\r\n        this.schemaChanges.emit(columns);\r\n        this.idleDetectChanges();\r\n    }\r\n\r\n    protected reCheckDefinitions(): void {\r\n        this.filterable.definition = { ...this.filterable.definition };\r\n        this.filterable.changeFilteringStatus();\r\n        this.detectChanges();\r\n    }\r\n\r\n    /**\r\n     * @description: returns the number of keys in the model\r\n     * @example: <table-builder [source]=[{ id: 1, name: 'hello' }, ...] /> a value of 2 will be returned\r\n     */\r\n    protected getCountKeys(): number {\r\n        return Object.keys(this.firstItem).length;\r\n    }\r\n\r\n    /**\r\n     * @see TableBuilderApiImpl#customModelColumnsKeys for further information\r\n     */\r\n    protected generateCustomModelColumnsKeys(): string[] {\r\n        return this.excluding(this.keys);\r\n    }\r\n\r\n    /**\r\n     * @see TableBuilderApiImpl#modelColumnKeys for further information\r\n     */\r\n    protected generateModelColumnKeys(): string[] {\r\n        return this.excluding(this.getModelKeys());\r\n    }\r\n\r\n    protected getModelKeys(): string[] {\r\n        return this.utils.flattenKeysByRow(this.firstItem);\r\n    }\r\n\r\n    protected idleDetectChanges(): void {\r\n        this.ngZone.runOutsideAngular(() => window.requestAnimationFrame(() => this.detectChanges()));\r\n    }\r\n\r\n    private calculateWidth(key: string, width: number): void {\r\n        this.isDragging[key] = true;\r\n        this.onMouseResizeColumn(key, width);\r\n    }\r\n\r\n    private afterCalculateWidth(): void {\r\n        this.isDragging = {};\r\n        this.recheckViewportChecked();\r\n        this.changeSchema();\r\n    }\r\n\r\n    private onMouseResizeColumn(key: string, width: number): void {\r\n        this.templateParser.mutateColumnSchema(key, { width });\r\n        this.idleDetectChanges();\r\n    }\r\n\r\n    private excluding(keys: string[]): string[] {\r\n        return this.excludeKeys.length\r\n            ? keys.filter((key: string) => {\r\n                  return !this.excludeKeys.some((excludeKey: string | RegExp) => {\r\n                      return excludeKey instanceof RegExp ? !!key.match(excludeKey) : key === excludeKey;\r\n                  });\r\n              })\r\n            : keys;\r\n    }\r\n}\r\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\r\n\r\nconst DEFAULT_TIME_ANIMATION: number = 150;\r\n\r\nexport const NGX_ANIMATION: AnimationTriggerMetadata = trigger('fadeAnimation', [\r\n    // the \"in\" style determines the \"resting\" state of the element when it is visible.\r\n    state('in', style({ opacity: 1 })),\r\n\r\n    // fade in when created. this could also be written as transition('void => *')\r\n    transition(':enter', [style({ opacity: 0 }), animate(DEFAULT_TIME_ANIMATION)]),\r\n\r\n    // fade out when destroyed. this could also be written as transition('void => *')\r\n    transition(':leave', animate(DEFAULT_TIME_ANIMATION, style({ opacity: 0 })))\r\n]);\r\n","import { ColumnsSchema } from '../../interfaces/table-builder.external';\r\nimport { DeepPartial } from '../../interfaces/table-builder.internal';\r\n\r\nexport class SchemaBuilder {\r\n    constructor(public columns: ColumnsSchema[] = []) {}\r\n\r\n    public exportColumns(): Array<DeepPartial<ColumnsSchema>> {\r\n        return this.columns.map((column: ColumnsSchema) => ({\r\n            key: column.key,\r\n            width: column.width,\r\n            isVisible: column.isVisible,\r\n            isModel: column.isModel\r\n        }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ColumnsSchema, ImplicitContext, TableCellOptions } from '../../interfaces/table-builder.external';\r\nimport { TemplateHeadThDirective } from '../../directives/rows/template-head-th.directive';\r\nimport { TemplateBodyTdDirective } from '../../directives/rows/template-body-td.directive';\r\nimport { NgxColumnComponent } from '../../components/ngx-column/ngx-column.component';\r\nimport { KeyMap, QueryListRef } from '../../interfaces/table-builder.internal';\r\nimport { TemplateCellCommon } from '../../directives/rows/template-cell.common';\r\nimport { ColumnOptions } from '../../components/common/column-options';\r\nimport { SchemaBuilder } from './schema-builder.class';\r\n\r\n@Injectable()\r\nexport class TemplateParserService {\r\n    public schema: SchemaBuilder;\r\n    public templateKeys: Set<string>;\r\n    public fullTemplateKeys: Set<string>;\r\n    public overrideTemplateKeys: Set<string>;\r\n    public columnOptions: ColumnOptions;\r\n    public compiledTemplates: KeyMap<ColumnsSchema> = {};\r\n\r\n    /**\r\n     * @description: the custom names of the column list to be displayed in the view.\r\n     * @example:\r\n     *    <table-builder #table\r\n     *        [source]=\"[{ id: 1, name: 'hello', value: 'world', description: 'text' }, ...]\"\r\n     *        [exclude]=\"[ 'description' ]\">\r\n     *    </table-builder>\r\n     *    ------------------------\r\n     *    allowedKeyMap === { 'id': true, 'hello': true, 'value': true }\r\n     */\r\n    public allowedKeyMap: KeyMap<boolean> = {};\r\n\r\n    /**\r\n     * @description: the custom names of the column list to be displayed in the view.\r\n     * @example:\r\n     *    <table-builder #table\r\n     *        [source]=\"[{ id: 1, name: 'hello', value: 'world', description: 'text' }, ...]\"\r\n     *        [exclude]=\"[ 'description' ]\">\r\n     *    </table-builder>\r\n     *    ------------------------\r\n     *    allowedKeyMap === { 'id': true, 'hello': true, 'value': true, 'description': false }\r\n     */\r\n    public keyMap: KeyMap<boolean> = {};\r\n\r\n    private static templateContext(key: string, cell: TemplateCellCommon, options: ColumnOptions): TableCellOptions {\r\n        return {\r\n            textBold: cell.bold,\r\n            template: cell.template,\r\n            class: cell.cssClasses,\r\n            style: cell.cssStyles,\r\n            width: cell.width,\r\n            height: cell.height,\r\n            onClick: cell.onClick,\r\n            dblClick: cell.dblClick,\r\n            useDeepPath: key.includes('.'),\r\n            context: cell.row ? ImplicitContext.ROW : ImplicitContext.CELL,\r\n            nowrap: TemplateParserService.getValidPredicate(options.nowrap, cell.nowrap)\r\n        };\r\n    }\r\n\r\n    private static getValidHtmlBooleanAttribute(attribute: boolean): boolean {\r\n        return typeof attribute === 'string' ? true : attribute;\r\n    }\r\n\r\n    private static getValidPredicate<T>(leftPredicate: T, rightPredicate: T): T {\r\n        return leftPredicate === null ? rightPredicate : leftPredicate;\r\n    }\r\n\r\n    public toggleColumnVisibility(key: string): void {\r\n        this.schema.columns = this.schema.columns.map((column: ColumnsSchema) =>\r\n            key === column.key\r\n                ? {\r\n                      ...column,\r\n                      isVisible: !column.isVisible\r\n                  }\r\n                : column\r\n        );\r\n    }\r\n\r\n    public initialSchema(columnOptions: ColumnOptions): void {\r\n        this.schema = this.schema || new SchemaBuilder();\r\n        this.schema.columns = [];\r\n        this.compiledTemplates = {};\r\n        this.templateKeys = new Set<string>();\r\n        this.overrideTemplateKeys = new Set<string>();\r\n        this.fullTemplateKeys = new Set<string>();\r\n        this.columnOptions = columnOptions || new ColumnOptions();\r\n    }\r\n\r\n    public parse(templates: QueryListRef<NgxColumnComponent>): void {\r\n        if (!templates) {\r\n            return;\r\n        }\r\n\r\n        templates.forEach((column: NgxColumnComponent) => {\r\n            const { key, customKey, importantTemplate }: NgxColumnComponent = column;\r\n            const needTemplateCheck: boolean = this.allowedKeyMap[key] || customKey !== false;\r\n\r\n            if (needTemplateCheck) {\r\n                if (importantTemplate !== false) {\r\n                    this.templateKeys.delete(key);\r\n                    this.compileColumnMetadata(column);\r\n                    this.overrideTemplateKeys.add(key);\r\n                } else if (!this.templateKeys.has(key) && !this.overrideTemplateKeys.has(key)) {\r\n                    this.compileColumnMetadata(column);\r\n                    this.templateKeys.add(key);\r\n                }\r\n\r\n                this.fullTemplateKeys.add(key);\r\n            }\r\n        });\r\n    }\r\n\r\n    public mutateColumnSchema(key: string, partialSchema: Partial<ColumnsSchema>): void {\r\n        for (const option of Object.keys(partialSchema)) {\r\n            this.compiledTemplates[key][option] = partialSchema[option];\r\n        }\r\n    }\r\n\r\n    public compileColumnMetadata(column: NgxColumnComponent): void {\r\n        const { key, th, td, emptyHead, headTitle }: NgxColumnComponent = column;\r\n        const thTemplate: TemplateCellCommon = th || new TemplateHeadThDirective(null);\r\n        const tdTemplate: TemplateCellCommon = td || new TemplateBodyTdDirective(null);\r\n        const isEmptyHead: boolean = TemplateParserService.getValidHtmlBooleanAttribute(emptyHead);\r\n        const thOptions: TableCellOptions = TemplateParserService.templateContext(key, thTemplate, this.columnOptions);\r\n        const stickyLeft: boolean = TemplateParserService.getValidHtmlBooleanAttribute(column.stickyLeft);\r\n        const stickyRight: boolean = TemplateParserService.getValidHtmlBooleanAttribute(column.stickyRight);\r\n        const canBeAddDraggable: boolean = !(stickyLeft || stickyRight);\r\n        const isModel: boolean = this.keyMap[key];\r\n\r\n        this.compiledTemplates[key] = {\r\n            key,\r\n            isModel,\r\n            isVisible: true,\r\n            th: {\r\n                ...thOptions,\r\n                headTitle,\r\n                emptyHead: isEmptyHead,\r\n                template: isEmptyHead ? null : thOptions.template\r\n            },\r\n            td: TemplateParserService.templateContext(key, tdTemplate, this.columnOptions),\r\n            stickyLeft: TemplateParserService.getValidHtmlBooleanAttribute(column.stickyLeft),\r\n            stickyRight: TemplateParserService.getValidHtmlBooleanAttribute(column.stickyRight),\r\n            customColumn: TemplateParserService.getValidHtmlBooleanAttribute(column.customKey),\r\n            width: TemplateParserService.getValidPredicate(column.width, this.columnOptions.width),\r\n            cssClass: TemplateParserService.getValidPredicate(column.cssClass, this.columnOptions.cssClass) || [],\r\n            cssStyle: TemplateParserService.getValidPredicate(column.cssStyle, this.columnOptions.cssStyle) || [],\r\n            resizable: TemplateParserService.getValidPredicate(column.resizable, this.columnOptions.resizable),\r\n            verticalLine: column.verticalLine,\r\n            excluded: !this.allowedKeyMap[key],\r\n            filterable: TemplateParserService.getValidPredicate(column.filterable, this.columnOptions.filterable),\r\n            sortable: isModel\r\n                ? TemplateParserService.getValidPredicate(column.sortable, this.columnOptions.sortable)\r\n                : false,\r\n            draggable: canBeAddDraggable\r\n                ? TemplateParserService.getValidPredicate(column.draggable, this.columnOptions.draggable)\r\n                : false\r\n        };\r\n    }\r\n}\r\n","import { TableRow } from '../../interfaces/table-builder.external';\r\nimport { KeyMap } from '../../interfaces/table-builder.internal';\r\n\r\nexport enum SortOrderType {\r\n    ASC = 'asc',\r\n    DESC = 'desc'\r\n}\r\n\r\nexport interface SortableMessage {\r\n    definition: KeyMap<SortOrderType>;\r\n    source: TableRow[];\r\n}\r\n","import { TableRow } from '../../interfaces/table-builder.external';\r\nimport { SortableMessage } from './sortable.interfaces';\r\nimport { Any, KeyMap } from '../../interfaces/table-builder.internal';\r\n\r\nexport function sortWorker(message: SortableMessage): TableRow[] {\r\n    enum OrderType {\r\n        DESC = 'desc',\r\n        SKIP = 'skip'\r\n    }\r\n\r\n    function getValueByPath(object: KeyMap, path: string): KeyMap | undefined {\r\n        return path ? path.split('.').reduce((value: string, key: string) => value && value[key], object) : object;\r\n    }\r\n\r\n    function checkValueIsEmpty(value: Any): boolean {\r\n        const val: string = typeof value === 'string' ? value.trim() : value;\r\n        return [undefined, null, NaN, '', 'null', Infinity].includes(val);\r\n    }\r\n\r\n    class Sortable {\r\n        public static sortByKeys(data: TableRow[], keys: KeyMap<OrderType>): Any[] {\r\n            const countKeys: number = Object.keys(keys).length;\r\n\r\n            if (!countKeys) {\r\n                return data.sort(Sortable.shallowSort);\r\n            }\r\n\r\n            const matches: KeyMap<number> = Sortable.getMatchesKeys(keys);\r\n            return data.sort((a: unknown, b: unknown) => Sortable.multiSort(a, b, matches));\r\n        }\r\n\r\n        private static multiSort(a: unknown, b: unknown, matches: KeyMap<number>): Any {\r\n            const countKeys: number = Object.keys(matches).length;\r\n            let sorted: number = 0;\r\n            let ix: number = 0;\r\n\r\n            while (sorted === 0 && ix < countKeys) {\r\n                const key: string = Sortable.observeKey(matches, ix);\r\n                if (key) {\r\n                    const depth: number = matches[key];\r\n                    sorted = Sortable.deepSort(key, a, b, depth);\r\n                    ix++;\r\n                }\r\n            }\r\n\r\n            return sorted;\r\n        }\r\n\r\n        private static getMatchesKeys(keys: KeyMap<OrderType | number>): KeyMap<number> {\r\n            const matches: KeyMap<number> = {};\r\n\r\n            for (const key in keys) {\r\n                if (keys.hasOwnProperty(key)) {\r\n                    matches[key] =\r\n                        keys[key] === OrderType.DESC || keys[key] === -1\r\n                            ? -1\r\n                            : keys[key] === OrderType.SKIP || keys[key] === 0\r\n                            ? 0\r\n                            : 1;\r\n                }\r\n            }\r\n\r\n            return matches;\r\n        }\r\n\r\n        private static deepSort(key: string, leftHand: Any, rightHand: Any, depth: number): number {\r\n            const a: Any = getValueByPath(leftHand, key);\r\n            const b: Any = getValueByPath(rightHand, key);\r\n            return this.shallowSort(a, b, depth);\r\n        }\r\n\r\n        private static shallowSort(a: Any, b: Any, depth?: number): number {\r\n            const currentDepth: number = depth !== null ? depth : 1;\r\n            b = checkValueIsEmpty(b) ? '' : b;\r\n\r\n            if (a === b) {\r\n                return 0;\r\n            }\r\n\r\n            return a > b ? currentDepth : -1 * currentDepth;\r\n        }\r\n\r\n        private static observeKey(keys: KeyMap<number>, count: number): string {\r\n            let key: string;\r\n            let size: number = 0;\r\n\r\n            for (key in keys) {\r\n                if (keys.hasOwnProperty(key)) {\r\n                    if (size === count) {\r\n                        return key;\r\n                    }\r\n\r\n                    size++;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return Sortable.sortByKeys(message.source, message.definition as Any);\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { KeyMap, Resolver } from '../../interfaces/table-builder.internal';\r\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\r\nimport { WebWorkerThreadService } from '../../worker/worker-thread.service';\r\nimport { SortableMessage, SortOrderType } from './sortable.interfaces';\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { UtilsService } from '../utils/utils.service';\r\nimport { sortWorker } from './sort.worker';\r\n\r\n@Injectable()\r\nexport class SortableService {\r\n    public definition: KeyMap<SortOrderType> = {};\r\n\r\n    constructor(\r\n        private readonly thread: WebWorkerThreadService,\r\n        private readonly utils: UtilsService,\r\n        private readonly zone: NgZone\r\n    ) {}\r\n\r\n    public get empty(): boolean {\r\n        return Object.keys(this.definition).length === 0;\r\n    }\r\n\r\n    public sort(data: TableRow[]): Promise<TableRow[]> {\r\n        return new Promise((resolve: Resolver<TableRow[]>): void => {\r\n            this.thread\r\n                .run<TableRow[], SortableMessage>(sortWorker, { definition: this.definition, source: data })\r\n                .then((sorted: TableRow[]) => {\r\n                    this.zone.runOutsideAngular(() =>\r\n                        window.setTimeout(() => resolve(sorted), TableBuilderOptionsImpl.TIME_IDLE)\r\n                    );\r\n                });\r\n        });\r\n    }\r\n\r\n    public setDefinition(definition: KeyMap<string>): void {\r\n        this.definition = this.empty ? (definition as KeyMap<SortOrderType>) || {} : this.definition;\r\n    }\r\n\r\n    public updateSortKey(key: string): void {\r\n        this.definition = this.updateImmutableDefinitions(key);\r\n    }\r\n\r\n    private updateImmutableDefinitions(key: string): KeyMap<SortOrderType> {\r\n        const existKey: SortOrderType = this.definition[key];\r\n\r\n        if (existKey) {\r\n            if (existKey === SortOrderType.ASC) {\r\n                this.definition[key] = SortOrderType.DESC;\r\n            } else {\r\n                delete this.definition[key];\r\n            }\r\n        } else {\r\n            this.definition[key] = SortOrderType.ASC;\r\n        }\r\n\r\n        return { ...this.definition };\r\n    }\r\n}\r\n","import { KeyMap, RowId } from '../../interfaces/table-builder.internal';\r\n\r\nexport class SelectionMap {\r\n    public isAll: boolean = false;\r\n    public entries: KeyMap<boolean> = {};\r\n    private readonly map: Map<RowId, boolean> = new Map<RowId, boolean>();\r\n\r\n    public get size(): number {\r\n        return this.map.size;\r\n    }\r\n\r\n    public generateImmutableEntries(): void {\r\n        this.entries = Array.from(this.map.entries()).reduce(\r\n            (main: KeyMap<boolean>, [key, value]: [RowId, boolean]) => ({ ...main, [key]: value }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    public hasValue(): boolean {\r\n        return this.size > 0;\r\n    }\r\n\r\n    public get isIndeterminate(): boolean {\r\n        return this.hasValue() && !this.isAll;\r\n    }\r\n\r\n    public get(key: RowId): boolean {\r\n        return this.map.get(key) || false;\r\n    }\r\n\r\n    public select(key: RowId, emit: boolean): void {\r\n        this.map.set(key, true);\r\n\r\n        if (emit) {\r\n            this.generateImmutableEntries();\r\n        }\r\n    }\r\n\r\n    public toggle(key: string | number, emit: boolean): void {\r\n        if (this.has(key)) {\r\n            this.delete(key, emit);\r\n        } else {\r\n            this.select(key, emit);\r\n        }\r\n    }\r\n\r\n    public delete(key: RowId, emit: boolean): void {\r\n        this.map.delete(key);\r\n        if (emit) {\r\n            this.generateImmutableEntries();\r\n        }\r\n    }\r\n\r\n    public has(key: RowId): boolean {\r\n        return this.map.has(key);\r\n    }\r\n\r\n    public clear(): void {\r\n        this.map.clear();\r\n        this.entries = {};\r\n        this.isAll = false;\r\n    }\r\n}\r\n","export class SelectionRange {\r\n    public start: number = null;\r\n    public end: number = null;\r\n\r\n    public put(index: number): void {\r\n        if (this.start === null) {\r\n            this.start = index;\r\n        } else {\r\n            this.end = index;\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        this.start = null;\r\n        this.end = null;\r\n    }\r\n\r\n    public sortKeys(): SelectionRange {\r\n        const [start, end]: number[] = [this.start, this.end].sort((a: number, b: number) => a - b);\r\n        this.start = start;\r\n        this.end = end;\r\n\r\n        return this;\r\n    }\r\n\r\n    public selectedRange(): boolean {\r\n        return this.start !== null && this.end !== null;\r\n    }\r\n}\r\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { SelectionMap } from './selection';\r\nimport { SelectionRange } from './selection-range';\r\nimport { TableRow } from '../../interfaces/table-builder.external';\r\nimport { Fn, KeyMap, KeyType, PrimaryKey, RowId, SelectionStatus } from '../../interfaces/table-builder.internal';\r\nimport { checkValueIsEmpty } from '../../operators/check-value-is-empty';\r\n\r\n@Injectable()\r\nexport class SelectionService implements OnDestroy {\r\n    public selectionModel: SelectionMap = new SelectionMap();\r\n    public range: SelectionRange = new SelectionRange();\r\n    public selectionStart: SelectionStatus = { status: false };\r\n    public primaryKey: string = PrimaryKey.ID;\r\n    public selectionTaskIdle: number;\r\n    public onChanges: Subject<void> = new Subject<void>();\r\n    private readonly handler: KeyMap<Fn> = {};\r\n\r\n    constructor(private readonly ngZone: NgZone) {}\r\n\r\n    public listenShiftKey(): void {\r\n        this.listenShiftKeyByType(KeyType.KEYDOWN);\r\n        this.listenShiftKeyByType(KeyType.KEYUP);\r\n    }\r\n\r\n    public unListenShiftKey(): void {\r\n        this.removeListenerByType(KeyType.KEYDOWN);\r\n        this.removeListenerByType(KeyType.KEYUP);\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.unListenShiftKey();\r\n    }\r\n\r\n    public toggleAll(rows: TableRow[]): void {\r\n        clearInterval(this.selectionTaskIdle);\r\n\r\n        const selectIsAll: boolean = rows.length === this.selectionModel.size;\r\n        if (!selectIsAll) {\r\n            rows.forEach((row: TableRow) => this.selectionModel.select(this.getIdByRow(row), false));\r\n        } else {\r\n            this.selectionModel.clear();\r\n        }\r\n\r\n        this.checkIsAllSelected(rows);\r\n    }\r\n\r\n    public toggle(row: TableRow): void {\r\n        clearInterval(this.selectionTaskIdle);\r\n        this.selectionModel.toggle(this.getIdByRow(row), true);\r\n        this.onChanges.next();\r\n    }\r\n\r\n    public selectRow(row: TableRow, event: MouseEvent, rows: TableRow[]): void {\r\n        const { shiftKey, ctrlKey }: MouseEvent = event;\r\n        const index: number = rows.findIndex((item: TableRow) => item[this.primaryKey] === row[this.primaryKey]);\r\n\r\n        if (shiftKey) {\r\n            this.multipleSelectByShiftKeydown(index, rows);\r\n        } else if (ctrlKey) {\r\n            this.multipleSelectByCtrlKeydown(row, index);\r\n        } else {\r\n            this.singleSelect(row, index);\r\n        }\r\n\r\n        this.checkIsAllSelected(rows);\r\n    }\r\n\r\n    public getIdByRow(row: TableRow): RowId {\r\n        const id: RowId = row[this.primaryKey];\r\n\r\n        if (checkValueIsEmpty(id)) {\r\n            throw new Error(\r\n                `Can't select item, make sure you pass the correct primary key, or you forgot enable selection\r\n                <ngx-table-builder [enable-selection]=\"true\" primary-key=\"fieldId\" />\r\n                `\r\n            );\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    public shiftKeyDetectSelection({ shiftKey }: KeyboardEvent): void {\r\n        this.selectionStart = { status: shiftKey };\r\n    }\r\n\r\n    private listenShiftKeyByType(type: KeyType): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.handler[type] = ({ shiftKey }: KeyboardEvent): void => {\r\n                this.selectionStart = { status: shiftKey };\r\n            };\r\n            window.addEventListener(type, this.handler[type], true);\r\n        });\r\n    }\r\n\r\n    private removeListenerByType(type: string): void {\r\n        window.removeEventListener(type, this.handler[type], true);\r\n    }\r\n\r\n    private checkIsAllSelected(rows: TableRow[]): void {\r\n        this.selectionModel.isAll = rows.length === this.selectionModel.size;\r\n        this.selectionModel.generateImmutableEntries();\r\n        this.onChanges.next();\r\n    }\r\n\r\n    private multipleSelectByShiftKeydown(index: number, rows: TableRow[]): void {\r\n        this.selectionModel.clear();\r\n        this.range.put(index);\r\n        const selectedRange: boolean = this.range.selectedRange();\r\n\r\n        if (selectedRange) {\r\n            const { start, end }: SelectionRange = this.range.sortKeys();\r\n            for (let i: number = start; i <= end; ++i) {\r\n                this.selectionModel.select(this.getIdByRow(rows[i]), false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private multipleSelectByCtrlKeydown(row: TableRow, index: number): void {\r\n        this.range.clear();\r\n        this.range.start = index;\r\n        this.selectionModel.toggle(this.getIdByRow(row), true);\r\n    }\r\n\r\n    private singleSelect(row: TableRow, index: number): void {\r\n        this.selectionModel.clear();\r\n        this.selectionModel.select(this.getIdByRow(row), true);\r\n        this.range.clear();\r\n        this.range.start = index;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { fromEvent, ReplaySubject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { Fn } from '../../interfaces/table-builder.internal';\r\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\r\n\r\nconst { COLUMN_RESIZE_MIN_WIDTH }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\r\n\r\n@Injectable()\r\nexport class ResizableService {\r\n    public startX: number;\r\n    public startWidth: number;\r\n    private destroyed$: ReplaySubject<boolean>;\r\n\r\n    private static clearSelection(): void {\r\n        if (window.getSelection) {\r\n            window.getSelection().removeAllRanges();\r\n        } else if (document['selection']) {\r\n            document['selection'].empty();\r\n        }\r\n    }\r\n\r\n    public resize(event: MouseEvent, column: HTMLElement, mousemove: Fn, mouseup: Fn): void {\r\n        this.destroyed$ = new ReplaySubject(1);\r\n        this.startX = event.pageX;\r\n        this.startWidth = column.offsetWidth;\r\n\r\n        fromEvent(document, 'mousemove')\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((e: MouseEvent) => this.computeEvent(e, mousemove));\r\n\r\n        fromEvent(document, 'mouseup')\r\n            .pipe(takeUntil(this.destroyed$))\r\n            .subscribe((e: MouseEvent) => this.unsubscribe(e, mouseup));\r\n    }\r\n\r\n    private computeEvent(event: MouseEvent, mousemove: Fn): void {\r\n        ResizableService.clearSelection();\r\n        const width: number = this.startWidth + (event.pageX - this.startX);\r\n        if (width >= COLUMN_RESIZE_MIN_WIDTH) {\r\n            mousemove(width);\r\n        }\r\n    }\r\n\r\n    private unsubscribe(event: MouseEvent, mouseup: Fn): void {\r\n        this.destroyed$.next(true);\r\n        this.destroyed$.complete();\r\n        mouseup(event);\r\n    }\r\n}\r\n","import { moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { TemplateParserService } from '../template-parser/template-parser.service';\r\nimport { ColumnsSchema } from '../../interfaces/table-builder.external';\r\n\r\n@Injectable()\r\nexport class DraggableService {\r\n    constructor(private readonly parser: TemplateParserService) {}\r\n\r\n    private get columns(): ColumnsSchema[] {\r\n        return this.parser.schema.columns;\r\n    }\r\n\r\n    public drop(previousKey: string, currentKey: string): void {\r\n        const previousIndex: number = this.columns.findIndex((column: ColumnsSchema) => column.key === previousKey);\r\n        const currentIndex: number = this.columns.findIndex((column: ColumnsSchema) => column.key === currentKey);\r\n\r\n        if (this.canDropped(previousIndex, currentIndex)) {\r\n            if (currentIndex === this.columns.length - 1) {\r\n                this.columns[currentIndex].width = this.columns[previousIndex].width;\r\n                this.columns[previousIndex].width = null;\r\n            }\r\n\r\n            moveItemInArray(this.columns, previousIndex, currentIndex);\r\n        }\r\n    }\r\n\r\n    public canDropped(previousIndex: number, currentIndex: number): boolean {\r\n        const previous: ColumnsSchema = this.columns[previousIndex];\r\n        const current: ColumnsSchema = this.columns[currentIndex];\r\n        const previousIsDraggable: boolean = previous.draggable;\r\n        const currentIsDraggable: boolean = current.draggable;\r\n        const isSticky: boolean =\r\n            previous.stickyLeft || current.stickyLeft || previous.stickyRight || current.stickyRight;\r\n\r\n        return previousIsDraggable && currentIsDraggable && !isSticky;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { TableUpdateSchema } from '../../interfaces/table-builder.external';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NgxTableViewChangesService {\r\n    public events: Subject<TableUpdateSchema> = new Subject<TableUpdateSchema>();\r\n    public update(state: TableUpdateSchema): void {\r\n        this.events.next(state);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class OverloadScrollService {\r\n    public scrollStatus: Subject<boolean> = new Subject();\r\n}\r\n","import {\r\n    AfterContentInit,\r\n    AfterViewChecked,\r\n    AfterViewInit,\r\n    ApplicationRef,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    NgZone,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChange,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {\r\n    Any,\r\n    Fn,\r\n    KeyMap,\r\n    RecalculatedStatus,\r\n    ScrollOffsetStatus,\r\n    TableSimpleChanges,\r\n    TemplateKeys\r\n} from './interfaces/table-builder.internal';\r\nimport { TableBuilderApiImpl } from './table-builder.api';\r\nimport { NGX_ANIMATION } from './animations/fade.animation';\r\nimport { ColumnsSchema } from './interfaces/table-builder.external';\r\nimport { NgxColumnComponent } from './components/ngx-column/ngx-column.component';\r\nimport { TemplateParserService } from './services/template-parser/template-parser.service';\r\nimport { SortableService } from './services/sortable/sortable.service';\r\nimport { SelectionService } from './services/selection/selection.service';\r\nimport { UtilsService } from './services/utils/utils.service';\r\nimport { ResizableService } from './services/resizer/resizable.service';\r\nimport { TableBuilderOptionsImpl } from './config/table-builder-options';\r\nimport { ContextMenuService } from './services/context-menu/context-menu.service';\r\nimport { FilterableService } from './services/filterable/filterable.service';\r\nimport { TableFilterType } from './services/filterable/filterable.interface';\r\nimport { DraggableService } from './services/draggable/draggable.service';\r\nimport { NgxTableViewChangesService } from './services/table-view-changes/ngx-table-view-changes.service';\r\nimport { OverloadScrollService } from './services/overload-scroll/overload-scroll.service';\r\nimport { CdkDragStart } from '@angular/cdk/drag-drop';\r\n\r\nconst { TIME_IDLE, TIME_RELOAD, FRAME_TIME }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\r\n\r\n@Component({\r\n    selector: 'ngx-table-builder',\r\n    templateUrl: './table-builder.component.html',\r\n    styleUrls: ['./table-builder.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        TemplateParserService,\r\n        SortableService,\r\n        SelectionService,\r\n        ResizableService,\r\n        ContextMenuService,\r\n        FilterableService,\r\n        DraggableService,\r\n        OverloadScrollService\r\n    ],\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [NGX_ANIMATION]\r\n})\r\nexport class TableBuilderComponent extends TableBuilderApiImpl\r\n    implements OnChanges, OnInit, AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\r\n    public dirty: boolean = true;\r\n    public rendering: boolean = false;\r\n    public isRendered: boolean = false;\r\n    public contentInit: boolean = false;\r\n    public contentCheck: boolean = false;\r\n    public showedCellByDefault: boolean = true;\r\n    public scrollOffset: ScrollOffsetStatus = { offset: false };\r\n    public recalculated: RecalculatedStatus = { recalculateHeight: false };\r\n    @ViewChild('header', { static: false })\r\n    public headerRef: ElementRef<HTMLDivElement>;\r\n    @ViewChild('footer', { static: false })\r\n    public footerRef: ElementRef<HTMLDivElement>;\r\n    public sourceIsNull: boolean;\r\n    public isScrolling: boolean;\r\n    private forcedRefresh: boolean = false;\r\n    private readonly destroy$: Subject<boolean> = new Subject<boolean>();\r\n    private checkedTaskId: number = null;\r\n\r\n    constructor(\r\n        public readonly selection: SelectionService,\r\n        public readonly templateParser: TemplateParserService,\r\n        public readonly cd: ChangeDetectorRef,\r\n        public readonly ngZone: NgZone,\r\n        public readonly utils: UtilsService,\r\n        public readonly resize: ResizableService,\r\n        public readonly sortable: SortableService,\r\n        public readonly contextMenu: ContextMenuService,\r\n        protected readonly app: ApplicationRef,\r\n        public readonly filterable: FilterableService,\r\n        protected readonly draggable: DraggableService,\r\n        protected readonly viewChanges: NgxTableViewChangesService,\r\n        protected readonly overloadScroll: OverloadScrollService\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    public get selectionEntries(): KeyMap<boolean> {\r\n        return this.selection.selectionModel.entries;\r\n    }\r\n\r\n    public get sourceExists(): boolean {\r\n        return !!this.source && this.source.length > 0;\r\n    }\r\n\r\n    private get viewIsDirty(): boolean {\r\n        return this.contentCheck && !this.forcedRefresh;\r\n    }\r\n\r\n    private static checkCorrectInitialSchema(changes: SimpleChanges = {}): void {\r\n        if (TableSimpleChanges.SCHEMA_COLUMNS in changes) {\r\n            const schemaChange: SimpleChange = changes[TableSimpleChanges.SCHEMA_COLUMNS];\r\n            if (!schemaChange.currentValue) {\r\n                throw new Error(\r\n                    `You need set correct <ngx-table-builder [schema-columns]=\"[] || [..]\" /> for one time binding`\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    public checkSourceIsNull(): boolean {\r\n        return !('length' in (this.source || {}));\r\n    }\r\n\r\n    public recalculateHeight(): void {\r\n        this.recalculated = { recalculateHeight: true };\r\n        this.detectChanges();\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges = {}): void {\r\n        TableBuilderComponent.checkCorrectInitialSchema(changes);\r\n\r\n        const nonIdenticalStructure: boolean = this.sourceExists && this.getCountKeys() !== this.renderedCountKeys;\r\n        this.sourceIsNull = this.checkSourceIsNull();\r\n        this.sortable.setDefinition(this.sortTypes);\r\n\r\n        if (nonIdenticalStructure) {\r\n            this.preRenderTable();\r\n        } else if (TableSimpleChanges.SOURCE_KEY in changes && this.isRendered) {\r\n            this.preSortAndFilterTable(changes);\r\n        }\r\n    }\r\n\r\n    public markForCheck(): void {\r\n        this.contentCheck = true;\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.enableSelection) {\r\n            this.selection.primaryKey = this.primaryKey;\r\n            this.selection.listenShiftKey();\r\n        }\r\n    }\r\n\r\n    public updateScrollOffset(offset: boolean): void {\r\n        this.scrollOffset = { offset };\r\n        this.idleDetectChanges();\r\n    }\r\n\r\n    public markVisibleColumn(column: HTMLDivElement, visible: boolean): void {\r\n        column['visible'] = visible;\r\n        this.detectChanges();\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n        this.markDirtyCheck();\r\n        this.markTemplateContentCheck();\r\n\r\n        if (this.sourceExists) {\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        this.listenTemplateChanges();\r\n        this.listenSelectionChanges();\r\n        this.recheckTemplateChanges();\r\n        this.listenScrollEvents();\r\n    }\r\n\r\n    public cdkDragMoved(event: CdkDragStart, root: HTMLElement): void {\r\n        const preview: HTMLElement = event.source._dragRef['_preview'];\r\n        const transform: string = event.source._dragRef['_preview'].style.transform || '';\r\n        const [x, , z]: [number, number, number] = transform\r\n            .replace(/translate3d|\\(|\\)|px/g, '')\r\n            .split(',')\r\n            .map((val: string) => parseFloat(val)) as [number, number, number];\r\n\r\n        preview.style.transform = `translate3d(${x}px, ${root.getBoundingClientRect().top}px, ${z}px)`;\r\n    }\r\n\r\n    public ngAfterViewChecked(): void {\r\n        if (this.viewIsDirty) {\r\n            this.viewForceRefresh();\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.templateParser.schema = null;\r\n        this.destroy$.next(true);\r\n        this.destroy$.unsubscribe();\r\n    }\r\n\r\n    public markTemplateContentCheck(): void {\r\n        this.contentInit = !!this.source || !(this.columnTemplates && this.columnTemplates.length);\r\n    }\r\n\r\n    public markDirtyCheck(): void {\r\n        this.dirty = false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @description: Key table generation for internal use\r\n     * @sample: keys - ['id', 'value'] -> { id: true, value: true }\r\n     */\r\n    public generateColumnsKeyMap(keys: string[]): KeyMap<boolean> {\r\n        const map: KeyMap<boolean> = {};\r\n        keys.forEach((key: string) => (map[key] = true));\r\n        return map;\r\n    }\r\n\r\n    public render(): void {\r\n        this.contentCheck = false;\r\n        this.utils.macrotask(() => this.renderTable(), TIME_IDLE).then(() => this.idleDetectChanges());\r\n    }\r\n\r\n    public renderTable({ async }: { async: boolean } = { async: true }): void {\r\n        if (this.rendering) {\r\n            return;\r\n        }\r\n\r\n        this.rendering = true;\r\n        const columnList: string[] = this.generateDisplayedColumns();\r\n        const drawTask: Fn<string[], Promise<void>> =\r\n            this.asyncColumns && async ? this.asyncDrawColumns.bind(this) : this.syncDrawColumns.bind(this);\r\n\r\n        if (!this.sortable.empty) {\r\n            this.sortAndFilter().then(() => drawTask(columnList).then(() => this.emitRendered()));\r\n        } else {\r\n            drawTask(columnList).then(() => this.emitRendered());\r\n        }\r\n    }\r\n\r\n    public toggleColumnVisibility(key: string): void {\r\n        this.recheckViewportChecked();\r\n        this.templateParser.toggleColumnVisibility(key);\r\n        this.utils\r\n            .requestAnimationFrame(() => {\r\n                this.changeSchema();\r\n                this.recheckViewportChecked();\r\n            })\r\n            .then(() => this.app.tick());\r\n    }\r\n\r\n    public resetSchema(): void {\r\n        this.tableViewportChecked = false;\r\n        this.schemaColumns = null;\r\n        this.detectChanges();\r\n\r\n        this.renderTable({ async: false });\r\n        this.changeSchema([]);\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.setTimeout(() => {\r\n                this.tableViewportChecked = true;\r\n                this.detectChanges();\r\n            }, TableBuilderOptionsImpl.TIME_IDLE);\r\n        });\r\n    }\r\n\r\n    private preSortAndFilterTable(changes: SimpleChanges = {}): void {\r\n        this.originalSource = changes[TableSimpleChanges.SOURCE_KEY].currentValue;\r\n        this.sortAndFilter().then(() => this.reCheckDefinitions());\r\n    }\r\n\r\n    private preRenderTable(): void {\r\n        this.renderedCountKeys = this.getCountKeys();\r\n        this.customModelColumnsKeys = this.generateCustomModelColumnsKeys();\r\n        this.modelColumnKeys = this.generateModelColumnKeys();\r\n        this.originalSource = this.source;\r\n        const unDirty: boolean = !this.dirty;\r\n\r\n        this.checkFilterValues();\r\n\r\n        if (unDirty) {\r\n            this.markForCheck();\r\n        }\r\n\r\n        const recycleView: boolean = unDirty && this.isRendered && this.contentInit;\r\n\r\n        if (recycleView) {\r\n            this.renderTable();\r\n        }\r\n    }\r\n\r\n    private listenScrollEvents(): void {\r\n        this.overloadScroll.scrollStatus.pipe(takeUntil(this.destroy$)).subscribe((scrolling: boolean) => {\r\n            this.isScrolling = scrolling;\r\n            this.detectChanges();\r\n        });\r\n    }\r\n\r\n    private checkFilterValues(): void {\r\n        if (this.enableFiltering) {\r\n            this.filterable.filterType =\r\n                this.filterable.filterType ||\r\n                (this.columnOptions && this.columnOptions.filterType) ||\r\n                TableFilterType.START_WITH;\r\n\r\n            this.modelColumnKeys.forEach((key: string) => {\r\n                this.filterable.filterTypeDefinition[key] =\r\n                    this.filterable.filterTypeDefinition[key] || this.filterable.filterType;\r\n            });\r\n        }\r\n    }\r\n\r\n    private recheckTemplateChanges(): void {\r\n        this.ngZone.runOutsideAngular(() => window.setTimeout(() => this.app.tick(), TIME_RELOAD));\r\n    }\r\n\r\n    private listenSelectionChanges(): void {\r\n        if (this.enableSelection) {\r\n            this.selection.onChanges.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n                this.detectChanges();\r\n                this.ngZone.runOutsideAngular(() =>\r\n                    window.requestAnimationFrame(() => {\r\n                        this.detectChanges();\r\n                        this.app.tick();\r\n                    })\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    private viewForceRefresh(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.clearTimeout(this.checkedTaskId);\r\n            this.checkedTaskId = window.setTimeout(() => {\r\n                this.forcedRefresh = true;\r\n                this.markTemplateContentCheck();\r\n                this.render();\r\n            }, FRAME_TIME);\r\n        });\r\n    }\r\n\r\n    private listenTemplateChanges(): void {\r\n        if (this.columnTemplates) {\r\n            this.columnTemplates.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n                this.markForCheck();\r\n                this.markTemplateContentCheck();\r\n            });\r\n        }\r\n\r\n        if (this.contextMenuTemplate) {\r\n            this.contextMenu.events.pipe(takeUntil(this.destroy$)).subscribe(() => this.detectChanges());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: lazy rendering of columns\r\n     */\r\n    private async asyncDrawColumns(columnList: string[]): Promise<void> {\r\n        for (let index: number = 0; index < columnList.length; index++) {\r\n            const key: string = columnList[index];\r\n            const schema: ColumnsSchema = this.mergeColumnSchema(key, index);\r\n\r\n            if (schema.isVisible) {\r\n                await this.utils.requestAnimationFrame(() => {\r\n                    this.processedColumnList && this.processedColumnList(schema, key, true);\r\n                });\r\n            } else {\r\n                this.processedColumnList(schema, key, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: sync rendering of columns\r\n     */\r\n    private async syncDrawColumns(columnList: string[]): Promise<void> {\r\n        await this.utils.microtask(() => {\r\n            for (let index: number = 0; index < columnList.length; index++) {\r\n                const key: string = columnList[index];\r\n                const schema: ColumnsSchema = this.mergeColumnSchema(key, index);\r\n                this.processedColumnList(schema, columnList[index], false);\r\n            }\r\n        });\r\n    }\r\n\r\n    private getCustomColumnSchemaByIndex(index: number): Partial<ColumnsSchema> {\r\n        return ((this.schemaColumns && this.schemaColumns[index]) || ({} as Any)) as Partial<ColumnsSchema>;\r\n    }\r\n\r\n    /**\r\n     * @description - it is necessary to combine the templates given from the server and default\r\n     * @param key - column schema from rendered templates map\r\n     * @param index - column position\r\n     */\r\n    private mergeColumnSchema(key: string, index: number): ColumnsSchema {\r\n        const customColumn: Partial<ColumnsSchema> = this.getCustomColumnSchemaByIndex(index);\r\n\r\n        if (!this.templateParser.compiledTemplates[key]) {\r\n            const column: NgxColumnComponent = new NgxColumnComponent().withKey(key);\r\n            this.templateParser.compileColumnMetadata(column);\r\n        }\r\n\r\n        const defaultColumn: ColumnsSchema = this.templateParser.compiledTemplates[key];\r\n\r\n        if (customColumn.key === defaultColumn.key) {\r\n            this.templateParser.compiledTemplates[key] = { ...defaultColumn, ...customColumn } as ColumnsSchema;\r\n        }\r\n\r\n        return this.templateParser.compiledTemplates[key];\r\n    }\r\n\r\n    /**\r\n     * @description: column meta information processing\r\n     * @param schema - column schema\r\n     * @param key - column name\r\n     * @param async - whether to draw a column asynchronously\r\n     */\r\n    private processedColumnList(schema: ColumnsSchema, key: string, async: boolean): void {\r\n        if (this.templateParser.schema) {\r\n            this.templateParser.schema.columns.push(this.templateParser.compiledTemplates[key]);\r\n            if (async) {\r\n                this.idleDetectChanges();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description: notification that the table has been rendered\r\n     * @see TableBuilderComponent#isRendered\r\n     */\r\n    private emitRendered(): void {\r\n        this.isRendered = true;\r\n        this.rendering = false;\r\n        this.afterRendered.emit(this.isRendered);\r\n        this.recalculateHeight();\r\n    }\r\n\r\n    /**\r\n     * @description: parsing templates and input parameters (keys, schemaColumns) for the number of columns\r\n     */\r\n    private generateDisplayedColumns(): string[] {\r\n        let generatedList: string[] = [];\r\n        this.templateParser.initialSchema(this.columnOptions);\r\n        const { simpleRenderedKeys, allRenderedKeys }: TemplateKeys = this.parseTemplateKeys();\r\n\r\n        if (this.schemaColumns && this.schemaColumns.length) {\r\n            generatedList = this.schemaColumns.map((column: ColumnsSchema) => column.key);\r\n        } else if (this.keys.length) {\r\n            generatedList = this.customModelColumnsKeys;\r\n        } else if (simpleRenderedKeys.size) {\r\n            generatedList = allRenderedKeys;\r\n        } else {\r\n            generatedList = this.modelColumnKeys;\r\n        }\r\n\r\n        return generatedList;\r\n    }\r\n\r\n    /**\r\n     * @description: this method returns the keys by which to draw table columns\r\n     * <allowedKeyMap> - possible keys from the model, this must be checked,\r\n     * because users can draw the wrong keys in the template (ngx-column key=invalid)\r\n     */\r\n    private parseTemplateKeys(): TemplateKeys {\r\n        this.templateParser.keyMap = this.generateColumnsKeyMap(this.keys.length ? this.keys : this.getModelKeys());\r\n\r\n        this.templateParser.allowedKeyMap = this.keys.length\r\n            ? this.generateColumnsKeyMap(this.customModelColumnsKeys)\r\n            : this.generateColumnsKeyMap(this.modelColumnKeys);\r\n\r\n        this.templateParser.parse(this.columnTemplates);\r\n\r\n        return {\r\n            allRenderedKeys: Array.from(this.templateParser.fullTemplateKeys),\r\n            overridingRenderedKeys: this.templateParser.overrideTemplateKeys,\r\n            simpleRenderedKeys: this.templateParser.templateKeys\r\n        };\r\n    }\r\n}\r\n","import { Directive, EventEmitter, Inject, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\n\r\nimport { OverloadScrollService } from '../services/overload-scroll/overload-scroll.service';\r\nimport { TableBuilderOptionsImpl } from '../config/table-builder-options';\r\nimport { NGX_TABLE_OPTIONS } from '../config/table-builder.tokens';\r\n\r\nconst { TIME_IDLE }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\r\n\r\n@Directive({ selector: '[wheelThrottling]' })\r\nexport class WheelThrottlingDirective implements OnInit, OnDestroy {\r\n    @Input() public wheelThrottling: HTMLDivElement;\r\n    @Output() public scrollOffset: EventEmitter<boolean> = new EventEmitter();\r\n    public scrollTopOffset: boolean = false;\r\n    public isScrolling: number = null;\r\n    private scrolling: boolean = false;\r\n    private subscription: Subscription;\r\n\r\n    constructor(\r\n        @Inject(NGX_TABLE_OPTIONS) private readonly options: TableBuilderOptionsImpl,\r\n        private readonly ngZone: NgZone,\r\n        private readonly overload: OverloadScrollService\r\n    ) {}\r\n\r\n    private get element(): HTMLElement {\r\n        return this.wheelThrottling;\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.subscription = fromEvent(this.element, 'wheel').subscribe((event: WheelEvent): void =>\r\n            this.onElementScroll(event)\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscription.unsubscribe();\r\n        this.wheelThrottling = null;\r\n        this.scrollOffset = null;\r\n    }\r\n\r\n    /**\r\n     * Correct works only Chrome\r\n     * @param $event\r\n     */\r\n    public onElementScroll($event: WheelEvent): void {\r\n        this.scrollStart();\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.clearTimeout(this.isScrolling);\r\n            this.isScrolling = window.setTimeout(() => {\r\n                const isOffset: boolean = this.element.scrollTop > 0 && !this.scrollTopOffset;\r\n\r\n                if (isOffset) {\r\n                    this.scrollTopOffset = true;\r\n                    this.scrollOffset.emit(this.scrollTopOffset);\r\n                } else if (this.element.scrollTop === 0 && this.scrollTopOffset) {\r\n                    this.scrollTopOffset = false;\r\n                    this.scrollOffset.emit(this.scrollTopOffset);\r\n                }\r\n\r\n                this.scrollEnd();\r\n            }, TIME_IDLE);\r\n        });\r\n    }\r\n\r\n    private scrollStart(): void {\r\n        if (!this.scrolling) {\r\n            this.scrolling = true;\r\n            this.overload.scrollStatus.next(this.scrolling);\r\n        }\r\n    }\r\n\r\n    private scrollEnd(): void {\r\n        this.scrolling = false;\r\n        this.overload.scrollStatus.next(this.scrolling);\r\n    }\r\n}\r\n","import { Input } from '@angular/core';\r\nimport { ColumnsSchema, TableEvent, TableRow } from '../../interfaces/table-builder.external';\r\nimport { TableBrowserEvent } from '../../interfaces/table-builder.internal';\r\nimport { SelectionService } from '../../services/selection/selection.service';\r\nimport { UtilsService } from '../../services/utils/utils.service';\r\nimport { getDeepValue } from '../../operators/deep-value';\r\n\r\nexport class TableLineRow {\r\n    @Input('is-rendered') public isRendered: boolean;\r\n    @Input('column-index') public columnIndex: number;\r\n    @Input('client-row-height') public clientRowHeight: number;\r\n    @Input('column-schema') public columnSchema: ColumnsSchema;\r\n\r\n    constructor(public readonly selection: SelectionService, protected readonly utils: UtilsService) {}\r\n\r\n    public generateTableCellInfo(item: TableRow, key: string, $event: TableBrowserEvent): TableEvent {\r\n        return {\r\n            row: item,\r\n            event: $event,\r\n            value: getDeepValue(item, key),\r\n            preventDefault: (): void => {\r\n                window.clearInterval(this.selection.selectionTaskIdle);\r\n            }\r\n        };\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport { TableLineRow } from '../common/table-line-row';\r\nimport { SelectionService } from '../../services/selection/selection.service';\r\nimport { KeyMap, ResizeEvent } from '../../interfaces/table-builder.internal';\r\nimport { SortOrderType } from '../../services/sortable/sortable.interfaces';\r\nimport { UtilsService } from '../../services/utils/utils.service';\r\nimport { FilterableService } from '../../services/filterable/filterable.service';\r\n\r\n@Component({\r\n    selector: 'table-thead',\r\n    templateUrl: './table-thead.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TableTheadComponent extends TableLineRow {\r\n    @Input('header-top') public headerTop: number;\r\n    @Input('sortable-definition') public sortableDefinition: KeyMap<SortOrderType>;\r\n    @Input('filterable-definition') public filterableDefinition: KeyMap<string>;\r\n    @Output() public resize: EventEmitter<ResizeEvent> = new EventEmitter();\r\n    @Output() public sortByKey: EventEmitter<string> = new EventEmitter();\r\n    public orderType: typeof SortOrderType = SortOrderType;\r\n\r\n    constructor(\r\n        public readonly selection: SelectionService,\r\n        protected readonly utils: UtilsService,\r\n        protected readonly filterable: FilterableService\r\n    ) {\r\n        super(selection, utils);\r\n    }\r\n\r\n    public openFilter(key: string, event: MouseEvent): void {\r\n        this.filterable.openFilter(key, event);\r\n    }\r\n}\r\n","import { VirtualScrollerComponent } from 'ngx-virtual-scroller';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    Inject,\r\n    Input,\r\n    NgZone,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { TableLineRow } from '../common/table-line-row';\r\nimport { TableClickEventEmitter, TableRow } from '../../interfaces/table-builder.external';\r\nimport { SelectionService } from '../../services/selection/selection.service';\r\nimport { NGX_TABLE_OPTIONS } from '../../config/table-builder.tokens';\r\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\r\nimport { Any, KeyMap, RecalculatedStatus } from '../../interfaces/table-builder.internal';\r\nimport { ContextMenuService } from '../../services/context-menu/context-menu.service';\r\nimport { NgxContextMenuComponent } from '../../components/ngx-context-menu/ngx-context-menu.component';\r\nimport { OverloadScrollService } from '../../services/overload-scroll/overload-scroll.service';\r\nimport { UtilsService } from '../../services/utils/utils.service';\r\nimport { detectChanges } from '../../operators/detect-changes';\r\n\r\n@Component({\r\n    selector: 'table-tbody',\r\n    templateUrl: './table-tbody.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TableTbodyComponent extends TableLineRow implements OnChanges, OnInit, OnDestroy {\r\n    @Input() public source: TableRow[];\r\n    @Input() public striped: boolean;\r\n    @Input('is-firefox') public isFirefox: boolean;\r\n    @Input() public recalculated: RecalculatedStatus;\r\n    @Input('primary-key') public primaryKey: string;\r\n    @Input('selection-entries') public selectionEntries: KeyMap<boolean>;\r\n    @Input('context-menu') public contextMenuTemplate: NgxContextMenuComponent;\r\n    @Input('enable-selection') public enableSelection: boolean;\r\n    @Input('table-viewport') public tableViewport: HTMLElement;\r\n    @Input('column-virtual-height') public columnVirtualHeight: number;\r\n    @Input('showed-cell-by-default') public showedCellByDefault: boolean;\r\n    @Input('buffer-amount') public bufferAmount: number;\r\n    @ViewChild('scroll', { static: true }) public scroll: VirtualScrollerComponent;\r\n    private destroy$: Subject<boolean> = new Subject<boolean>();\r\n    private reloadTaskId: number;\r\n\r\n    constructor(\r\n        public selection: SelectionService,\r\n        public cd: ChangeDetectorRef,\r\n        public contextMenu: ContextMenuService,\r\n        @Inject(NGX_TABLE_OPTIONS) private readonly options: TableBuilderOptionsImpl,\r\n        private readonly ngZone: NgZone,\r\n        protected readonly utils: UtilsService,\r\n        private readonly overload: OverloadScrollService\r\n    ) {\r\n        super(selection, utils);\r\n    }\r\n\r\n    public get clientBufferAmount(): number {\r\n        return Number(this.bufferAmount) || this.options.bufferAmount;\r\n    }\r\n\r\n    public get canSelectTextInTable(): boolean {\r\n        return !this.selection.selectionStart.status;\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if ('recalculated' in changes && !changes['recalculated'].firstChange && this.scroll) {\r\n            this.scroll.invalidateAllCachedMeasurements();\r\n        }\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.overload.scrollStatus\r\n            .pipe(\r\n                filter((scrolling: boolean) => !scrolling),\r\n                takeUntil(this.destroy$)\r\n            )\r\n            .subscribe(() => this.refresh());\r\n    }\r\n\r\n    /**\r\n     * @description: we hove some memory leak after destroy component\r\n     * because VirtualScrollerComponent work with requestAnimationFrame\r\n     * invalidate cache (VirtualScrollerComponent)\r\n     */\r\n    public ngOnDestroy(): void {\r\n        this.destroy$.next(true);\r\n        this.destroy$.unsubscribe();\r\n        const scroll: VirtualScrollerComponent & Any = this.scroll as Any;\r\n        scroll.removeScrollEventHandlers();\r\n        scroll.wrapGroupDimensions = null;\r\n        scroll.parentScroll = null;\r\n        scroll.viewPortItems = null;\r\n        scroll.items = null;\r\n        scroll['invalidateAllCachedMeasurements'] = (): void => {};\r\n        scroll['calculateViewport'] = (): Any => ({ startIndex: 0, scrollLength: 0 });\r\n        scroll['previousViewPort'] = { startIndex: 0, scrollLength: 0 };\r\n        scroll['invisiblePaddingElementRef'] = { nativeElement: null };\r\n        scroll['getScrollStartPosition'] = (): number => 0;\r\n        scroll['calculateDimensions'] = (): void => {};\r\n        scroll['refresh_internal'] = (): void => {};\r\n        scroll['element'] = { nativeElement: null };\r\n        scroll['contentElementRef'] = null;\r\n        scroll['_items'] = null;\r\n        scroll['zone'] = null;\r\n        this.destroy$ = null;\r\n        this.scroll = null;\r\n    }\r\n\r\n    public openContextMenu(event: MouseEvent, key: string, row: TableRow): void {\r\n        if (this.contextMenuTemplate) {\r\n            const selectOnlyUnSelectedRow: boolean = this.enableSelection && !this.checkSelectedItem(row);\r\n\r\n            if (selectOnlyUnSelectedRow) {\r\n                this.selection.selectRow(row, event, this.source);\r\n            }\r\n\r\n            this.contextMenu.openContextMenu(event, key, row);\r\n        }\r\n    }\r\n\r\n    public handleDblClick(row: TableRow, key: string, event: MouseEvent, emitter: TableClickEventEmitter): void {\r\n        window.clearInterval(this.selection.selectionTaskIdle);\r\n        this.handleEventEmitter(row, key, event, emitter);\r\n    }\r\n\r\n    public handleOnClick(row: TableRow, key: string, event: MouseEvent, emitter: TableClickEventEmitter): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            if (this.enableSelection) {\r\n                this.selection.selectionTaskIdle = window.setTimeout(() => {\r\n                    this.selection.selectRow(row, event, this.source);\r\n                    event.preventDefault();\r\n                    detectChanges(this.cd);\r\n                });\r\n            }\r\n        });\r\n\r\n        this.handleEventEmitter(row, key, event, emitter);\r\n    }\r\n\r\n    public vsChange(): void {\r\n        detectChanges(this.cd);\r\n    }\r\n\r\n    private refresh(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.clearTimeout(this.reloadTaskId);\r\n            this.reloadTaskId = window.setTimeout(() => {\r\n                if (this.scroll) {\r\n                    this.scroll.invalidateAllCachedMeasurements();\r\n                    detectChanges(this.cd);\r\n                }\r\n            }, TableBuilderOptionsImpl.MACRO_TIME);\r\n        });\r\n    }\r\n\r\n    private handleEventEmitter(row: TableRow, key: string, event: MouseEvent, emitter: TableClickEventEmitter): void {\r\n        if (emitter) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                window.setTimeout(() => {\r\n                    emitter.emit(this.generateTableCellInfo(row, key, event));\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private checkSelectedItem(row: TableRow): boolean {\r\n        return this.selection.selectionModel.get(row[this.primaryKey]);\r\n    }\r\n}\r\n","import {\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport { Any, DynamicHeightOptions, Fn } from '../interfaces/table-builder.internal';\r\nimport { TableBuilderOptionsImpl } from '../config/table-builder-options';\r\n\r\ninterface BoxView {\r\n    paddingTop: string;\r\n    paddingBottom: string;\r\n}\r\n\r\n@Directive({ selector: '[autoHeight]' })\r\nexport class AutoHeightDirective implements OnInit, OnChanges, OnDestroy {\r\n    private static readonly DEFAULT_VALUE: number = 0;\r\n    private static readonly HEAD_TOP: string = '10px';\r\n    private static readonly DELAY: number = 100;\r\n\r\n    @Input() public headerHeight: number = 0;\r\n    @Input() public footerHeight: number = 0;\r\n    @Input() public autoHeight: Partial<DynamicHeightOptions> = {};\r\n    @Output() public recalculatedHeight: EventEmitter<void> = new EventEmitter();\r\n\r\n    private useOnlyAutoViewPort: boolean = false;\r\n    private isDirtyCheck: boolean;\r\n    private taskId: number;\r\n    private handler: Fn;\r\n\r\n    constructor(private readonly element: ElementRef, public readonly ngZone: NgZone) {}\r\n\r\n    private get height(): number {\r\n        return this.autoHeight.height;\r\n    }\r\n\r\n    private get canCalculated(): boolean {\r\n        return this.autoHeight.inViewport && this.autoHeight.sourceLength > 0;\r\n    }\r\n\r\n    private get style(): string {\r\n        let height: string;\r\n\r\n        if (this.height) {\r\n            height = `${this.height}px`;\r\n        } else if (this.autoHeight.detect) {\r\n            const paddingTop: string = AutoHeightDirective.getStyle(this.rootCurrentElement, 'padding-top');\r\n            const paddingBottom: string = AutoHeightDirective.getStyle(this.rootCurrentElement, 'padding-bottom');\r\n\r\n            if (this.useOnlyAutoViewPort && this.columnHeight > this.parentOffsetHeight) {\r\n                height = this.getHeightByViewPort({ paddingTop, paddingBottom });\r\n            } else if (this.parentOffsetHeight > this.columnHeight) {\r\n                height = this.getDefaultHeight();\r\n            } else if (!this.isEmptyParentHeight) {\r\n                height = this.getHeightByParent({ paddingTop, paddingBottom });\r\n            } else {\r\n                height = this.getHeightByViewPort({ paddingTop, paddingBottom });\r\n            }\r\n        }\r\n\r\n        return height ? `display: block; height: ${height}` : '';\r\n    }\r\n\r\n    private get isEmptyParentHeight(): boolean {\r\n        return this.parentOffsetHeight < parseInt(AutoHeightDirective.HEAD_TOP);\r\n    }\r\n\r\n    private get parentOffsetHeight(): number {\r\n        return this.rootCurrentElement.clientHeight || AutoHeightDirective.DEFAULT_VALUE;\r\n    }\r\n\r\n    private get currentElement(): HTMLDivElement {\r\n        return this.element.nativeElement;\r\n    }\r\n\r\n    private get childElement(): Partial<HTMLDivElement> {\r\n        return ((this.element.nativeElement as HTMLDivElement).firstChild as HTMLDivElement) || {};\r\n    }\r\n\r\n    private get rootCurrentElement(): Partial<HTMLElement> {\r\n        return (this.currentElement.parentNode && this.currentElement.parentNode.parentElement) || {};\r\n    }\r\n\r\n    private get columnHeight(): number {\r\n        return this.autoHeight.columnHeight || 0;\r\n    }\r\n\r\n    private get autoViewHeight(): number {\r\n        return document.body.clientHeight - this.currentElement.getBoundingClientRect().top;\r\n    }\r\n\r\n    private static getStyle(element: Element | Any, strCssRule: string): string {\r\n        let strValue: string = '';\r\n\r\n        if (document.defaultView && document.defaultView.getComputedStyle) {\r\n            try {\r\n                strValue = document.defaultView.getComputedStyle(element, '').getPropertyValue(strCssRule);\r\n            } catch (e) {\r\n                strValue = '0px';\r\n            }\r\n        } else if (element.currentStyle) {\r\n            strCssRule = strCssRule.replace(/\\-(\\w)/g, (strMatch: string, p1: string): string => p1.toUpperCase());\r\n            strValue = element.currentStyle[strCssRule];\r\n        }\r\n\r\n        return strValue;\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.handler = (): void => this.recalculateTableSize();\r\n            window.addEventListener('resize', this.handler, { passive: true });\r\n        });\r\n    }\r\n\r\n    public ngOnChanges(changes: SimpleChanges): void {\r\n        if ('autoHeight' in changes) {\r\n            this.recalculateTableSize();\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        window.removeEventListener('resize', this.handler);\r\n    }\r\n\r\n    public recalculateTableSize(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            clearTimeout(this.taskId);\r\n            this.taskId = window.setTimeout(() => {\r\n                if (this.canCalculated && !this.isDirtyCheck) {\r\n                    this.markForCheck();\r\n                }\r\n\r\n                if (this.isDirtyCheck && this.autoHeight.inViewport) {\r\n                    this.calculateHeight();\r\n                    this.recalculatedHeight.emit();\r\n                }\r\n            }, AutoHeightDirective.DELAY);\r\n        });\r\n    }\r\n\r\n    public calculateHeight(): void {\r\n        if (this.canCalculated) {\r\n            this.setHeightByParent();\r\n        }\r\n    }\r\n\r\n    public markForCheck(): void {\r\n        this.isDirtyCheck = true;\r\n        if (this.parentOffsetHeight <= TableBuilderOptionsImpl.ROW_HEIGHT) {\r\n            this.useOnlyAutoViewPort = true;\r\n        }\r\n    }\r\n\r\n    private getDefaultHeight(): string {\r\n        const scrollbarHeight: number = this.childElement.offsetHeight - this.childElement.clientHeight || 0;\r\n        return `calc(${this.columnHeight + scrollbarHeight + this.headerHeight + this.footerHeight}px)`;\r\n    }\r\n\r\n    private getHeightByParent({ paddingTop, paddingBottom }: BoxView): string {\r\n        const viewportHeight: number = this.parentOffsetHeight - parseInt(AutoHeightDirective.HEAD_TOP);\r\n        return `calc(${viewportHeight}px - ${paddingTop} - ${paddingBottom})`;\r\n    }\r\n\r\n    private getHeightByViewPort({ paddingTop, paddingBottom }: BoxView): string {\r\n        const viewportHeight: number = this.autoViewHeight - parseInt(AutoHeightDirective.HEAD_TOP);\r\n        return this.columnHeight > viewportHeight\r\n            ? `calc(${viewportHeight}px - ${paddingTop} - ${paddingBottom})`\r\n            : this.getDefaultHeight();\r\n    }\r\n\r\n    private setHeightByParent(): void {\r\n        this.currentElement.setAttribute('style', this.style);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Any, KeyMap } from '../interfaces/table-builder.internal';\r\nimport { checkValueIsEmpty } from '../operators/check-value-is-empty';\r\nimport { getDeepValue } from '../operators/deep-value';\r\n\r\n@Pipe({ name: 'deepPath', pure: true })\r\nexport class DeepPathPipe implements PipeTransform {\r\n    public transform(item: KeyMap, path: string): Any {\r\n        const result: Any = getDeepValue(item, path);\r\n        return checkValueIsEmpty(result) ? '-' : result;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Any, KeyMap } from '../interfaces/table-builder.internal';\r\nimport { checkValueIsEmpty } from '../operators/check-value-is-empty';\r\n\r\n@Pipe({ name: 'defaultValue', pure: true })\r\nexport class DefaultValuePipe implements PipeTransform {\r\n    public transform(item: KeyMap, key: string): Any {\r\n        const result: Any = item[key];\r\n        return checkValueIsEmpty(result) ? '-' : result;\r\n    }\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    Input,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { SelectionService } from '../../services/selection/selection.service';\r\nimport { ImplicitContext, TableRow } from '../../interfaces/table-builder.external';\r\nimport { TableLineRow } from '../common/table-line-row';\r\nimport { UtilsService } from '../../services/utils/utils.service';\r\nimport { detectChanges } from '../../operators/detect-changes';\r\n\r\n@Component({\r\n    selector: 'table-cell',\r\n    templateUrl: './table-cell.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TableCellComponent extends TableLineRow implements OnInit, OnDestroy {\r\n    @Input() public item: TableRow;\r\n    @Input() public index: number;\r\n    @Input() public parent: HTMLDivElement;\r\n    @Input('is-filterable') public isFilterable: boolean;\r\n\r\n    public loaded: boolean;\r\n    private taskId: number;\r\n    public contextType: typeof ImplicitContext = ImplicitContext;\r\n\r\n    constructor(\r\n        public readonly cd: ChangeDetectorRef,\r\n        public readonly selection: SelectionService,\r\n        protected readonly utils: UtilsService,\r\n        private readonly ngZone: NgZone\r\n    ) {\r\n        super(selection, utils);\r\n        this.cd.reattach();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (this.isRendered) {\r\n            this.loaded = true;\r\n        } else {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                this.taskId = window.setTimeout(() => {\r\n                    this.loaded = true;\r\n                    detectChanges(this.cd);\r\n                }, this.index);\r\n            });\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        window.clearTimeout(this.taskId);\r\n    }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, Output } from '@angular/core';\r\n\r\n@Directive({ selector: '[observerView]' })\r\nexport class ObserverViewDirective implements AfterViewInit, OnDestroy {\r\n    private static readonly MIN_TIME_IDLE: number = 120;\r\n    @Output() public observeVisible: EventEmitter<boolean> = new EventEmitter();\r\n    @Input('rendered') public isRendered: boolean;\r\n    private observer: IntersectionObserver = null;\r\n    private previousRation: number = 0.0;\r\n    private frameId: number;\r\n\r\n    constructor(private element: ElementRef, private readonly ngZone: NgZone) {}\r\n\r\n    public ngAfterViewInit(): void {\r\n        this.observer = new IntersectionObserver(\r\n            (entries: IntersectionObserverEntry[]): void => {\r\n                entries.forEach((entry: IntersectionObserverEntry) => {\r\n                    this.ngZone.runOutsideAngular(() => {\r\n                        const isVisible: boolean =\r\n                            entry.intersectionRatio > this.previousRation || entry.isIntersecting;\r\n\r\n                        if (this.isRendered) {\r\n                            clearTimeout(this.frameId);\r\n                            this.frameId = window.setTimeout(() => {\r\n                                this.observeVisible.emit(isVisible);\r\n                            }, ObserverViewDirective.MIN_TIME_IDLE);\r\n                        } else {\r\n                            window.requestAnimationFrame(() => this.observeVisible.emit(isVisible));\r\n                        }\r\n                    });\r\n\r\n                    this.previousRation = entry.intersectionRatio;\r\n                });\r\n            },\r\n            {\r\n                root: null,\r\n                rootMargin: '0px 0px 0px 0px',\r\n                threshold: [0]\r\n            }\r\n        );\r\n\r\n        this.observer.observe(this.element.nativeElement);\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.element = { nativeElement: null };\r\n        clearTimeout(this.frameId);\r\n        this.observer.disconnect();\r\n    }\r\n}\r\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ContextMenuService } from '../../../services/context-menu/context-menu.service';\nimport { ContextMenuState } from '../../../services/context-menu/context-menu.interface';\nimport { ContextItemEvent } from '../../../interfaces/table-builder.external';\nimport { UtilsService } from '../../../services/utils/utils.service';\nimport { Subscription } from 'rxjs';\nimport { detectChanges } from '../../../operators/detect-changes';\n\n@Component({\n    selector: 'ngx-context-menu-item',\n    templateUrl: './ngx-context-menu-item.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxContextMenuItemComponent implements OnInit, OnDestroy {\n    private static readonly MIN_PADDING: number = 25;\n    @Input() public visible: boolean = true;\n    @Input() public contextTitle: boolean = null;\n    @Input() public disable: boolean = false;\n    @Input() public divider: boolean = false;\n    @Input('disable-sub-menu') public disableSubMenu: boolean = false;\n    @Input('sub-menu-width') public subMenuWidth: number = 300;\n    @Output() public onClick: EventEmitter<ContextItemEvent> = new EventEmitter();\n    @ViewChild('item', { static: false }) public itemRef: ElementRef<HTMLDivElement>;\n    public offsetX: number = null;\n    public offsetY: number = null;\n    private subscription: Subscription;\n    private taskId: number;\n\n    constructor(\n        private readonly contextMenu: ContextMenuService,\n        private readonly cd: ChangeDetectorRef,\n        private readonly utils: UtilsService,\n        private readonly ngZone: NgZone\n    ) {}\n\n    public get state(): Partial<ContextMenuState> {\n        return this.contextMenu.state;\n    }\n\n    public get clientRect(): Partial<ClientRect | DOMRect> {\n        return (this.itemElement.getBoundingClientRect && this.itemElement.getBoundingClientRect()) || {};\n    }\n\n    private get itemElement(): Partial<HTMLDivElement> {\n        return (this.itemRef && this.itemRef.nativeElement) || {};\n    }\n\n    public ngOnInit(): void {\n        this.subscription = this.contextMenu.events.subscribe(() => detectChanges(this.cd));\n    }\n\n    public ngOnDestroy(): void {\n        this.itemRef = null;\n        this.subscription.unsubscribe();\n    }\n\n    public calculateSubMenuPosition(ref: HTMLDivElement): void {\n        const contentExist: boolean = ref.innerHTML.trim().length !== 0;\n        if (contentExist) {\n            this.offsetX = this.clientRect.left + this.subMenuWidth - NgxContextMenuItemComponent.MIN_PADDING;\n            this.offsetX = this.offsetX - this.overflowX();\n\n            this.offsetY = this.clientRect.top - NgxContextMenuItemComponent.MIN_PADDING;\n            this.offsetY = this.offsetY - this.overflowY(ref);\n        }\n    }\n\n    public overflowX(): number {\n        const overflowX: number = this.subMenuWidth + this.offsetX - this.utils.bodyRect.width;\n        return overflowX > 0 ? overflowX + UtilsService.SCROLLBAR_WIDTH : 0;\n    }\n\n    public overflowY(ref: HTMLDivElement): number {\n        const overflowY: number = ref.offsetHeight + this.offsetY - this.utils.bodyRect.height;\n        return overflowY > 0 ? overflowY + UtilsService.SCROLLBAR_WIDTH : 0;\n    }\n\n    public emitClick(event: MouseEvent): void {\n        if (!this.disable) {\n            this.deferCloseMenu();\n\n            this.onClick.emit({\n                preventDefault: (): void => {\n                    window.clearTimeout(this.taskId);\n                }\n            });\n\n            event.stopPropagation();\n        }\n    }\n\n    private deferCloseMenu(): void {\n        this.ngZone.runOutsideAngular(() => {\n            this.taskId = window.setTimeout(() => {\n                this.contextMenu.close();\n            });\n        });\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'ngx-context-menu-divider',\n    template: '<div class=\"context-menu__divider\"></div>',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxContextMenuDividerComponent {}\n","import { ChangeDetectionStrategy, Component, HostBinding, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'ngx-menu-content',\n    templateUrl: './ngx-menu-content.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxMenuContentComponent {\n    @Input() public icon: string = null;\n    @Input('no-margin') public noMargin: boolean = null;\n    @Input('align-center') public alignCenter: boolean = null;\n\n    @HostBinding('class')\n    public get class(): string {\n        const cssClasses: string = `${this.noMargin !== null ? 'content-phrase' : ''}`;\n        return this.icon !== null ? `icon-place ${cssClasses}` : cssClasses;\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'ngx-empty',\n    template: '<ng-content></ng-content>',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxEmptyComponent {}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nimport { TableBuilderOptionsImpl } from '../../config/table-builder-options';\nimport { FilterableService } from '../../services/filterable/filterable.service';\nimport { FilterEvent, TableFilterType } from '../../services/filterable/filterable.interface';\nimport { detectChanges } from '../../operators/detect-changes';\n\nconst { TIME_RELOAD }: typeof TableBuilderOptionsImpl = TableBuilderOptionsImpl;\n\n@Component({\n    selector: 'ngx-filter-viewer',\n    template: '<span [class.filter-founded]=\"founded\" [innerHTML]=\"html\"></span>',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgxFilterViewerComponent implements OnChanges, OnInit, OnDestroy {\n    @Input() public text: string = null;\n    @Input() public key: string = null;\n    @Input() public index: number = 0;\n    public html: string | SafeHtml;\n    public founded: boolean = false;\n    private subscription: Subscription;\n    private taskId: number;\n\n    constructor(\n        private readonly ngZone: NgZone,\n        private readonly cd: ChangeDetectorRef,\n        private readonly sanitizer: DomSanitizer,\n        private readonly filterable: FilterableService\n    ) {\n        this.cd.reattach();\n    }\n\n    private static wrapSelectedHtml(finder: string): string {\n        return `<span style=\"background-color: #FFFF00; color: #000\">${finder}</span>`;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes['text'] && changes['text'].firstChange) {\n            this.defaultHtmlValue();\n        }\n    }\n\n    public ngOnInit(): void {\n        this.subscription = this.filterable.events.subscribe((event: FilterEvent) => {\n            if (this.filterable.definition[this.key] || this.filterable.globalFilterValue) {\n                this.changeSelection(event);\n            } else {\n                this.defaultHtmlValue();\n            }\n\n            detectChanges(this.cd);\n        });\n    }\n\n    public ngOnDestroy(): void {\n        this.subscription.unsubscribe();\n    }\n\n    private changeSelection(event: FilterEvent): void {\n        this.ngZone.runOutsideAngular(() => {\n            window.clearInterval(this.taskId);\n            this.taskId = window.setTimeout(() => {\n                if (event.value || this.filterable.definition[this.key]) {\n                    this.selected(event);\n                } else {\n                    this.defaultHtmlValue();\n                }\n\n                detectChanges(this.cd);\n            }, TIME_RELOAD + this.index);\n        });\n    }\n\n    private selected(event: FilterEvent): void {\n        const value: string = this.filterable.definition[this.key] || event.value;\n        const type: TableFilterType = this.filterable.definition[this.key]\n            ? this.filterable.filterTypeDefinition[this.key]\n            : event.type;\n\n        if (type === TableFilterType.DOES_NOT_EQUAL || type === TableFilterType.DOES_NOT_CONTAIN) {\n            return;\n        }\n\n        let regexp: RegExp;\n        const escapedValue: string = value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n        if (type === TableFilterType.START_WITH) {\n            regexp = new RegExp(`^${escapedValue}`, 'i');\n        } else if (type === TableFilterType.END_WITH) {\n            regexp = new RegExp(`${escapedValue}$`, 'i');\n        } else if (type === TableFilterType.EQUALS) {\n            regexp = new RegExp(`^${escapedValue}$`, 'i');\n        } else {\n            regexp = new RegExp(`${escapedValue}`, 'ig');\n        }\n\n        const trustedHtml: string = String(this.text).replace(regexp, (finder: string) =>\n            NgxFilterViewerComponent.wrapSelectedHtml(finder)\n        );\n\n        this.html = this.sanitizer.bypassSecurityTrustHtml(trustedHtml);\n\n        if (trustedHtml.includes('span')) {\n            this.founded = true;\n        }\n    }\n\n    private defaultHtmlValue(): void {\n        this.html = this.text;\n        this.founded = false;\n    }\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'drag-icon',\n    templateUrl: './drag-icon.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DragIconComponent {}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'ngx-source-null',\n    template: '<ng-content></ng-content>',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxSourceNullComponent {}\n","import { AfterViewInit, Directive, Input, NgZone, OnDestroy } from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({ selector: '[overflowTooltip]' })\nexport class OverflowTooltipDirective implements AfterViewInit, OnDestroy {\n    @Input('overflowTooltip') public element: HTMLDivElement = null;\n    @Input('parent') public parent: HTMLDivElement = null;\n    @Input('text-center') public textCenter: boolean = null;\n    private destroy$: Subject<boolean> = new Subject<boolean>();\n\n    /**\n     * Minimal time before show tooltip\n     */\n    private readonly timeIdle: number = 500;\n    private readonly overflowSelector: string = 'table-grid__cell-overflow-content';\n    private frameId: number = null;\n\n    constructor(private ngZone: NgZone) {}\n\n    private get overflowContentElem(): HTMLDivElement {\n        return document.querySelector(`.${this.overflowSelector}`);\n    }\n\n    private static checkOverflow(element: HTMLDivElement, parent: HTMLDivElement): boolean {\n        return (\n            element.offsetWidth > parent.offsetWidth ||\n            element.offsetHeight > parent.offsetHeight ||\n            element.scrollWidth > element.offsetWidth ||\n            element.scrollHeight > element.offsetHeight\n        );\n    }\n\n    public ngAfterViewInit(): void {\n        fromEvent(this.element, 'mouseenter')\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => this.detectCheckOverflow());\n        fromEvent(this.element, 'mouseleave')\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n                clearInterval(this.frameId);\n            });\n    }\n\n    /**\n     * fix problem with memory leak\n     */\n    public ngOnDestroy(): void {\n        clearInterval(this.frameId);\n        this.removeElement();\n        this.destroy$.next(true);\n        this.destroy$.unsubscribe();\n        this.ngZone = null;\n        this.element = null;\n        this.parent = null;\n        this.destroy$ = null;\n    }\n\n    private detectCheckOverflow(): void {\n        clearInterval(this.frameId);\n        this.ngZone.runOutsideAngular(() => {\n            this.frameId = window.setTimeout(() => {\n                const isOverflow: boolean = OverflowTooltipDirective.checkOverflow(this.element, this.parent);\n                if (isOverflow) {\n                    this.showTooltip();\n                }\n            }, this.timeIdle);\n        });\n    }\n\n    private showTooltip(): void {\n        if (this.overflowContentElem) {\n            this.removeElement();\n            return;\n        }\n\n        const elem: HTMLDivElement = document.createElement('div');\n        const rect: ClientRect | DOMRect = this.element.getBoundingClientRect();\n        elem.classList.add(this.overflowSelector);\n\n        if (this.textCenter) {\n            elem.classList.add('text-center');\n        }\n\n        elem.style.cssText = `left: ${rect.left}px; top: ${rect.top}px`;\n        document.body.appendChild(elem);\n\n        this.ngZone.runOutsideAngular(() => {\n            window.setTimeout(() => {\n                if (this.overflowContentElem) {\n                    this.overflowContentElem.classList.add('visible');\n                    this.overflowContentElem.innerHTML = this.element.innerHTML.trim().replace(/<!--.*?-->/g, '');\n\n                    fromEvent(this.overflowContentElem, 'mouseleave')\n                        .pipe(takeUntil(this.destroy$))\n                        .subscribe(() => this.removeElement());\n                }\n            });\n        });\n    }\n\n    private removeElement(): void {\n        if (this.overflowContentElem) {\n            this.overflowContentElem.parentNode.removeChild(this.overflowContentElem);\n        }\n    }\n}\n","import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { VirtualScrollerModule } from 'ngx-virtual-scroller';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NGX_TABLE_OPTIONS } from './table/config/table-builder.tokens';\r\nimport { TableBuilderComponent } from './table/table-builder.component';\r\nimport { WheelThrottlingDirective } from './table/directives/wheel.directive';\r\nimport { TableTheadComponent } from './table/components/table-thead/table-thead.component';\r\nimport { TableTbodyComponent } from './table/components/table-tbody/table-tbody.component';\r\nimport { AutoHeightDirective } from './table/directives/auto-height.directive';\r\nimport { NgxColumnComponent } from './table/components/ngx-column/ngx-column.component';\r\nimport { TableBuilderOptions } from './table/interfaces/table-builder.external';\r\nimport { TemplateHeadThDirective } from './table/directives/rows/template-head-th.directive';\r\nimport { TemplateBodyTdDirective } from './table/directives/rows/template-body-td.directive';\r\nimport { DeepPathPipe } from './table/pipes/deep-path.pipe';\r\nimport { UtilsService } from './table/services/utils/utils.service';\r\nimport { TableBuilderOptionsImpl } from './table/config/table-builder-options';\r\nimport { DefaultValuePipe } from './table/pipes/default-value.pipe';\r\nimport { NgxOptionsComponent } from './table/components/ngx-options/ngx-options.component';\r\nimport { WebWorkerThreadService } from './table/worker/worker-thread.service';\r\nimport { TableCellComponent } from './table/components/table-cell/table-cell.component';\r\nimport { ObserverViewDirective } from './table/directives/observer-view.directive';\r\nimport { NgxContextMenuComponent } from './table/components/ngx-context-menu/ngx-context-menu.component';\r\nimport { NgxContextMenuItemComponent } from './table/components/ngx-context-menu/ngx-context-menu-item/ngx-context-menu-item.component';\r\nimport { NgxContextMenuDividerComponent } from './table/components/ngx-context-menu/ngx-context-menu-divider/ngx-context-menu-divider.component';\r\nimport { NgxMenuContentComponent } from './table/components/ngx-context-menu/ngx-context-menu-item/ngx-menu-content-place/ngx-menu-content.component';\r\nimport { NgxEmptyComponent } from './table/components/ngx-empty/ngx-empty.component';\r\nimport { NgxHeaderComponent } from './table/components/ngx-header/ngx-header.component';\r\nimport { NgxFooterComponent } from './table/components/ngx-footer/ngx-footer.component';\r\nimport { NgxFilterViewerComponent } from './table/components/ngx-filter-viewer/ngx-filter-viewer.component';\r\nimport { NgxFilterComponent } from './table/components/ngx-filter/ngx-filter.component';\r\nimport { NgxFilterDirective } from './table/directives/ngx-filter.directive';\r\nimport { DragIconComponent } from './table/components/drag-icon/drag-icon.component';\r\nimport { NgxSourceNullComponent } from './table/components/ngx-source-null/ngx-source-null.component';\r\nimport { OverflowTooltipDirective } from './table/directives/overflow-tooltip.directive';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, VirtualScrollerModule, DragDropModule],\r\n    declarations: [\r\n        TableBuilderComponent,\r\n        WheelThrottlingDirective,\r\n        AutoHeightDirective,\r\n        TableTheadComponent,\r\n        TableTbodyComponent,\r\n        NgxColumnComponent,\r\n        TemplateHeadThDirective,\r\n        TemplateBodyTdDirective,\r\n        DeepPathPipe,\r\n        DefaultValuePipe,\r\n        NgxOptionsComponent,\r\n        TableCellComponent,\r\n        ObserverViewDirective,\r\n        NgxContextMenuComponent,\r\n        NgxContextMenuItemComponent,\r\n        NgxContextMenuDividerComponent,\r\n        NgxMenuContentComponent,\r\n        NgxEmptyComponent,\r\n        NgxHeaderComponent,\r\n        NgxFooterComponent,\r\n        NgxFilterViewerComponent,\r\n        NgxFilterComponent,\r\n        NgxFilterDirective,\r\n        DragIconComponent,\r\n        NgxSourceNullComponent,\r\n        OverflowTooltipDirective\r\n    ],\r\n    providers: [UtilsService, WebWorkerThreadService],\r\n    exports: [\r\n        TableBuilderComponent,\r\n        TemplateHeadThDirective,\r\n        TemplateBodyTdDirective,\r\n        NgxColumnComponent,\r\n        NgxOptionsComponent,\r\n        NgxContextMenuComponent,\r\n        NgxContextMenuItemComponent,\r\n        NgxContextMenuDividerComponent,\r\n        NgxMenuContentComponent,\r\n        NgxEmptyComponent,\r\n        NgxHeaderComponent,\r\n        NgxFooterComponent,\r\n        NgxFilterViewerComponent,\r\n        NgxFilterComponent,\r\n        NgxFilterDirective,\r\n        NgxSourceNullComponent\r\n    ]\r\n})\r\nexport class TableBuilderModule {\r\n    private static readonly ROOT_OPTIONS: InjectionToken<string> = new InjectionToken<string>('NGX_TABLE_OPTIONS');\r\n\r\n    public static forRoot(config: Partial<TableBuilderOptions> = {}): ModuleWithProviders {\r\n        return {\r\n            ngModule: TableBuilderModule,\r\n            providers: [\r\n                {\r\n                    provide: TableBuilderModule.ROOT_OPTIONS,\r\n                    useValue: config\r\n                },\r\n                {\r\n                    provide: NGX_TABLE_OPTIONS,\r\n                    useFactory: TableBuilderModule.loggerConfigFactory,\r\n                    deps: [TableBuilderModule.ROOT_OPTIONS]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    private static loggerConfigFactory(config: Partial<TableBuilderOptions>): TableBuilderOptions {\r\n        return Object.assign(new TableBuilderOptionsImpl(), config);\r\n    }\r\n}\r\n"],"names":["tslib_1.__extends","tslib_1.__values","TIME_IDLE","TIME_RELOAD"],"mappings":"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"}